memberSearchIndex = [{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"A"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"A2F","l":"A2F(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"A2FReducer","l":"A2FReducer(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"AbstractAnalysis(Analysis.Direction)","url":"%3Cinit%3E(org.checkerframework.dataflow.analysis.Analysis.Direction)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"AbstractAtmComboVisitor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"AbstractCFGVisualizer()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"AbstractNodeVisitor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"AbstractQualifierPolymorphism(ProcessingEnvironment, AnnotatedTypeFactory)","url":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.javacutil","c":"AbstractTypeProcessor","l":"AbstractTypeProcessor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"AbstractViewpointAdapter(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"accept(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM, AtmComboVisitor<RETURN_TYPE, PARAM>)","url":"accept(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM,org.checkerframework.framework.type.visitor.AtmComboVisitor)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"accept(AnnotatedTypeVisitor<R, P>, P)","url":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","url":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","url":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","url":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","url":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNoType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","url":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNullType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","url":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedPrimitiveType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","url":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"accept(AnnotatedTypeVisitor<R, P>, P)","url":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedUnionType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","url":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","url":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"accept(JavaExpressionVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"accept(JavaExpressionVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"accept(JavaExpressionVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"accept(JavaExpressionVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"accept(JavaExpressionVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"accept(JavaExpressionVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"accept(JavaExpressionVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"accept(JavaExpressionVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"accept(JavaExpressionVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"accept(JavaExpressionVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"accept(JavaExpressionVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"accept(JavaExpressionVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"accept(JavaExpressionVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseAndNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseComplementNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseOrNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseXorNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BooleanLiteralNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CharacterLiteralNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalAndNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalNotNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalOrNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DeconstructorPatternNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DoubleLiteralNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"EqualToNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExplicitThisNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatLiteralNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingDivisionNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingRemainderNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanOrEqualNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ImplicitThisNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerDivisionNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerLiteralNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerRemainderNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LeftShiftNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanOrEqualNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LongLiteralNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NotEqualNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullLiteralNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalAdditionNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMinusNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMultiplicationNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalPlusNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalSubtractionNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ShortLiteralNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SignedRightShiftNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringLiteralNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnsignedRightShiftNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"accept(NodeVisitor<R, P>, P)","url":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"accepts(AnnotatedTypeMirror, Element)","url":"accepts(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"accepts(AnnotatedTypeMirror, Element)","url":"accepts(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"accepts(AnnotatedTypeMirror, Element)","url":"accepts(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"accepts(AnnotatedTypeMirror, Element)","url":"accepts(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"accepts(AnnotatedTypeMirror, Element)","url":"accepts(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.element","c":"TypeVarUseApplier","l":"accepts(AnnotatedTypeMirror, Element)","url":"accepts(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"accepts(AnnotatedTypeMirror, Element)","url":"accepts(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsTransfer","l":"accumulate(Node, TransferResult<AccumulationValue, AccumulationStore>, String...)","url":"accumulate(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferResult,java.lang.String...)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationTransfer","l":"accumulate(Node, TransferResult<AccumulationValue, AccumulationStore>, String...)","url":"accumulate(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferResult,java.lang.String...)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnalysis","l":"AccumulationAnalysis(BaseTypeChecker, AccumulationAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.common.accumulation.AccumulationAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"AccumulationAnnotatedTypeFactory(BaseTypeChecker, Class<? extends Annotation>, Class<? extends Annotation>, Class<? extends Annotation>)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,java.lang.Class,java.lang.Class,java.lang.Class)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"AccumulationAnnotatedTypeFactory(BaseTypeChecker, Class<? extends Annotation>, Class<? extends Annotation>)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,java.lang.Class,java.lang.Class)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"accumulationChecker"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationChecker","l":"AccumulationChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory.AccumulationQualifierHierarchy","l":"AccumulationQualifierHierarchy(Collection<Class<? extends Annotation>>, Elements)","url":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationStore","l":"AccumulationStore(CFAbstractAnalysis<AccumulationValue, AccumulationStore, ?>, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,boolean)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationStore","l":"AccumulationStore(CFAbstractStore<AccumulationValue, AccumulationStore>)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationTransfer","l":"AccumulationTransfer(AccumulationAnalysis)","url":"%3Cinit%3E(org.checkerframework.common.accumulation.AccumulationAnalysis)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory.AccumulationTreeAnnotator","l":"AccumulationTreeAnnotator(AccumulationAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.accumulation.AccumulationAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationValue","l":"AccumulationValue(CFAbstractAnalysis<AccumulationValue, ?, ?>, AnnotationMirrorSet, TypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationVisitor","l":"AccumulationVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"adaptGetClassReturnTypeToReceiver(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, ExpressionTree)","url":"adaptGetClassReturnTypeToReceiver(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"adaptGetClassReturnTypeToReceiver(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, ExpressionTree)","url":"adaptGetClassReturnTypeToReceiver(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"adaptGetClassReturnTypeToReceiver(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, ExpressionTree)","url":"adaptGetClassReturnTypeToReceiver(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"adaptParameters(AnnotatedTypeFactory, AnnotatedTypeMirror.AnnotatedExecutableType, List<? extends ExpressionTree>, NewClassTree)","url":"adaptParameters(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.List,com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner.Visited","l":"add(AnnotatedTypeMirror, AnnotatedTypeMirror, RETURN_TYPE)","url":"add(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,RETURN_TYPE)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"add(AnnotationMirror)","url":"add(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"add(Block)","url":"add(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAliasedDeclAnnotation(Class<? extends Annotation>, Class<? extends Annotation>, AnnotationMirror)","url":"addAliasedDeclAnnotation(java.lang.Class,java.lang.Class,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAliasedDeclAnnotation(String, String, AnnotationMirror)","url":"addAliasedDeclAnnotation(java.lang.String,java.lang.String,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAliasedTypeAnnotation(Class<?>, AnnotationMirror)","url":"addAliasedTypeAnnotation(java.lang.Class,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAliasedTypeAnnotation(Class<?>, Class<?>, boolean, String...)","url":"addAliasedTypeAnnotation(java.lang.Class,java.lang.Class,boolean,java.lang.String...)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAliasedTypeAnnotation(String, AnnotationMirror)","url":"addAliasedTypeAnnotation(java.lang.String,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAliasedTypeAnnotation(String, Class<?>, boolean, String...)","url":"addAliasedTypeAnnotation(java.lang.String,java.lang.Class,boolean,java.lang.String...)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"addAll(Collection<? extends AnnotationMirror>)","url":"addAll(java.util.Collection)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"addAnnotation(AnnotatedTypeMirror, AnnotationMirror)","url":"addAnnotation(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"addAnnotation(AnnotationMirror)","url":"addAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"addAnnotation(AnnotationMirror)","url":"addAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"addAnnotation(AnnotationMirror)","url":"addAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"addAnnotation(AnnotationMirror)","url":"addAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"addAnnotation(AnnotationMirror)","url":"addAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"addAnnotation(Class<? extends Annotation>)","url":"addAnnotation(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAnnotationFromFieldInvariant(AnnotatedTypeMirror, AnnotatedTypeMirror, VariableElement)","url":"addAnnotationFromFieldInvariant(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"addAnnotations(Iterable<? extends AnnotationMirror>)","url":"addAnnotations(java.lang.Iterable)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"addAnnotationsFromDefaultForType(Element, AnnotatedTypeMirror)","url":"addAnnotationsFromDefaultForType(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"addAnnotationsFromDefaultForType(Element, AnnotatedTypeMirror)","url":"addAnnotationsFromDefaultForType(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addAnnotationsFromDefaultForType(Element, AnnotatedTypeMirror)","url":"addAnnotationsFromDefaultForType(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"addAtmClass(Class<? extends AnnotatedTypeMirror>, AnnotationMirror)","url":"addAtmClass(java.lang.Class,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"addBlock(Block, Set<Block>, Queue<Block>)","url":"addBlock(org.checkerframework.dataflow.cfg.block.Block,java.util.Set,java.util.Queue)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"addBlockContent(Block)","url":"addBlockContent(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addCheckedCodeDefault(AnnotationMirror, TypeUseLocation, boolean)","url":"addCheckedCodeDefault(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation,boolean)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addCheckedCodeDefault(AnnotationMirror, TypeUseLocation)","url":"addCheckedCodeDefault(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addCheckedCodeDefaults(AnnotationMirror, TypeUseLocation[])","url":"addCheckedCodeDefaults(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation[])"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingAnnotatedTypeFactory","l":"addCheckedCodeDefaults(QualifierDefaults)","url":"addCheckedCodeDefaults(org.checkerframework.framework.util.defaults.QualifierDefaults)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addCheckedCodeDefaults(QualifierDefaults)","url":"addCheckedCodeDefaults(org.checkerframework.framework.util.defaults.QualifierDefaults)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addCheckedStandardDefaults(QualifierDefaults)","url":"addCheckedStandardDefaults(org.checkerframework.framework.util.defaults.QualifierDefaults)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addClimbStandardDefaults()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","url":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","url":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","url":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","url":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","url":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","url":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","url":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","url":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","url":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","url":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","url":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror)","url":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror)","url":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"addConstraintsBetweenTargets(Set<TUConstraint>, Set<TypeVariable>, boolean, AnnotatedTypeFactory)","url":"addConstraintsBetweenTargets(java.util.Set,java.util.Set,boolean,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addDefaultAnnotations(AnnotatedTypeMirror)","url":"addDefaultAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addDefaultAnnotations(AnnotatedTypeMirror)","url":"addDefaultAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addDiagnosticFile(File)","url":"addDiagnosticFile(java.io.File)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addDiagnosticFiles(Iterable<File>)","url":"addDiagnosticFiles(java.lang.Iterable)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"adddToPathOption(String, String)","url":"adddToPathOption(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addElementDefault(Element, AnnotationMirror, TypeUseLocation)","url":"addElementDefault(javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"addExceptionalSuccessor(BlockImpl, TypeMirror)","url":"addExceptionalSuccessor(org.checkerframework.dataflow.cfg.block.BlockImpl,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationFileStore","l":"addFileOrDirectory(File)","url":"addFileOrDirectory(java.io.File)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"addInformationFromPreconditions(CFStore, AnnotatedTypeFactory, UnderlyingAST.CFGMethod, MethodTree, ExecutableElement)","url":"addInformationFromPreconditions(org.checkerframework.framework.flow.CFStore,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.dataflow.cfg.UnderlyingAST.CFGMethod,com.sun.source.tree.MethodTree,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenTransfer","l":"addInformationFromPreconditions(CFStore, AnnotatedTypeFactory, UnderlyingAST.CFGMethod, MethodTree, ExecutableElement)","url":"addInformationFromPreconditions(org.checkerframework.framework.flow.CFStore,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.dataflow.cfg.UnderlyingAST.CFGMethod,com.sun.source.tree.MethodTree,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"addInformationFromPreconditions(S, AnnotatedTypeFactory, UnderlyingAST.CFGMethod, MethodTree, ExecutableElement)","url":"addInformationFromPreconditions(S,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.dataflow.cfg.UnderlyingAST.CFGMethod,com.sun.source.tree.MethodTree,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addInheritedAnnotation(AnnotationMirror)","url":"addInheritedAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"addInitializedField(FieldAccess)","url":"addInitializedField(org.checkerframework.dataflow.expression.FieldAccess)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"addInitializedField(VariableElement)","url":"addInitializedField(javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferredValue.InferredTarget","l":"additionalAnnotations"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"addLabelForNextNode(Label)","url":"addLabelForNextNode(org.checkerframework.dataflow.cfg.builder.Label)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"LiteralTreeAnnotator","l":"addLiteralKind(LiteralKind, AnnotationMirror)","url":"addLiteralKind(org.checkerframework.framework.qual.LiteralKind,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"addMainToArgs(List<String>)","url":"addMainToArgs(java.util.List)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"addMissingAnnotation(AnnotationMirror)","url":"addMissingAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"addMissingAnnotations(Iterable<? extends AnnotationMirror>)","url":"addMissingAnnotations(java.lang.Iterable)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"addNode(Node)","url":"addNode(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"addNodes(List<? extends Node>)","url":"addNodes(java.util.List)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"addNotBothReason(Tree, String)","url":"addNotBothReason(com.sun.source.tree.Tree,java.lang.String)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"addNotDetReason(Tree, String)","url":"addNotDetReason(com.sun.source.tree.Tree,java.lang.String)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"addNotSEFreeReason(Tree, String)","url":"addNotSEFreeReason(com.sun.source.tree.Tree,java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"addOption(String, String)","url":"addOption(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addOption(String, String)","url":"addOption(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"addOption(String)","url":"addOption(java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addOption(String)","url":"addOption(java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"addOptionIfValueNonEmpty(String, String)","url":"addOptionIfValueNonEmpty(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addOptionIfValueNonEmpty(String, String)","url":"addOptionIfValueNonEmpty(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"addOptions(Iterable<String>)","url":"addOptions(java.lang.Iterable)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addOptions(Iterable<String>)","url":"addOptions(java.lang.Iterable)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"addOptions(Map<String, String>)","url":"addOptions(java.util.Map)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"addOptions(Map<String, String>)","url":"addOptions(java.util.Map)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addOptions(Map<String, String>)","url":"addOptions(java.util.Map)"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"addOrGetDeclarations(TypeVariable, AnnotatedTypeFactory, Map<TypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable>)","url":"addOrGetDeclarations(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeFactory,java.util.Map)"},{"p":"org.checkerframework.framework.util","c":"TreePathCacher","l":"addPath(Tree, TreePath)","url":"addPath(com.sun.source.tree.Tree,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"addPredecessor(BlockImpl)","url":"addPredecessor(org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addPrimaryEqualities(TypeVariable, QualifierHierarchy, AnnotationMirrorSet)","url":"addPrimaryEqualities(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addPrimarySubtypes(TypeVariable, QualifierHierarchy, AnnotationMirrorSet)","url":"addPrimarySubtypes(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addPrimarySupertype(TypeVariable, QualifierHierarchy, AnnotationMirrorSet)","url":"addPrimarySupertype(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addProcessor(String)","url":"addProcessor(java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addProcessors(Iterable<String>)","url":"addProcessors(java.lang.Iterable)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addSharedCFGForTree(Tree, ControlFlowGraph)","url":"addSharedCFGForTree(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addSourceFile(File)","url":"addSourceFile(java.io.File)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addSourceFiles(Iterable<File>)","url":"addSourceFiles(java.lang.Iterable)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"addStandardDefaults()"},{"p":"org.checkerframework.framework.type.treeannotator","c":"LiteralTreeAnnotator","l":"addStandardLiteralQualifiers()"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"addStoreAfter(Block, Node, S, boolean)","url":"addStoreAfter(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.node.Node,S,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"addStoreBefore(Block, Node, S, Store.Kind, boolean)","url":"addStoreBefore(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.node.Node,S,org.checkerframework.dataflow.analysis.Store.Kind,boolean)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"LiteralTreeAnnotator","l":"addStringPattern(String, AnnotationMirror)","url":"addStringPattern(java.lang.String,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addTargetEquality(TypeVariable, TypeVariable, AnnotationMirrorSet)","url":"addTargetEquality(javax.lang.model.type.TypeVariable,javax.lang.model.type.TypeVariable,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addTargetSubtype(TypeVariable, TypeVariable, AnnotationMirrorSet)","url":"addTargetSubtype(javax.lang.model.type.TypeVariable,javax.lang.model.type.TypeVariable,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addTargetSupertype(TypeVariable, TypeVariable, AnnotationMirrorSet)","url":"addTargetSupertype(javax.lang.model.type.TypeVariable,javax.lang.model.type.TypeVariable,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"addToClasspath(List<String>)","url":"addToClasspath(java.util.List)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"addToConvertedLookupMap(Node)","url":"addToConvertedLookupMap(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"addToConvertedLookupMap(Tree, Node)","url":"addToConvertedLookupMap(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"addToLookupMap(Node)","url":"addToLookupMap(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"addToPathOption(String, String)","url":"addToPathOption(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMapBuilder","l":"addToPrimaryRelationship(TypeVariable, TUConstraint, ConstraintMap, AnnotationMirrorSet, QualifierHierarchy)","url":"addToPrimaryRelationship(javax.lang.model.type.TypeVariable,org.checkerframework.framework.util.typeinference.constraint.TUConstraint,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.javacutil.AnnotationMirrorSet,org.checkerframework.framework.type.QualifierHierarchy)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"addToProcessorpath(List<String>)","url":"addToProcessorpath(java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"addToRuntimeClasspath(List<String>)","url":"addToRuntimeClasspath(java.util.List)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMapBuilder","l":"addToTypeRelationship(TypeVariable, AnnotatedTypeMirror, ConstraintMap, TUConstraint, AnnotationMirrorSet)","url":"addToTypeRelationship(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.util.typeinference.constraint.TUConstraint,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"addToWorklist(Block)","url":"addToWorklist(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.framework.type","c":"QualifierUpperBounds","l":"addType(Class<?>, AnnotationMirror)","url":"addType(java.lang.Class,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addTypeEqualities(TypeVariable, AnnotatedTypeMirror, AnnotationMirrorSet)","url":"addTypeEqualities(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.type","c":"QualifierUpperBounds","l":"addTypeKind(TypeKind, AnnotationMirror)","url":"addTypeKind(javax.lang.model.type.TypeKind,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"addTypeKind(TypeKind, AnnotationMirror)","url":"addTypeKind(javax.lang.model.type.TypeKind,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"addTypes(Class<?>, AnnotationMirror)","url":"addTypes(java.lang.Class,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addTypeSubtype(TypeVariable, AnnotatedTypeMirror, AnnotationMirrorSet)","url":"addTypeSubtype(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addTypeSupertype(TypeVariable, AnnotatedTypeMirror, AnnotationMirrorSet)","url":"addTypeSupertype(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addUncheckedCodeDefault(AnnotationMirror, TypeUseLocation, boolean)","url":"addUncheckedCodeDefault(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation,boolean)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addUncheckedCodeDefault(AnnotationMirror, TypeUseLocation)","url":"addUncheckedCodeDefault(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addUncheckedCodeDefaults(AnnotationMirror, TypeUseLocation[])","url":"addUncheckedCodeDefaults(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation[])"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addUncheckedStandardDefaults()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addUncheckedStandardDefaults(QualifierDefaults)","url":"addUncheckedStandardDefaults(org.checkerframework.framework.util.defaults.QualifierDefaults)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"addUseInExpression(Node)","url":"addUseInExpression(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"addUseInExpression(Node)","url":"addUseInExpression(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"adjustMethodNameUsingValueChecker(String, MethodInvocationTree)","url":"adjustMethodNameUsingValueChecker(java.lang.String,com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"adjustTypecheckResult(TypecheckResult)","url":"adjustTypecheckResult(org.checkerframework.framework.test.TypecheckResult)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"JavaDiagnosticReader","l":"advance()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"AFConstraint(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.BeforeOrAfter","l":"AFTER"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer.VisualizeWhere","l":"AFTER"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"afToTuConstraints(Set<? extends AFConstraint>, Set<TypeVariable>)","url":"afToTuConstraints(java.util.Set,java.util.Set)"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"AggregateChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.test","c":"AinferGeneratePerDirectoryTest","l":"AinferGeneratePerDirectoryTest(List<File>, Class<? extends AbstractProcessor>, String, String...)","url":"%3Cinit%3E(java.util.List,java.lang.Class,java.lang.String,java.lang.String...)"},{"p":"org.checkerframework.framework.test","c":"AinferValidatePerDirectoryTest","l":"AinferValidatePerDirectoryTest(List<File>, Class<? extends AbstractProcessor>, String, String, Class<? extends AinferGeneratePerDirectoryTest>, String...)","url":"%3Cinit%3E(java.util.List,java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String...)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"AJAVA"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"AJAVA_AS_STUB"},{"p":"org.checkerframework.framework.test","c":"AinferValidatePerDirectoryTest","l":"ajavaArgFromFiles(List<File>, String)","url":"ajavaArgFromFiles(java.util.List,java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ajavaTypes"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"AliasingAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingChecker","l":"AliasingChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory.AliasingQualifierHierarchy","l":"AliasingQualifierHierarchy(Collection<Class<? extends Annotation>>, Elements)","url":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingTransfer","l":"AliasingTransfer(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory.AliasingTreeAnnotator","l":"AliasingTreeAnnotator(AliasingAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.aliasing.AliasingAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"AliasingVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"ALL"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"ALL"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil","l":"allAnnotationFiles(String, AnnotationFileUtil.AnnotationFileType)","url":"allAnnotationFiles(java.lang.String,org.checkerframework.framework.stub.AnnotationFileUtil.AnnotationFileType)"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"allLiteralKinds()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"allQualifierKinds()"},{"p":"org.checkerframework.framework.util","c":"QualifierKindHierarchy","l":"allQualifierKinds()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedUnionType","l":"alternatives"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"ALWAYSSAFE"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"analysis"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"analysis"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"analysis"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"analysis"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"analysis"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"analysisCaches"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"AnalysisResult(IdentityHashMap<Node, V>, IdentityHashMap<Block, TransferInput<V, S>>, IdentityHashMap<Tree, Set<Node>>, IdentityHashMap<UnaryTree, BinaryTree>, Map<VariableElement, V>, Map<TransferInput<V, S>, IdentityHashMap<Node, TransferResult<V, S>>>)","url":"%3Cinit%3E(java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.Map,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"AnalysisResult(IdentityHashMap<Node, V>, IdentityHashMap<Block, TransferInput<V, S>>, IdentityHashMap<Tree, Set<Node>>, IdentityHashMap<UnaryTree, BinaryTree>, Map<VariableElement, V>)","url":"%3Cinit%3E(java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"AnalysisResult(Map<TransferInput<V, S>, IdentityHashMap<Node, TransferResult<V, S>>>)","url":"%3Cinit%3E(java.util.Map)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"analyze(Queue<IPair<ClassTree, Store>>, Queue<IPair<LambdaExpressionTree, Store>>, UnderlyingAST, List<CFAbstractAnalysis.FieldInitialValue<Value>>, ClassTree, boolean, boolean, boolean, Store)","url":"analyze(java.util.Queue,java.util.Queue,org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List,com.sun.source.tree.ClassTree,boolean,boolean,boolean,Store)"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil","l":"ANCHORED_PARAMETER_PATTERN"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"anno"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"annoFormatter"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"annoProvider"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"annosInPackage(PackageElement)","url":"annosInPackage(javax.lang.model.element.PackageElement)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"annosInType(TypeElement)","url":"annosInType(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"annotate(Element, AnnotatedTypeMirror)","url":"annotate(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"annotate(Tree, AnnotatedTypeMirror)","url":"annotate(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"annotatedForValueElement"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"annotatedGLB(AnnotatedTypeFactory, AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"annotatedGLB(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"annotatedTargets()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"annotatedTargets()"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"annotatedTargets()"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"annotatedTargets()"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"annotatedTargets()"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeCombiner","l":"AnnotatedTypeCombiner(QualifierHierarchy)","url":"%3Cinit%3E(org.checkerframework.framework.type.QualifierHierarchy)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"AnnotatedTypeCopier()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"AnnotatedTypeCopier(boolean)","url":"%3Cinit%3E(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopierWithReplacement","l":"AnnotatedTypeCopierWithReplacement()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"AnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeParameterBounds","l":"AnnotatedTypeParameterBounds(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"AnnotatedTypeReplacer()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"AnnotatedTypeReplacer(AnnotationMirror)","url":"%3Cinit%3E(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"AnnotatedTypeScanner()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"AnnotatedTypeScanner(AnnotatedTypeScanner.Reduce<R>, R)","url":"%3Cinit%3E(org.checkerframework.framework.type.visitor.AnnotatedTypeScanner.Reduce,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"AnnotatedTypeScanner(AnnotatedTypeScanner.Reduce<R>)","url":"%3Cinit%3E(org.checkerframework.framework.type.visitor.AnnotatedTypeScanner.Reduce)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"AnnotatedTypeScanner(R)","url":"%3Cinit%3E(R)"},{"p":"org.checkerframework.framework.type","c":"ElementAnnotationApplier","l":"annotateSupers(List<AnnotatedTypeMirror.AnnotatedDeclaredType>, TypeElement)","url":"annotateSupers(java.util.List,javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"annotateSupers(List<AnnotatedTypeMirror.AnnotatedDeclaredType>, TypeElement)","url":"annotateSupers(java.util.List,javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"annotation"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationBinaryName(AnnotationMirror)","url":"annotationBinaryName(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"AnnotationBuilder(ProcessingEnvironment, AnnotationMirror)","url":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"AnnotationBuilder(ProcessingEnvironment, CharSequence)","url":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment,java.lang.CharSequence)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"AnnotationBuilder(ProcessingEnvironment, Class<? extends Annotation>)","url":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment,java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"AnnotationClassLoader(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.util","c":"QualifierKindHierarchy","l":"annotationClassName(Class<? extends Annotation>)","url":"annotationClassName(java.lang.Class)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationEqualityVisitor","l":"AnnotationEqualityVisitor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.AnnotationFileAnnotations","l":"AnnotationFileAnnotations()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"AnnotationFileElementTypes(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationFileStore","l":"AnnotationFileStore()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil","l":"AnnotationFileUtil()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"annotationFromAnnotationTree(AnnotationTree)","url":"annotationFromAnnotationTree(com.sun.source.tree.AnnotationTree)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"AnnotationMirrorMap()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"AnnotationMirrorMap(Map<AnnotationMirror, ? extends V>)","url":"%3Cinit%3E(java.util.Map)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"AnnotationMirrorSet()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"AnnotationMirrorSet(AnnotationMirror)","url":"%3Cinit%3E(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"AnnotationMirrorSet(Collection<? extends AnnotationMirror>)","url":"%3Cinit%3E(java.util.Collection)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationMirrorToAnnotationExprConversion","l":"annotationMirrorSetToAnnotationExprList(AnnotationMirrorSet)","url":"annotationMirrorSetToAnnotationExprList(org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationMirrorToAnnotationExprConversion","l":"annotationMirrorToAnnotationExpr(AnnotationMirror)","url":"annotationMirrorToAnnotationExpr(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationMirrorToAnnotationExprConversion","l":"AnnotationMirrorToAnnotationExprConversion()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationMirrorToClass(AnnotationMirror)","url":"annotationMirrorToClass(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationName(AnnotationMirror)","url":"annotationName(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"annotationProvider"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"annotations"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.AnnotationSetCombiner","l":"AnnotationSetCombiner()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"annotationsForIrrelevantJavaType(TypeMirror)","url":"annotationsForIrrelevantJavaType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"annotationsForIrrelevantJavaType(TypeMirror)","url":"annotationsForIrrelevantJavaType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"annotationsFromArrayCreation(NewArrayTree, int)","url":"annotationsFromArrayCreation(com.sun.source.tree.NewArrayTree,int)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"annotationsFromTree(AnnotatedTypeTree)","url":"annotationsFromTree(com.sun.source.tree.AnnotatedTypeTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"annotationsFromTree(TypeParameterTree)","url":"annotationsFromTree(com.sun.source.tree.TypeParameterTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"annotationsFromTypeAnnotationTrees(List<? extends AnnotationTree>)","url":"annotationsFromTypeAnnotationTrees(java.util.List)"},{"p":"org.checkerframework.common.util.count","c":"AnnotationStatistics","l":"AnnotationStatistics()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationTransferVisitor","l":"AnnotationTransferVisitor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueContains(AnnotationValue, String)","url":"annotationValueContains(javax.lang.model.element.AnnotationValue,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueContains(List<? extends AnnotationValue>, String)","url":"annotationValueContains(java.util.List,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueContainsToString(AnnotationValue, String)","url":"annotationValueContainsToString(javax.lang.model.element.AnnotationValue,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueContainsToString(List<? extends AnnotationValue>, String)","url":"annotationValueContainsToString(java.util.List,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueListToEnumArray(AnnotationValue, Class<T>)","url":"annotationValueListToEnumArray(javax.lang.model.element.AnnotationValue,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueListToEnumArray(List<AnnotationValue>, Class<T>)","url":"annotationValueListToEnumArray(java.util.List,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueToList(AnnotationValue, Class<T>)","url":"annotationValueToList(javax.lang.model.element.AnnotationValue,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueToList(List<? extends AnnotationValue>, Class<T>)","url":"annotationValueToList(java.util.List,java.lang.Class)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"ListTreeAnnotator","l":"annotators"},{"p":"org.checkerframework.framework.type","c":"ElementAnnotationApplier","l":"apply(AnnotatedTypeMirror, Element, AnnotatedTypeFactory)","url":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"apply(AnnotatedTypeMirror, Element, AnnotatedTypeFactory)","url":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"apply(AnnotatedTypeMirror, Element, AnnotatedTypeFactory)","url":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.element","c":"TypeVarUseApplier","l":"apply(AnnotatedTypeMirror, Element, AnnotatedTypeFactory)","url":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"apply(AnnotatedTypeMirror, Element)","url":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"apply(AnnotatedTypeMirror, VariableElement, AnnotatedTypeFactory)","url":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.VariableElement,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"apply(AnnotatedTypeMirror.AnnotatedTypeVariable, Element, AnnotatedTypeFactory)","url":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"apply(AnnotatedTypeMirror.AnnotatedTypeVariable, Element, AnnotatedTypeFactory)","url":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.element","c":"ElementAnnotationUtil","l":"applyAllElementAnnotations(List<? extends AnnotatedTypeMirror>, List<? extends Element>, AnnotatedTypeFactory)","url":"applyAllElementAnnotations(java.util.List,java.util.List,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"applyAnnotationsFromDeclaredType(AnnotatedTypeMirror.AnnotatedDeclaredType, DeclaredType)","url":"applyAnnotationsFromDeclaredType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,javax.lang.model.type.DeclaredType)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"applyCaptureConversion(AnnotatedTypeMirror, TypeMirror)","url":"applyCaptureConversion(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"applyCaptureConversion(AnnotatedTypeMirror)","url":"applyCaptureConversion(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"applyConservativeDefaults(Element)","url":"applyConservativeDefaults(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"applyDefault(Default)","url":"applyDefault(org.checkerframework.framework.util.defaults.Default)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"applyInferredAnnotations(AnnotatedTypeMirror, CFValue)","url":"applyInferredAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.flow.CFValue)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"applyInferredAnnotations(AnnotatedTypeMirror, Value)","url":"applyInferredAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror,Value)"},{"p":"org.checkerframework.framework.type","c":"DefaultInferredTypesApplier","l":"applyInferredType(AnnotatedTypeMirror, AnnotationMirrorSet, TypeMirror)","url":"applyInferredType(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"applyQualifierParameterDefaults(Element, AnnotatedTypeMirror)","url":"applyQualifierParameterDefaults(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"applyQualifierParameterDefaults(Tree, AnnotatedTypeMirror)","url":"applyQualifierParameterDefaults(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"applyToSubpackages"},{"p":"org.checkerframework.framework.qual","c":"DefaultQualifier","l":"applyToSubpackages()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"applyUnboxing(AnnotatedTypeMirror)","url":"applyUnboxing(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.Kind","l":"ARBITRARY_CODE"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"areAllEqual(Collection<? extends AnnotatedTypeMirror>, Collection<? extends AnnotatedTypeMirror>)","url":"areAllEqual(java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"areAllFieldsInitializedOnly(ClassTree)","url":"areAllFieldsInitializedOnly(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"areAllSubtypes(Iterable<? extends AnnotatedTypeMirror>, AnnotatedTypeMirror)","url":"areAllSubtypes(java.lang.Iterable,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"areBoundsValid(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"areBoundsValid(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"areCorrespondingTypeVariables(Elements, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable)","url":"areCorrespondingTypeVariables(javax.lang.model.util.Elements,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"areEqualInHierarchy(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","url":"areEqualInHierarchy(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"areEqualInHierarchy(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"areEqualInHierarchy(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"areEqualVisitHistory"},{"p":"org.checkerframework.framework.type","c":"EqualityAtmComparer","l":"arePrimeAnnosEqual(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"arePrimeAnnosEqual(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"arePrimeAnnosEqual(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"arePrimeAnnosEqual(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"areSame(AnnotationMirror, AnnotationMirror)","url":"areSame(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"areSame(Collection<? extends AnnotationMirror>, Collection<? extends AnnotationMirror>)","url":"areSame(java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"areSame(TypeVariable, TypeVariable)","url":"areSame(javax.lang.model.type.TypeVariable,javax.lang.model.type.TypeVariable)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"areSameByClass(AnnotationMirror, Class<? extends Annotation>)","url":"areSameByClass(javax.lang.model.element.AnnotationMirror,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"areSameByClass(AnnotationMirror, Class<? extends Annotation>)","url":"areSameByClass(javax.lang.model.element.AnnotationMirror,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"areSameByName(AnnotationMirror, AnnotationMirror)","url":"areSameByName(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"areSameByName(AnnotationMirror, String)","url":"areSameByName(javax.lang.model.element.AnnotationMirror,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"areSameDeclaredTypes(Type.ClassType, Type.ClassType)","url":"areSameDeclaredTypes(com.sun.tools.javac.code.Type.ClassType,com.sun.tools.javac.code.Type.ClassType)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"areSamePrimitiveTypes(TypeMirror, TypeMirror)","url":"areSamePrimitiveTypes(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil.JavaExpressionParseException","l":"args"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"argument"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"arguments"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"arguments"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"arguments"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"arithmeticExceptionType"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"array"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"array"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"array"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.InvocationType","l":"ARRAY"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_ARRAY"},{"p":"org.checkerframework.javacutil","c":"TreeUtils.MemberReferenceKind","l":"ARRAY_CTOR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_WILDCARD"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"ArrayAccess(TypeMirror, JavaExpression, JavaExpression)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror,org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"ArrayAccessNode(ArrayAccessTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.ArrayAccessTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"ArrayCreation(TypeMirror, List<JavaExpression>, List<JavaExpression>)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror,java.util.List,java.util.List)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"ArrayCreationNode(NewArrayTree, TypeMirror, List<Node>, List<Node>)","url":"%3Cinit%3E(com.sun.source.tree.NewArrayTree,javax.lang.model.type.TypeMirror,java.util.List,java.util.List)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"arrayExpression"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"arrayIndexOutOfBoundsExceptionType"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"ARRAYLEN_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"ARRAYLENRANGE_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"arrayLenRangeFromElement"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"arrayLenRangeToElement"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"arrayLenValueElement"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"arrayLenValueElement"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"arraysAreRelevant"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"ArrayTypeNode(ArrayTypeTree, Types)","url":"%3Cinit%3E(com.sun.source.tree.ArrayTypeTree,javax.lang.model.util.Types)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"arrayValues"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"asFieldAccess(Tree)","url":"asFieldAccess(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil","l":"asFormat(String, ConversionCategory...)","url":"asFormat(java.lang.String,org.checkerframework.checker.formatter.qual.ConversionCategory...)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"asFormatCallCategories(MethodInvocationNode)","url":"asFormatCallCategories(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"asMemberOf(Types, AnnotatedTypeFactory, AnnotatedTypeMirror, Element, AnnotatedTypeMirror)","url":"asMemberOf(javax.lang.model.util.Types,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"asMemberOf(Types, AnnotatedTypeFactory, AnnotatedTypeMirror, Element)","url":"asMemberOf(javax.lang.model.util.Types,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"asMemberOf(Types, AnnotatedTypeFactory, AnnotatedTypeMirror, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"asMemberOf(javax.lang.model.util.Types,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"asMemberOf(Types, AnnotatedTypeFactory, AnnotatedTypeMirror, ExecutableElement)","url":"asMemberOf(javax.lang.model.util.Types,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"asRegex(String, int)","url":"asRegex(java.lang.String,int)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"asRegex(String)","url":"asRegex(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"AssertionErrorNode(AssertTree, Node, Node, TypeMirror)","url":"%3Cinit%3E(com.sun.source.tree.AssertTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"assertionErrorType"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"assertSameSize(Collection<?>, Collection<?>)","url":"assertSameSize(java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"assertSameSize(Collection<? extends Object>, Collection<? extends Object>, Collection<? extends Object>)","url":"assertSameSize(java.util.Collection,java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"assertTestDidNotFail(TypecheckResult)","url":"assertTestDidNotFail(org.checkerframework.framework.test.TypecheckResult)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"assertValidState()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"assignConvert(Node, TypeMirror)","url":"assignConvert(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"assignedTo(AnnotatedTypeFactory, TreePath)","url":"assignedTo(org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"assignedToVariable(AnnotatedTypeFactory, VariableTree)","url":"assignedToVariable(org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"assignmentCheck(ExpressionTree)","url":"assignmentCheck(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"AssignmentNode(Tree, Node, Node, boolean)","url":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,boolean)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"AssignmentNode(Tree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder","l":"assumeAssertionsActivatedForAssertTree(BaseTypeChecker, AssertTree)","url":"assumeAssertionsActivatedForAssertTree(org.checkerframework.common.basetype.BaseTypeChecker,com.sun.source.tree.AssertTree)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"assumeAssertionsDisabled"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"assumeAssertionsEnabled"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"assumeAssertionsEnabledFor(AssertTree)","url":"assumeAssertionsEnabledFor(com.sun.source.tree.AssertTree)"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder.CFCFGTranslationPhaseOne","l":"assumeAssertionsEnabledFor(AssertTree)","url":"assumeAssertionsEnabledFor(com.sun.source.tree.AssertTree)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"asSuper(AnnotatedTypeFactory, AnnotatedTypeMirror, T)","url":"asSuper(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,T)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"asSuper(AnnotatedTypeMirror, T)","url":"asSuper(org.checkerframework.framework.type.AnnotatedTypeMirror,T)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"asSuper(TypeMirror, TypeMirror, ProcessingEnvironment)","url":"asSuper(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"AsSuperVisitor(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.test","c":"AinferValidatePerDirectoryTest","l":"astubsArgFromFiles(List<File>, String)","url":"astubsArgFromFiles(java.util.List,java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"asUse()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"asUse()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"asUse()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atConstructorInvocation(AnnotatedTypeMirror.AnnotatedExecutableType, NewClassTree)","url":"atConstructorInvocation(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"atConstructorInvocation(NewClassTree)","url":"atConstructorInvocation(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atConstructorInvocation(String, NewClassTree, SourceChecker)","url":"atConstructorInvocation(java.lang.String,com.sun.source.tree.NewClassTree,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atExpression(AnnotatedTypeMirror, ExpressionTree)","url":"atExpression(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atFieldAccess(AnnotatedTypeMirror, MemberSelectTree)","url":"atFieldAccess(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.MemberSelectTree)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"atFieldAccess(JavaExpression)","url":"atFieldAccess(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atFieldAccess(String, MemberSelectTree, SourceChecker)","url":"atFieldAccess(java.lang.String,com.sun.source.tree.MemberSelectTree,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atFieldDecl(String, VariableElement, SourceChecker)","url":"atFieldDecl(java.lang.String,javax.lang.model.element.VariableElement,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atLambdaParameter(String, LambdaExpressionTree, TreePath, SourceChecker)","url":"atLambdaParameter(java.lang.String,com.sun.source.tree.LambdaExpressionTree,com.sun.source.util.TreePath,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atLocalVariable(AnnotatedTypeMirror, Element)","url":"atLocalVariable(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atMethodBody(AnnotatedTypeMirror, MethodTree)","url":"atMethodBody(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"atMethodBody(MethodTree)","url":"atMethodBody(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atMethodBody(String, MethodTree, SourceChecker)","url":"atMethodBody(java.lang.String,com.sun.source.tree.MethodTree,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atMethodDecl(String, ExecutableElement, SourceChecker)","url":"atMethodDecl(java.lang.String,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atMethodInvocation(AnnotatedTypeMirror.AnnotatedExecutableType, MethodInvocationTree)","url":"atMethodInvocation(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"atMethodInvocation(MethodInvocationNode)","url":"atMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"atMethodInvocation(MethodInvocationTree)","url":"atMethodInvocation(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atMethodInvocation(String, MethodInvocationNode, SourceChecker)","url":"atMethodInvocation(java.lang.String,org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atMethodInvocation(String, MethodInvocationTree, SourceChecker)","url":"atMethodInvocation(java.lang.String,com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atParameterizedTypeUse(List<AnnotatedTypeParameterBounds>, TypeElement)","url":"atParameterizedTypeUse(java.util.List,javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atPath(String, TreePath, SourceChecker)","url":"atPath(java.lang.String,com.sun.source.util.TreePath,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"atto"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"attributeFromAnnotationValue(ExecutableElement, AnnotationValue, ProcessingEnvironment)","url":"attributeFromAnnotationValue(javax.lang.model.element.ExecutableElement,javax.lang.model.element.AnnotationValue,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atTypeDecl(AnnotatedTypeMirror, TypeElement)","url":"atTypeDecl(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atTypeDecl(String, TypeElement, SourceChecker)","url":"atTypeDecl(java.lang.String,javax.lang.model.element.TypeElement,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atVariableDeclaration(AnnotatedTypeMirror, Tree, VariableElement)","url":"atVariableDeclaration(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"atypeFactory"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationTransfer","l":"atypeFactory"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"atypeFactory"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"atypeFactory"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"atypeFactory"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"atypeFactory"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder.CFCFGTranslationPhaseOne","l":"atypeFactory"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"atypeFactory"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"atypeFactory"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"atypeFactory"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"atypeFactory"},{"p":"org.checkerframework.framework.type.treeannotator","c":"TreeAnnotator","l":"atypeFactory"},{"p":"org.checkerframework.framework.type.typeannotator","c":"TypeAnnotator","l":"atypeFactory"},{"p":"org.checkerframework.framework.util","c":"ContractsFromMethod","l":"atypeFactory"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"atypeFactory"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atypeFactory"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.AnnotationFileAnnotations","l":"atypes"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"AutoValueSupport(CalledMethodsAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.checker.calledmethods.CalledMethodsAnnotatedTypeFactory)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"available(InputStream)","url":"available(java.io.InputStream)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.Direction","l":"BACKWARD"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"BackwardAnalysisImpl()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"BackwardAnalysisImpl(T)","url":"%3Cinit%3E(T)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist.BackwardDFOComparator","l":"BackwardDFOComparator()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.basetype","c":"BaseAnnotatedTypeFactory","l":"BaseAnnotatedTypeFactory(BaseTypeChecker, boolean)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,boolean)"},{"p":"org.checkerframework.common.basetype","c":"BaseAnnotatedTypeFactory","l":"BaseAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"BaseAnnotatedTypeFactoryForIndexChecker(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"BaseTypeChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"BaseTypeValidator(BaseTypeChecker, BaseTypeVisitor<?>, AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.common.basetype.BaseTypeVisitor,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"BaseTypeVisitor(BaseTypeChecker, Factory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,Factory)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"BaseTypeVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.javacutil","c":"BasicAnnotationProvider","l":"BasicAnnotationProvider()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"BasicTypeProcessor","l":"BasicTypeProcessor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.BeforeOrAfter","l":"BEFORE"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer.VisualizeWhere","l":"BEFORE"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"BINARY_NAME"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"binaryName(TypeMirror)","url":"binaryName(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"binaryNumericPromotion(Node, TypeMirror)","url":"binaryNumericPromotion(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"BinaryOperation(BinaryOperationNode, JavaExpression, JavaExpression)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.BinaryOperationNode,org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"BinaryOperation(TypeMirror, Tree.Kind, JavaExpression, JavaExpression)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror,com.sun.source.tree.Tree.Kind,org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"BinaryOperationNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"binaryPromotedType(TypeMirror, TypeMirror)","url":"binaryPromotedType(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"binaryTreeArgTypes(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"binaryTreeArgTypes(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"binaryTreeArgTypes(BinaryTree)","url":"binaryTreeArgTypes(com.sun.source.tree.BinaryTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"binaryTreeArgTypes(TypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"binaryTreeArgTypes(javax.lang.model.type.TypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"bindingPatternTreeGetVariable(Tree)","url":"bindingPatternTreeGetVariable(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DeconstructorPatternNode","l":"bindingVariables"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"bindingVariables"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"bitwiseAnd(Number)","url":"bitwiseAnd(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"bitwiseAnd(Number)","url":"bitwiseAnd(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"bitwiseAnd(Number)","url":"bitwiseAnd(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"bitwiseAnd(Number)","url":"bitwiseAnd(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"bitwiseAnd(Number)","url":"bitwiseAnd(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"bitwiseAnd(Number)","url":"bitwiseAnd(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"bitwiseAnd(Number)","url":"bitwiseAnd(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"bitwiseAnd(Range)","url":"bitwiseAnd(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseAndNode","l":"BitwiseAndNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"bitwiseComplement()"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"bitwiseComplement()"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"bitwiseComplement()"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"bitwiseComplement()"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"bitwiseComplement()"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"bitwiseComplement()"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"bitwiseComplement()"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"bitwiseComplement()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseComplementNode","l":"BitwiseComplementNode(UnaryTree, Node)","url":"%3Cinit%3E(com.sun.source.tree.UnaryTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"bitwiseOr(Number)","url":"bitwiseOr(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"bitwiseOr(Number)","url":"bitwiseOr(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"bitwiseOr(Number)","url":"bitwiseOr(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"bitwiseOr(Number)","url":"bitwiseOr(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"bitwiseOr(Number)","url":"bitwiseOr(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"bitwiseOr(Number)","url":"bitwiseOr(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"bitwiseOr(Number)","url":"bitwiseOr(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"bitwiseOr(Range)","url":"bitwiseOr(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseOrNode","l":"BitwiseOrNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"bitwiseXor(Number)","url":"bitwiseXor(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"bitwiseXor(Number)","url":"bitwiseXor(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"bitwiseXor(Number)","url":"bitwiseXor(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"bitwiseXor(Number)","url":"bitwiseXor(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"bitwiseXor(Number)","url":"bitwiseXor(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"bitwiseXor(Number)","url":"bitwiseXor(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"bitwiseXor(Number)","url":"bitwiseXor(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"bitwiseXor(Range)","url":"bitwiseXor(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseXorNode","l":"BitwiseXorNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"block"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"block"},{"p":"org.checkerframework.framework.util","c":"ExecUtil","l":"BLOCK_SIZE"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"blockCount"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"BlockImpl(Block.BlockType)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.block.Block.BlockType)"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"BOOLEAN"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"BOOLEAN"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"BOOLEAN_FALSE"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"BOOLEAN_TRUE"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BooleanLiteralNode","l":"BooleanLiteralNode(LiteralTree)","url":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"BOOLVAL_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"boolValValueElement"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"BOOT_CLASS_PATH_REGEX"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator.PropagationDirection","l":"BOTH"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.Kind","l":"BOTH"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"bothHaveSpecificPrefix(Prefix, Prefix, Prefix)","url":"bothHaveSpecificPrefix(org.checkerframework.checker.units.qual.Prefix,org.checkerframework.checker.units.qual.Prefix,org.checkerframework.checker.units.qual.Prefix)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"bottom"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"bottom"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant.Type","l":"BOTTOM"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"bottoms"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"bottoms"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"bottomsMap"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"BOTTOMVAL"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"BOTTOMVAL_NAME"},{"p":"org.checkerframework.javacutil","c":"TreeUtils.MemberReferenceKind","l":"BOUND"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"bounds"},{"p":"org.checkerframework.framework.type","c":"BoundsInitializer","l":"BoundsInitializer()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"box(Node)","url":"box(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"boxedToTypeKind(TypeMirror)","url":"boxedToTypeKind(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"BugInCF","l":"BugInCF(String, Object...)","url":"%3Cinit%3E(java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.javacutil","c":"BugInCF","l":"BugInCF(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.checkerframework.javacutil","c":"BugInCF","l":"BugInCF(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"BugInCF","l":"BugInCF(Throwable, String, Object...)","url":"%3Cinit%3E(java.lang.Throwable,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.javacutil","c":"BugInCF","l":"BugInCF(Throwable)","url":"%3Cinit%3E(java.lang.Throwable)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"build()"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"build()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGBuilder","l":"build(CompilationUnitTree, MethodTree, ClassTree, ProcessingEnvironment)","url":"build(com.sun.source.tree.CompilationUnitTree,com.sun.source.tree.MethodTree,com.sun.source.tree.ClassTree,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder","l":"build(CompilationUnitTree, UnderlyingAST, BaseTypeChecker, AnnotatedTypeFactory, ProcessingEnvironment)","url":"build(com.sun.source.tree.CompilationUnitTree,org.checkerframework.dataflow.cfg.UnderlyingAST,org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.framework.type.AnnotatedTypeFactory,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGBuilder","l":"build(CompilationUnitTree, UnderlyingAST, boolean, boolean, ProcessingEnvironment)","url":"build(com.sun.source.tree.CompilationUnitTree,org.checkerframework.dataflow.cfg.UnderlyingAST,boolean,boolean,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGBuilder","l":"build(CompilationUnitTree, UnderlyingAST, ProcessingEnvironment)","url":"build(com.sun.source.tree.CompilationUnitTree,org.checkerframework.dataflow.cfg.UnderlyingAST,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMapBuilder","l":"build(Set<TypeVariable>, Set<TUConstraint>, AnnotatedTypeFactory)","url":"build(java.util.Set,java.util.Set,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGBuilder","l":"build(TreePath, UnderlyingAST, boolean, boolean, ProcessingEnvironment)","url":"build(com.sun.source.util.TreePath,org.checkerframework.dataflow.cfg.UnderlyingAST,boolean,boolean,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"buildAnnoMirrorWithDefaultPrefix(ProcessingEnvironment, Class<? extends Annotation>)","url":"buildAnnoMirrorWithDefaultPrefix(javax.annotation.processing.ProcessingEnvironment,java.lang.Class)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"buildAnnoMirrorWithNoPrefix(ProcessingEnvironment, CharSequence)","url":"buildAnnoMirrorWithNoPrefix(javax.annotation.processing.ProcessingEnvironment,java.lang.CharSequence)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"buildAnnoMirrorWithSpecificPrefix(ProcessingEnvironment, CharSequence, Prefix)","url":"buildAnnoMirrorWithSpecificPrefix(javax.annotation.processing.ProcessingEnvironment,java.lang.CharSequence,org.checkerframework.checker.units.qual.Prefix)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"buildAnnoMirrorWithSpecificPrefix(ProcessingEnvironment, Class<? extends Annotation>, Prefix)","url":"buildAnnoMirrorWithSpecificPrefix(javax.annotation.processing.ProcessingEnvironment,java.lang.Class,org.checkerframework.checker.units.qual.Prefix)"},{"p":"org.checkerframework.framework.flow","c":"CFTreeBuilder","l":"buildAnnotatedType(TypeMirror)","url":"buildAnnotatedType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"buildAnnotation(AnnotationMirror, Map<ExecutableElement, List<JavaExpression>>)","url":"buildAnnotation(javax.lang.model.element.AnnotationMirror,java.util.Map)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildArrayAccess(ExpressionTree, ExpressionTree)","url":"buildArrayAccess(com.sun.source.tree.ExpressionTree,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildArrayLengthAccess(ExpressionTree)","url":"buildArrayLengthAccess(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildAssignment(ExpressionTree, ExpressionTree)","url":"buildAssignment(com.sun.source.tree.ExpressionTree,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildAssignment(VariableTree, ExpressionTree)","url":"buildAssignment(com.sun.source.tree.VariableTree,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildBinary(TypeMirror, Tree.Kind, ExpressionTree, ExpressionTree)","url":"buildBinary(javax.lang.model.type.TypeMirror,com.sun.source.tree.Tree.Kind,com.sun.source.tree.ExpressionTree,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildClassUse(Element)","url":"buildClassUse(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"buildDefaultConfiguration(String, File, Class<?>, List<String>, boolean)","url":"buildDefaultConfiguration(java.lang.String,java.io.File,java.lang.Class,java.util.List,boolean)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"buildDefaultConfiguration(String, Iterable<File>, Collection<String>, Iterable<String>, List<String>, boolean)","url":"buildDefaultConfiguration(java.lang.String,java.lang.Iterable,java.util.Collection,java.lang.Iterable,java.util.List,boolean)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"buildDefaultConfiguration(String, Iterable<File>, Iterable<String>, List<String>, boolean)","url":"buildDefaultConfiguration(java.lang.String,java.lang.Iterable,java.lang.Iterable,java.util.List,boolean)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildHasNextMethodAccess(ExpressionTree)","url":"buildHasNextMethodAccess(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildIteratorMethodAccess(ExpressionTree)","url":"buildIteratorMethodAccess(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildLessThan(ExpressionTree, ExpressionTree)","url":"buildLessThan(com.sun.source.tree.ExpressionTree,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildLiteral(Object)","url":"buildLiteral(java.lang.Object)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"buildMethodContext()"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildMethodInvocation(ExpressionTree, ExpressionTree)","url":"buildMethodInvocation(com.sun.source.tree.ExpressionTree,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildMethodInvocation(ExpressionTree)","url":"buildMethodInvocation(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildNewArray(TypeMirror, List<ExpressionTree>)","url":"buildNewArray(javax.lang.model.type.TypeMirror,java.util.List)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildNextMethodAccess(ExpressionTree)","url":"buildNextMethodAccess(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildPrimValueMethodAccess(Tree)","url":"buildPrimValueMethodAccess(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildTypeCast(TypeMirror, ExpressionTree)","url":"buildTypeCast(javax.lang.model.type.TypeMirror,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildValueOfMethodAccess(Tree)","url":"buildValueOfMethodAccess(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildVariableDecl(Tree, String, Element, ExpressionTree)","url":"buildVariableDecl(com.sun.source.tree.Tree,java.lang.String,javax.lang.model.element.Element,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildVariableDecl(TypeMirror, String, Element, ExpressionTree)","url":"buildVariableDecl(javax.lang.model.type.TypeMirror,java.lang.String,javax.lang.model.element.Element,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildVariableUse(VariableTree)","url":"buildVariableUse(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"BUILTIN_STUB"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprValue","l":"busyExpression"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"BusyExprStore()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"BusyExprStore(Set<BusyExprValue>)","url":"%3Cinit%3E(java.util.Set)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"BusyExprTransfer()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprValue","l":"BusyExprValue(BinaryOperationNode)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.BinaryOperationNode)"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"BYTE"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"BYTE_EVERYTHING"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"byteFromDouble(double)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"byteFromFloat(float)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"ByteMath(byte)","url":"%3Cinit%3E(byte)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"byteRange()"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"C"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnalysis","l":"CalledMethodsAnalysis(BaseTypeChecker, CalledMethodsAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.calledmethods.CalledMethodsAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"CalledMethodsAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"CalledMethodsChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsTransfer","l":"CalledMethodsTransfer(CalledMethodsAnalysis)","url":"%3Cinit%3E(org.checkerframework.checker.calledmethods.CalledMethodsAnalysis)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"CalledMethodsVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"callTransferFunction(Node, TransferInput<V, S>)","url":"callTransferFunction(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"callTransferFunction(Node, TransferInput<V, S>)","url":"callTransferFunction(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store","l":"canAlias(JavaExpression, JavaExpression)","url":"canAlias(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"canAlias(JavaExpression, JavaExpression)","url":"canAlias(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"canAlias(JavaExpression, JavaExpression)","url":"canAlias(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"canAlias(JavaExpression, JavaExpression)","url":"canAlias(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"canAlias(JavaExpression, JavaExpression)","url":"canAlias(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"canAlias(JavaExpression, JavaExpression)","url":"canAlias(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"canBeMissingAnnotations()"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"canBeNarrowingPrimitiveConversion(TypeMirror, Types)","url":"canBeNarrowingPrimitiveConversion(javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"canCreateObligations()"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"canHaveEmptyAnnotationSet(AnnotatedTypeMirror)","url":"canHaveEmptyAnnotationSet(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"canHaveTypeAnnotation(Tree)","url":"canHaveTypeAnnotation(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"canInsertJavaExpression(JavaExpression)","url":"canInsertJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"CANONICAL_NAME"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"CANONICAL_NAME_AND_BINARY_NAME"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"canonicalAnnotation(AnnotationMirror)","url":"canonicalAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"canonicalAnnotation(AnnotationMirror)","url":"canonicalAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"canonicalAnnotation(AnnotationMirror)","url":"canonicalAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupportUtils","l":"capitalize(String)","url":"capitalize(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"captureConversionIds"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"caseExprs"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"CaseNode(CaseTree, AssignmentNode, List<Node>, Node, Types)","url":"%3Cinit%3E(com.sun.source.tree.CaseTree,org.checkerframework.dataflow.cfg.node.AssignmentNode,java.util.List,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.util.Types)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"caseTreeGetBody(CaseTree)","url":"caseTreeGetBody(com.sun.source.tree.CaseTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"caseTreeGetExpressions(CaseTree)","url":"caseTreeGetExpressions(com.sun.source.tree.CaseTree)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"castedAsSuper(AnnotatedTypeFactory, AnnotatedTypeMirror, T)","url":"castedAsSuper(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,T)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"castNode(Class<T>, Node, Tree)","url":"castNode(java.lang.Class,com.github.javaparser.ast.Node,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNull(T, String)","url":"castNonNull(T,java.lang.String)"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNull(T)"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[], String)","url":"castNonNullDeep(T[],java.lang.String)"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[])"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][], String)","url":"castNonNullDeep(T[][],java.lang.String)"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][])"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][][], String)","url":"castNonNullDeep(T[][][],java.lang.String)"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][][])"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][][][], String)","url":"castNonNullDeep(T[][][][],java.lang.String)"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][][][])"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][][][][], String)","url":"castNonNullDeep(T[][][][][],java.lang.String)"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][][][][])"},{"p":"org.checkerframework.common.value.util","c":"NumberUtils","l":"castNumbers(TypeMirror, boolean, List<? extends Number>)","url":"castNumbers(javax.lang.model.type.TypeMirror,boolean,java.util.List)"},{"p":"org.checkerframework.common.value.util","c":"NumberUtils","l":"castNumbers(TypeMirror, List<? extends Number>)","url":"castNumbers(javax.lang.model.type.TypeMirror,java.util.List)"},{"p":"org.checkerframework.common.value.util","c":"NumberUtils","l":"castRange(TypeMirror, Range)","url":"castRange(javax.lang.model.type.TypeMirror,org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CatchMarkerNode","l":"CatchMarkerNode(Tree, String, TypeMirror, Types)","url":"%3Cinit%3E(com.sun.source.tree.Tree,java.lang.String,javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"categoriesToFormatAnnotation(ConversionCategory[])","url":"categoriesToFormatAnnotation(org.checkerframework.checker.formatter.qual.ConversionCategory[])"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"categoriesToFormatAnnotation(I18nConversionCategory[])","url":"categoriesToFormatAnnotation(org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory[])"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"cd"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"ceiling(AnnotationMirror)","url":"ceiling(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"centi"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"CFAbstractAnalysis(BaseTypeChecker, GenericAnnotatedTypeFactory<V, S, T, ? extends CFAbstractAnalysis<V, S, T>>, int)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.framework.type.GenericAnnotatedTypeFactory,int)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"CFAbstractAnalysis(BaseTypeChecker, GenericAnnotatedTypeFactory<V, S, T, ? extends CFAbstractAnalysis<V, S, T>>)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.framework.type.GenericAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"CFAbstractStore(CFAbstractAnalysis<V, S, ?>, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"CFAbstractStore(CFAbstractStore<V, S>)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"CFAbstractTransfer(CFAbstractAnalysis<V, S, T>, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"CFAbstractTransfer(CFAbstractAnalysis<V, S, T>)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"CFAbstractValue(CFAbstractAnalysis<V, ?, ?>, AnnotationMirrorSet, TypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAnalysis","l":"CFAnalysis(BaseTypeChecker, GenericAnnotatedTypeFactory<CFValue, CFStore, CFTransfer, CFAnalysis>)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.framework.type.GenericAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder","l":"CFCFGBuilder()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder.CFCFGTranslationPhaseOne","l":"CFCFGTranslationPhaseOne(CFTreeBuilder, BaseTypeChecker, AnnotatedTypeFactory, boolean, boolean, ProcessingEnvironment)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFTreeBuilder,org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.framework.type.AnnotatedTypeFactory,boolean,boolean,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"cfg"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGBuilder","l":"CFGBuilder()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"CFGLambda(LambdaExpressionTree, ClassTree, MethodTree)","url":"%3Cinit%3E(com.sun.source.tree.LambdaExpressionTree,com.sun.source.tree.ClassTree,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"CFGMethod(MethodTree, ClassTree)","url":"%3Cinit%3E(com.sun.source.tree.MethodTree,com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor","l":"CFGProcessor(String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGStatement","l":"CFGStatement(Tree, ClassTree)","url":"%3Cinit%3E(com.sun.source.tree.Tree,com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"CFGTranslationPhaseOne(TreeBuilder, AnnotationProvider, boolean, boolean, ProcessingEnvironment)","url":"%3Cinit%3E(org.checkerframework.javacutil.trees.TreeBuilder,org.checkerframework.javacutil.AnnotationProvider,boolean,boolean,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree","l":"CFGTranslationPhaseThree()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"cfgVisualizer"},{"p":"org.checkerframework.framework.flow","c":"CFStore","l":"CFStore(CFAbstractAnalysis<CFValue, CFStore, ?>, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFStore","l":"CFStore(CFAbstractStore<CFValue, CFStore>)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.framework.flow","c":"CFTransfer","l":"CFTransfer(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.framework.flow","c":"CFTreeBuilder","l":"CFTreeBuilder(ProcessingEnvironment)","url":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.flow","c":"CFValue","l":"CFValue(CFAbstractAnalysis<CFValue, ?, ?>, AnnotationMirrorSet, TypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"CHAR"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"CHAR"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"CHAR"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"CHAR_AND_INT"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"CHAR_EVERYTHING"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CharacterLiteralNode","l":"CharacterLiteralNode(LiteralTree)","url":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"charRange()"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"chars"},{"p":"org.checkerframework.common.returnsreceiver","c":"FluentAPIGenerator","l":"check(AnnotatedTypeMirror.AnnotatedExecutableType)","url":"check(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkAccess(IdentifierTree, Void)","url":"checkAccess(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkAccessAllowed(Element, AnnotatedTypeMirror, ExpressionTree)","url":"checkAccessAllowed(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"checkAndPerformFlowAnalysis(Tree)","url":"checkAndPerformFlowAnalysis(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"checkAnnotationForErrorExpressions(AnnotationMirror, Tree)","url":"checkAnnotationForErrorExpressions(javax.lang.model.element.AnnotationMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkArguments(List<? extends AnnotatedTypeMirror>, List<? extends ExpressionTree>, CharSequence, List<?>)","url":"checkArguments(java.util.List,java.util.List,java.lang.CharSequence,java.util.List)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkArrayInitialization(AnnotatedTypeMirror, List<? extends ExpressionTree>)","url":"checkArrayInitialization(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.List)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"checkClassForErrorExpressions(ClassTree, AnnotatedTypeMirror.AnnotatedDeclaredType)","url":"checkClassForErrorExpressions(com.sun.source.tree.ClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkConditionalPostcondition(MethodTree, AnnotationMirror, JavaExpression, boolean)","url":"checkConditionalPostcondition(com.sun.source.tree.MethodTree,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.expression.JavaExpression,boolean)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"checkConstructorInvocation(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, NewClassTree)","url":"checkConstructorInvocation(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"checkConstructorInvocation(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, NewClassTree)","url":"checkConstructorInvocation(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkConstructorInvocation(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, NewClassTree)","url":"checkConstructorInvocation(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.tainting","c":"TaintingVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","url":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkContract(JavaExpression, AnnotationMirror, AnnotationMirror, CFAbstractStore<?, ?>)","url":"checkContract(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkDefaultConstructor(ClassTree)","url":"checkDefaultConstructor(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil.CheckedPatternSyntaxException","l":"CheckedPatternSyntaxException(PatternSyntaxException)","url":"%3Cinit%3E(java.util.regex.PatternSyntaxException)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil.CheckedPatternSyntaxException","l":"CheckedPatternSyntaxException(String, String, @org.checkerframework.checker.index.qual.GTENegativeOne int)","url":"%3Cinit%3E(java.lang.String,java.lang.String,@org.checkerframework.checker.index.qual.GTENegativeOneint)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkEnclosingExpr(NewClassTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"checkEnclosingExpr(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"checker"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"checker"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter","l":"checker"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsAnnotationFormatter","l":"checker"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsFormattingVisitor","l":"checker"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"checker"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checker"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"checker"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder.CFCFGTranslationPhaseOne","l":"checker"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerFileTest","l":"checker"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"checker"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"checker"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"checker"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"CHECKER_BASE_DIR_NAME"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"CHECKER_QUAL_PATH_OPT"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"CHECKER_UTIL_PATH_OPT"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"CheckerFrameworkPerDirectoryTest(List<File>, Class<? extends AbstractProcessor>, String, List<String>, String...)","url":"%3Cinit%3E(java.util.List,java.lang.Class,java.lang.String,java.util.List,java.lang.String...)"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"CheckerFrameworkPerDirectoryTest(List<File>, Class<? extends AbstractProcessor>, String, String...)","url":"%3Cinit%3E(java.util.List,java.lang.Class,java.lang.String,java.lang.String...)"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"CheckerFrameworkPerDirectoryTest(List<File>, List<String>, String, List<String>, String...)","url":"%3Cinit%3E(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.String...)"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerFileTest","l":"CheckerFrameworkPerFileTest(File, Class<? extends AbstractProcessor>, String, String...)","url":"%3Cinit%3E(java.io.File,java.lang.Class,java.lang.String,java.lang.String...)"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkWPIPerDirectoryTest","l":"CheckerFrameworkWPIPerDirectoryTest(List<File>, Class<? extends AbstractProcessor>, String, String...)","url":"%3Cinit%3E(java.util.List,java.lang.Class,java.lang.String,java.lang.String...)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"checkerJar"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"CheckerMain(File, List<String>)","url":"%3Cinit%3E(java.io.File,java.util.List)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"checkerName"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"checkerNames"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"checkerOptions"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerFileTest","l":"checkerOptions"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"checkerQualJar"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"checkers"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"checkerUtilJar"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"checkExceptionParameter(CatchTree)","url":"checkExceptionParameter(com.sun.source.tree.CatchTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"checkExceptionParameter(CatchTree)","url":"checkExceptionParameter(com.sun.source.tree.CatchTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkExceptionParameter(CatchTree)","url":"checkExceptionParameter(com.sun.source.tree.CatchTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkExplicitAnnotationsOnIntersectionBounds(AnnotatedTypeMirror.AnnotatedIntersectionType, List<? extends Tree>)","url":"checkExplicitAnnotationsOnIntersectionBounds(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.util.List)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"checkExtendsAndImplements(ClassTree)","url":"checkExtendsAndImplements(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkExtendsAndImplements(ClassTree)","url":"checkExtendsAndImplements(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkExtendsOrImplements(Tree, AnnotationMirrorSet, TypeMirror, boolean)","url":"checkExtendsOrImplements(com.sun.source.tree.Tree,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror,boolean)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkFieldInvariantDeclarations(ClassTree)","url":"checkFieldInvariantDeclarations(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"checkFieldsInitialized(Tree, boolean, InitializationStore, List<? extends AnnotationMirror>)","url":"checkFieldsInitialized(com.sun.source.tree.Tree,boolean,org.checkerframework.checker.initialization.InitializationStore,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"checkForDefaultQualifierInHierarchy(QualifierDefaults)","url":"checkForDefaultQualifierInHierarchy(org.checkerframework.framework.util.defaults.QualifierDefaults)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"checkForPolymorphicQualifiers(ClassTree)","url":"checkForPolymorphicQualifiers(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkForPolymorphicQualifiers(ClassTree)","url":"checkForPolymorphicQualifiers(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkForPolymorphicQualifiers(List<? extends TypeParameterTree>)","url":"checkForPolymorphicQualifiers(java.util.List)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"checkForRedundantTests(BinaryTree)","url":"checkForRedundantTests(com.sun.source.tree.BinaryTree)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"checkForUninferredTypes(AnnotatedTypeMirror)","url":"checkForUninferredTypes(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"checkMemberReferenceReceivers()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"checkMethodForErrorExpressions(MethodTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"checkMethodForErrorExpressions(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"checkMethodInvocability(AnnotatedTypeMirror.AnnotatedExecutableType, MethodInvocationTree)","url":"checkMethodInvocability(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"checkMethodInvocability(AnnotatedTypeMirror.AnnotatedExecutableType, MethodInvocationTree)","url":"checkMethodInvocability(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkMethodInvocability(AnnotatedTypeMirror.AnnotatedExecutableType, MethodInvocationTree)","url":"checkMethodInvocability(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkMethodReferenceAsOverride(MemberReferenceTree, Void)","url":"checkMethodReferenceAsOverride(com.sun.source.tree.MemberReferenceTree,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"checkOrAreEqual(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"checkOrAreEqual(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"checkOverride()"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"checkOverride(MethodTree, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType)","url":"checkOverride(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkOverride(MethodTree, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType)","url":"checkOverride(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkOverride(MethodTree, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType)","url":"checkOverride(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"checkOverride(MethodTree, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType)","url":"checkOverride(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"checkPostcondition(MethodTree, AnnotationMirror, JavaExpression)","url":"checkPostcondition(com.sun.source.tree.MethodTree,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkPostcondition(MethodTree, AnnotationMirror, JavaExpression)","url":"checkPostcondition(com.sun.source.tree.MethodTree,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkPreconditions(MethodInvocationTree, Set<Contract.Precondition>)","url":"checkPreconditions(com.sun.source.tree.MethodInvocationTree,java.util.Set)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"checkPrimitives()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"checkPrimitives()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkPurity(MethodTree)","url":"checkPurity(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker","l":"checkPurity(TreePath, AnnotationProvider, boolean, boolean)","url":"checkPurity(com.sun.source.util.TreePath,org.checkerframework.javacutil.AnnotationProvider,boolean,boolean)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkQualifierParameter(ClassTree)","url":"checkQualifierParameter(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor.GuiEffectOverrideChecker","l":"checkReceiverOverride()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"checkReceiverOverride()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkSuperConstructorCall(MethodInvocationTree)","url":"checkSuperConstructorCall(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkThisConstructorCall(MethodInvocationTree)","url":"checkThisConstructorCall(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"checkThisOrSuperConstructorCall(MethodInvocationTree, String)","url":"checkThisOrSuperConstructorCall(com.sun.source.tree.MethodInvocationTree,java.lang.String)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"checkThisOrSuperConstructorCall(MethodInvocationTree, String)","url":"checkThisOrSuperConstructorCall(com.sun.source.tree.MethodInvocationTree,java.lang.String)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"checkThisOrSuperConstructorCall(MethodInvocationTree, String)","url":"checkThisOrSuperConstructorCall(com.sun.source.tree.MethodInvocationTree,java.lang.String)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkThisOrSuperConstructorCall(MethodInvocationTree, String)","url":"checkThisOrSuperConstructorCall(com.sun.source.tree.MethodInvocationTree,java.lang.String)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"checkThrownExpression(ThrowTree)","url":"checkThrownExpression(com.sun.source.tree.ThrowTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkThrownExpression(ThrowTree)","url":"checkThrownExpression(com.sun.source.tree.ThrowTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"checkTopLevelDeclaredOrPrimitiveType"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkTypeArguments(Tree, List<? extends AnnotatedTypeParameterBounds>, List<? extends AnnotatedTypeMirror>, List<? extends Tree>, CharSequence, List<?>)","url":"checkTypeArguments(com.sun.source.tree.Tree,java.util.List,java.util.List,java.util.List,java.lang.CharSequence,java.util.List)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkTypecastRedundancy(TypeCastTree)","url":"checkTypecastRedundancy(com.sun.source.tree.TypeCastTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkTypecastSafety(TypeCastTree)","url":"checkTypecastSafety(com.sun.source.tree.TypeCastTree)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"checkTypeForErrorExpressions(AnnotatedTypeMirror, Tree)","url":"checkTypeForErrorExpressions(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkVarargs(AnnotatedTypeMirror.AnnotatedExecutableType, Tree)","url":"checkVarargs(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"classAndMethodTreeKinds()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"classbody"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"classBoundValueElement"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"classCastExceptionType"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"classCircularityErrorType"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"ClassDeclarationNode(ClassTree)","url":"%3Cinit%3E(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"classExtendsTAPosition(int, int)","url":"classExtendsTAPosition(int,int)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"classFormatErrorType"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"classGetCanonicalName"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"classLoader"},{"p":"org.checkerframework.common.reflection.qual","c":"MethodVal","l":"className()"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"ClassName(TypeMirror)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"ClassNameNode(ClassTree)","url":"%3Cinit%3E(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"ClassNameNode(IdentifierTree)","url":"%3Cinit%3E(com.sun.source.tree.IdentifierTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"ClassNameNode(MemberSelectTree, Node)","url":"%3Cinit%3E(com.sun.source.tree.MemberSelectTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"ClassNameNode(TypeMirror, Element)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"classpathExtra"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"classTree"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGStatement","l":"classTree"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"classTreeKinds()"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory","l":"CLASSVAL_TOP"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory","l":"ClassValAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.reflection","c":"ClassValChecker","l":"ClassValChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory.ClassValQualifierHierarchy","l":"ClassValQualifierHierarchy(Set<Class<? extends Annotation>>, Elements)","url":"%3Cinit%3E(java.util.Set,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory.ClassValTreeAnnotator","l":"ClassValTreeAnnotator(ClassValAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.reflection.ClassValAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"classValues"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"classValValueElement"},{"p":"org.checkerframework.common.reflection","c":"ClassValVisitor","l":"ClassValVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner.Visited","l":"clear()"},{"p":"org.checkerframework.framework.util","c":"TreePathCacher","l":"clear()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Equalities","l":"clear()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Subtypes","l":"clear()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Supertypes","l":"clear()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"clear()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"clear()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"clearAnnotations()"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"clearAnnotations(Node)","url":"clearAnnotations(com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"clearCache()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"clearValue(JavaExpression)","url":"clearValue(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.javacutil","c":"CollectionUtils","l":"cloneElements(C)"},{"p":"org.checkerframework.javacutil","c":"CollectionUtils","l":"cloneElements(M)"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"cloneElements(Pair<T1, T2>)","url":"cloneElements(org.checkerframework.javacutil.Pair)"},{"p":"org.checkerframework.javacutil","c":"CollectionUtils","l":"cloneValues(M)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"JavaDiagnosticReader","l":"close()"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"close()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGStatement","l":"code"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"collectArgFiles(List<String>)","url":"collectArgFiles(java.util.List)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"collectionToArrayHeuristics"},{"p":"org.checkerframework.checker.nullness","c":"CollectionToArrayHeuristics","l":"CollectionToArrayHeuristics(BaseTypeChecker, NullnessNoInitAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.nullness.NullnessNoInitAnnotatedTypeFactory)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"COLON_SPLITTER"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"combine(AnalysisResult<V, S>)","url":"combine(org.checkerframework.dataflow.analysis.AnalysisResult)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeCombiner","l":"combine(AnnotatedTypeMirror, AnnotatedTypeMirror, QualifierHierarchy)","url":"combine(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.QualifierHierarchy)"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"combine(AnnotationMirror, AnnotationMirror, AnnotationMirror)","url":"combine(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type.poly","c":"DefaultQualifierPolymorphism","l":"combine(AnnotationMirror, AnnotationMirror, AnnotationMirror)","url":"combine(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeCombiner","l":"combineAnnotations(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"combineAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"combineAnnotationWithAnnotation(AnnotationMirror, AnnotationMirror)","url":"combineAnnotationWithAnnotation(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"combineAnnotationWithType(AnnotationMirror, AnnotatedTypeMirror)","url":"combineAnnotationWithType(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.AnnotationSetCombiner","l":"combineAnnotationWithTypeVar(AnnotationMirror, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotationMirror, boolean)","url":"combineAnnotationWithTypeVar(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueGlb","l":"combineAnnotationWithTypeVar(AnnotationMirror, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotationMirror, boolean)","url":"combineAnnotationWithTypeVar(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueLub","l":"combineAnnotationWithTypeVar(AnnotationMirror, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotationMirror, boolean)","url":"combineAnnotationWithTypeVar(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner","l":"combineResults(R, R)","url":"combineResults(R,R)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner.FunctionalSwitchExpressionScanner","l":"combineResults(R1, R1)","url":"combineResults(R1,R1)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.AnnotationSetCombiner","l":"combineSets(TypeMirror, AnnotationMirrorSet, TypeMirror, AnnotationMirrorSet, boolean)","url":"combineSets(javax.lang.model.type.TypeMirror,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror,org.checkerframework.javacutil.AnnotationMirrorSet,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.AnnotationSetCombiner","l":"combineTwoAnnotations(AnnotationMirror, TypeMirror, AnnotationMirror, TypeMirror, AnnotationMirror)","url":"combineTwoAnnotations(javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror,javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueGlb","l":"combineTwoAnnotations(AnnotationMirror, TypeMirror, AnnotationMirror, TypeMirror, AnnotationMirror)","url":"combineTwoAnnotations(javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror,javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueLub","l":"combineTwoAnnotations(AnnotationMirror, TypeMirror, AnnotationMirror, TypeMirror, AnnotationMirror)","url":"combineTwoAnnotations(javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror,javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.AnnotationSetCombiner","l":"combineTwoTypeVars(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotationMirror, boolean)","url":"combineTwoTypeVars(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueGlb","l":"combineTwoTypeVars(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotationMirror, boolean)","url":"combineTwoTypeVars(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueLub","l":"combineTwoTypeVars(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotationMirror, boolean)","url":"combineTwoTypeVars(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"combineTypeWithType(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"combineTypeWithType(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"COMMA_SPLITTER"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"COMMAND_LINE_STUB"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"CommitmentTreeAnnotator(InitializationParentAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.checker.initialization.InitializationParentAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory.CommitmentTypeAnnotator","l":"CommitmentTypeAnnotator(InitializationParentAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.checker.initialization.InitializationParentAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"COMMON_BASE_DIR_NAME"},{"p":"org.checkerframework.checker.formatter","c":"FormatterVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","url":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"commonAssignmentCheckEndDiagnostic(boolean, String, AnnotatedTypeMirror, AnnotatedTypeMirror, Tree)","url":"commonAssignmentCheckEndDiagnostic(boolean,java.lang.String,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"commonAssignmentCheckEndDiagnostic(String, AnnotatedTypeMirror, AnnotatedTypeMirror, Tree)","url":"commonAssignmentCheckEndDiagnostic(java.lang.String,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"commonAssignmentCheckStartDiagnostic(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree)","url":"commonAssignmentCheckStartDiagnostic(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"commonAssignmentTree"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"commonConvert(Node, TypeMirror, boolean)","url":"commonConvert(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"comparator()"},{"p":"org.checkerframework.framework.type","c":"EqualityAtmComparer","l":"compare(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"compare(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist.BackwardDFOComparator","l":"compare(Block, Block)","url":"compare(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist.ForwardDFOComparator","l":"compare(Block, Block)","url":"compare(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"compareAnnotationMirrors(AnnotationMirror, AnnotationMirror)","url":"compareAnnotationMirrors(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"compareByName(AnnotationMirror, AnnotationMirror)","url":"compareByName(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"InternalUtils","l":"compareDiagnosticPosition(Tree, Tree)","url":"compareDiagnosticPosition(com.sun.source.tree.Tree,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"compareTo(Default)","url":"compareTo(org.checkerframework.framework.util.defaults.Default)"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"compareTo(QualifierKind)","url":"compareTo(org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"compareUnsigned(@org.checkerframework.checker.signedness.qual.Unsigned byte, @org.checkerframework.checker.signedness.qual.Unsigned byte)","url":"compareUnsigned(@org.checkerframework.checker.signedness.qual.Unsignedbyte,@org.checkerframework.checker.signedness.qual.Unsignedbyte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"compareUnsigned(@org.checkerframework.checker.signedness.qual.Unsigned short, @org.checkerframework.checker.signedness.qual.Unsigned short)","url":"compareUnsigned(@org.checkerframework.checker.signedness.qual.Unsignedshort,@org.checkerframework.checker.signedness.qual.Unsignedshort)"},{"p":"org.checkerframework.framework.test","c":"TypecheckExecutor","l":"compile(TestConfiguration)","url":"compile(org.checkerframework.framework.test.TestConfiguration)"},{"p":"org.checkerframework.framework.test","c":"CompilationResult","l":"compiledWithoutError()"},{"p":"org.checkerframework.checker.compilermsgs","c":"CompilerMessagesAnnotatedTypeFactory","l":"CompilerMessagesAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.compilermsgs","c":"CompilerMessagesChecker","l":"CompilerMessagesChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordStub","l":"componentsByName"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordStub","l":"componentsInCanonicalConstructor"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"compoundAssignmentTreeArgTypes(CompoundAssignmentTree)","url":"compoundAssignmentTreeArgTypes(com.sun.source.tree.CompoundAssignmentTree)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree","l":"computeNeighborhoodOfEmptyBlock(RegularBlockImpl, Set<RegularBlockImpl>, Set<CFGTranslationPhaseThree.PredecessorHolder>)","url":"computeNeighborhoodOfEmptyBlock(org.checkerframework.dataflow.cfg.block.RegularBlockImpl,java.util.Set,java.util.Set)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree","l":"computeNeighborhoodOfEmptyBlockBackwards(RegularBlockImpl, Set<RegularBlockImpl>, Set<CFGTranslationPhaseThree.PredecessorHolder>)","url":"computeNeighborhoodOfEmptyBlockBackwards(org.checkerframework.dataflow.cfg.block.RegularBlockImpl,java.util.Set,java.util.Set)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"computeNewValueAndInsert(JavaExpression, V, BinaryOperator<V>, boolean)","url":"computeNewValueAndInsert(org.checkerframework.dataflow.expression.JavaExpression,V,java.util.function.BinaryOperator,boolean)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"concatenateAddedStringLiterals(Node)","url":"concatenateAddedStringLiterals(com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"condition"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"condition"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block.BlockType","l":"CONDITIONAL_BLOCK"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode.ExtendedNodeType","l":"CONDITIONAL_JUMP"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalAndNode","l":"ConditionalAndNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"ConditionalBlockImpl()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"conditionalExprPromotion(Node, TypeMirror)","url":"conditionalExprPromotion(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"ConditionalJump(Label, Label)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.builder.Label,org.checkerframework.dataflow.cfg.builder.Label)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalNotNode","l":"ConditionalNotNode(UnaryTree, Node)","url":"%3Cinit%3E(com.sun.source.tree.UnaryTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalOrNode","l":"ConditionalOrNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"CONDITIONALPOSTCONDITION"},{"p":"org.checkerframework.framework.util","c":"Contract.ConditionalPostcondition","l":"ConditionalPostcondition(String, AnnotationMirror, AnnotationMirror, boolean)","url":"%3Cinit%3E(java.lang.String,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"ConditionalTransferResult(V, S, S, boolean)","url":"%3Cinit%3E(V,S,S,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"ConditionalTransferResult(V, S, S, Map<TypeMirror, S>, boolean)","url":"%3Cinit%3E(V,S,S,java.util.Map,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"ConditionalTransferResult(V, S, S, Map<TypeMirror, S>)","url":"%3Cinit%3E(V,S,S,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"ConditionalTransferResult(V, S, S)","url":"%3Cinit%3E(V,S,S)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant.Type","l":"CONSTANT"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"Constant(Constant.Type)","url":"%3Cinit%3E(org.checkerframework.dataflow.constantpropagation.Constant.Type)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"Constant(Integer)","url":"%3Cinit%3E(java.lang.Integer)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"ConstantPropagationStore()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"ConstantPropagationStore(Map<Node, Constant>)","url":"%3Cinit%3E(java.util.Map)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"ConstantPropagationTransfer()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"constrainAnonymousClassToUI(TypeElement)","url":"constrainAnonymousClassToUI(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"constrainLambdaToUI(LambdaExpressionTree)","url":"constrainLambdaToUI(com.sun.source.tree.LambdaExpressionTree)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"ConstraintMap(ConstraintMap)","url":"%3Cinit%3E(org.checkerframework.framework.util.typeinference.solver.ConstraintMap)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"ConstraintMap(Set<TypeVariable>)","url":"%3Cinit%3E(java.util.Set)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMapBuilder","l":"ConstraintMapBuilder()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"A2F","l":"construct(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"construct(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"construct(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"construct(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"F2A","l":"construct(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"construct(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"FIsA","l":"construct(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"construct(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"CONSTRUCTOR_RESULT"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"constructor(NewClassTree)","url":"constructor(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"constructorFromUse(NewClassTree)","url":"constructorFromUse(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"constructorFromUse(NewClassTree)","url":"constructorFromUse(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"constructorFromUse(NewClassTree)","url":"constructorFromUse(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"constructorFromUsePreSubstitution(NewClassTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"constructorFromUsePreSubstitution(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"constructorFromUsePreSubstitution(NewClassTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"constructorFromUsePreSubstitution(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"constructorFromUsePreSubstitution(NewClassTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"constructorFromUsePreSubstitution(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"SubtypeVisitHistory","l":"contains(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","url":"contains(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner.Visited","l":"contains(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"contains(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"contains(Block)","url":"contains(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"contains(long)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"contains(Object)","url":"contains(java.lang.Object)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"contains(Range)","url":"contains(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"containsAll(Collection<?>)","url":"containsAll(java.util.Collection)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"containsKey(Object)","url":"containsKey(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","url":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","url":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","url":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","url":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","url":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","url":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","url":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","url":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","url":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","url":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"containsModifier(AnnotatedTypeMirror, AnnotationMirror)","url":"containsModifier(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"containsNullnessAnnotation(List<? extends AnnotationTree>, Tree)","url":"containsNullnessAnnotation(java.util.List,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"containsNullnessAnnotation(List<? extends AnnotationTree>)","url":"containsNullnessAnnotation(java.util.List)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"containsOfClass(Class<? extends JavaExpression>)","url":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"containsOfClass(Class<? extends JavaExpression>)","url":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"containsOfClass(Class<? extends JavaExpression>)","url":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"containsOfClass(Class<? extends JavaExpression>)","url":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"containsOfClass(Class<? extends JavaExpression>)","url":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"containsOfClass(Class<? extends JavaExpression>)","url":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"containsOfClass(Class<? extends JavaExpression>)","url":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"containsOfClass(Class<? extends JavaExpression>)","url":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"containsOfClass(Class<? extends JavaExpression>)","url":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"containsOfClass(Class<? extends JavaExpression>)","url":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"containsOfClass(Class<? extends JavaExpression>)","url":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"containsOfClass(Class<? extends JavaExpression>)","url":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"containsOfClass(Class<? extends JavaExpression>)","url":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"containsSame(Collection<? extends AnnotationMirror>, AnnotationMirror)","url":"containsSame(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"containsSameByClass(Collection<? extends AnnotationMirror>, Class<? extends Annotation>)","url":"containsSameByClass(java.util.Collection,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"containsSameByClass(Collection<? extends AnnotationMirror>, Class<? extends Annotation>)","url":"containsSameByClass(java.util.Collection,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"containsSameByName(Collection<? extends AnnotationMirror>, AnnotationMirror)","url":"containsSameByName(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"containsSameByName(Collection<? extends AnnotationMirror>, String)","url":"containsSameByName(java.util.Collection,java.lang.String)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"containsSyntacticEqualJavaExpression(JavaExpression)","url":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"containsSyntacticEqualJavaExpression(JavaExpression)","url":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"containsSyntacticEqualJavaExpression(JavaExpression)","url":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"containsSyntacticEqualJavaExpression(JavaExpression)","url":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"containsSyntacticEqualJavaExpression(JavaExpression)","url":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"containsSyntacticEqualJavaExpression(JavaExpression)","url":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"containsSyntacticEqualJavaExpression(JavaExpression)","url":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"containsSyntacticEqualJavaExpression(JavaExpression)","url":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"containsSyntacticEqualJavaExpression(JavaExpression)","url":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"containsSyntacticEqualJavaExpression(JavaExpression)","url":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"containsSyntacticEqualJavaExpression(JavaExpression)","url":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"containsSyntacticEqualJavaExpression(JavaExpression)","url":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"containsSyntacticEqualJavaExpression(JavaExpression)","url":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"containsThisConstructorInvocation(MethodTree)","url":"containsThisConstructorInvocation(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"containsTwoStores()"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"containsTwoStores()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"containsTwoStores()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"containsTwoStores()"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"containsTypeParameter(AnnotatedTypeMirror, Collection<TypeVariable>)","url":"containsTypeParameter(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.Collection)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"containsUninferredTypeArguments()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"containsUninferredTypeArguments(AnnotatedTypeMirror)","url":"containsUninferredTypeArguments(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"containsUnknown()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"containsValue(Object)","url":"containsValue(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"contents"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"continuationPart(String)","url":"continuationPart(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"contractAnnotation"},{"p":"org.checkerframework.framework.util","c":"ContractsFromMethod","l":"ContractsFromMethod(GenericAnnotatedTypeFactory<?, ?, ?, ?>)","url":"%3Cinit%3E(org.checkerframework.framework.type.GenericAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"contractsUtils"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"ControlFlowGraph(SpecialBlock, SpecialBlockImpl, SpecialBlockImpl, UnderlyingAST, IdentityHashMap<Tree, Set<Node>>, IdentityHashMap<Tree, Set<Node>>, IdentityHashMap<UnaryTree, BinaryTree>, List<ReturnNode>, List<ClassTree>, List<LambdaExpressionTree>)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.block.SpecialBlock,org.checkerframework.dataflow.cfg.block.SpecialBlockImpl,org.checkerframework.dataflow.cfg.block.SpecialBlockImpl,org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.List,java.util.List,java.util.List)"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil","l":"conversionCharFromFormat(String)","url":"conversionCharFromFormat(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"conversionRequiresNarrowing(TypeMirror, Node)","url":"conversionRequiresNarrowing(javax.lang.model.type.TypeMirror,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"convert(JavaExpression)","url":"convert(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"convert(List<JavaExpression>)","url":"convert(java.util.List)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"convertAnnotatedTypeMirror(StringToJavaExpression, AnnotatedTypeMirror)","url":"convertAnnotatedTypeMirror(org.checkerframework.framework.util.StringToJavaExpression,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"convertAnnotationMirror(StringToJavaExpression, AnnotationMirror)","url":"convertAnnotationMirror(org.checkerframework.framework.util.StringToJavaExpression,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"convertArrayLenToArrayLenRange(AnnotationMirror)","url":"convertArrayLenToArrayLenRange(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"convertCallArguments(ExecutableElement, ExecutableType, List<? extends ExpressionTree>, NewClassTree)","url":"convertCallArguments(javax.lang.model.element.ExecutableElement,javax.lang.model.type.ExecutableType,java.util.List,com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"convertedTreeLookup"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"convertIntRangeToIntVal(AnnotationMirror)","url":"convertIntRangeToIntVal(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"convertIntValToIntRange(AnnotationMirror)","url":"convertIntValToIntRange(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"convertToAnnotation(ProcessingEnvironment)","url":"convertToAnnotation(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"convertToPredicate(AnnotationMirror)","url":"convertToPredicate(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"convertToSubstringIndexAnnotation(ProcessingEnvironment)","url":"convertToSubstringIndexAnnotation(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"convertUBQualifierToAnnotation(UBQualifier)","url":"convertUBQualifierToAnnotation(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"convertUBQualifierToAnnotation(UBQualifier)","url":"convertUBQualifierToAnnotation(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store","l":"copy()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"copy()"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"copy()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"copy()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"copy()"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"copy()"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"copy()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"copy()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"copyAdd(char, OffsetEquation)","url":"copyAdd(char,org.checkerframework.checker.index.upperbound.OffsetEquation)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"copyAnnotations"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"copyElementValuesFromAnnotation(AnnotationMirror, Collection<ExecutableElement>)","url":"copyElementValuesFromAnnotation(javax.lang.model.element.AnnotationMirror,java.util.Collection)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"copyElementValuesFromAnnotation(AnnotationMirror, String...)","url":"copyElementValuesFromAnnotation(javax.lang.model.element.AnnotationMirror,java.lang.String...)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"copyIntersectionBoundAnnotations()"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"copyOnlyExplicitConstructorAnnotations(AnnotatedTypeFactory, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"copyOnlyExplicitConstructorAnnotations(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"copyRenameElementValuesFromAnnotation(AnnotationMirror, Map<String, String>)","url":"copyRenameElementValuesFromAnnotation(javax.lang.model.element.AnnotationMirror,java.util.Map)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"copyTAPosition(TypeAnnotationPosition)","url":"copyTAPosition(com.sun.tools.javac.code.TypeAnnotationPosition)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"correctResults(Map<TypeVariable, AnnotatedTypeMirror>, ExpressionTree, ExecutableType, AnnotatedTypeFactory)","url":"correctResults(java.util.Map,com.sun.source.tree.ExpressionTree,javax.lang.model.type.ExecutableType,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"COUNT_FRAMEWORK_BUILD_CALLS"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"COUNT_MUST_CALL"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"create(Collection<? extends Number>)","url":"create(java.util.Collection)"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"create(Contract.Kind, String, AnnotationMirror, AnnotationMirror, Boolean)","url":"create(org.checkerframework.framework.util.Contract.Kind,java.lang.String,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,java.lang.Boolean)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"create(int)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"create(long, long)","url":"create(long,long)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"create(MethodInvocationTree, AnnotatedTypeFactory)","url":"create(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"create(TypeKind)","url":"create(javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"createAbstractValue(AnnotatedTypeMirror)","url":"createAbstractValue(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnalysis","l":"createAbstractValue(AnnotationMirrorSet, TypeMirror)","url":"createAbstractValue(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockAnalysis","l":"createAbstractValue(AnnotationMirrorSet, TypeMirror)","url":"createAbstractValue(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnalysis","l":"createAbstractValue(AnnotationMirrorSet, TypeMirror)","url":"createAbstractValue(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnalysis","l":"createAbstractValue(AnnotationMirrorSet, TypeMirror)","url":"createAbstractValue(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnalysis","l":"createAbstractValue(AnnotationMirrorSet, TypeMirror)","url":"createAbstractValue(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"createAbstractValue(AnnotationMirrorSet, TypeMirror)","url":"createAbstractValue(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAnalysis","l":"createAbstractValue(AnnotationMirrorSet, TypeMirror)","url":"createAbstractValue(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"createAccumulatorAnnotation(List<String>)","url":"createAccumulatorAnnotation(java.util.List)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"createAccumulatorAnnotation(String)","url":"createAccumulatorAnnotation(java.lang.String)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationChecker","l":"createAliasAnalyses()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createAndInitQualifierDefaults()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"createAnnotatedTypeFormatter()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"createAnnotatedTypeFormatter()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createAnnotatedTypeFormatter()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"createAnnotationClassLoader()"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingAnnotatedTypeFactory","l":"createAnnotationClassLoader()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createAnnotationClassLoader()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createAnnotationFormatter()"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"createAnnotationMirrors(Elements)","url":"createAnnotationMirrors(javax.lang.model.util.Elements)"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"createArgumentAFConstraints(AnnotatedTypeFactory, List<AnnotatedTypeMirror>, AnnotatedTypeMirror.AnnotatedExecutableType, Set<TypeVariable>, boolean)","url":"createArgumentAFConstraints(org.checkerframework.framework.type.AnnotatedTypeFactory,java.util.List,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.Set,boolean)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createArrayLenAnnotation(List<Integer>)","url":"createArrayLenAnnotation(java.util.List)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createArrayLenRangeAnnotation(int, int)","url":"createArrayLenRangeAnnotation(int,int)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createArrayLenRangeAnnotation(Range)","url":"createArrayLenRangeAnnotation(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"createArrayType(TypeMirror, Types)","url":"createArrayType(javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"createAssignmentConstraints(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedExecutableType, Set<AFConstraint>, Map<TypeVariable, AnnotatedTypeMirror>, Set<TypeVariable>, AnnotatedTypeFactory)","url":"createAssignmentConstraints(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.Set,java.util.Map,java.util.Set,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory","l":"createBasicTreeAnnotator()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createBooleanAnnotation(List<Boolean>)","url":"createBooleanAnnotation(java.util.List)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"createBottoms()"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"createBottomsMap()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"createCalledMethods(String...)","url":"createCalledMethods(java.lang.String...)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createCFGVisualizer()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createCharAnnotation(List<Character>)","url":"createCharAnnotation(java.util.List)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"createCombinedSameLen(List<JavaExpression>, List<AnnotationMirror>)","url":"createCombinedSameLen(java.util.List,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"createCompilationBootclasspath(List<String>)","url":"createCompilationBootclasspath(java.util.List)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"createCompoundFromAnnotationMirror(AnnotationMirror, ProcessingEnvironment)","url":"createCompoundFromAnnotationMirror(javax.lang.model.element.AnnotationMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createContractsFromMethod()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnalysis","l":"createCopiedStore(AccumulationStore)","url":"createCopiedStore(org.checkerframework.common.accumulation.AccumulationStore)"},{"p":"org.checkerframework.framework.flow","c":"CFAnalysis","l":"createCopiedStore(CFStore)","url":"createCopiedStore(org.checkerframework.framework.flow.CFStore)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnalysis","l":"createCopiedStore(InitializationStore)","url":"createCopiedStore(org.checkerframework.checker.initialization.InitializationStore)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnalysis","l":"createCopiedStore(KeyForStore)","url":"createCopiedStore(org.checkerframework.checker.nullness.KeyForStore)"},{"p":"org.checkerframework.checker.lock","c":"LockAnalysis","l":"createCopiedStore(LockStore)","url":"createCopiedStore(org.checkerframework.checker.lock.LockStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnalysis","l":"createCopiedStore(NullnessNoInitStore)","url":"createCopiedStore(org.checkerframework.checker.nullness.NullnessNoInitStore)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"createCopiedStore(S)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"createCpOpts(List<String>)","url":"createCpOpts(java.util.List)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"createDefaultApplierElement(AnnotatedTypeFactory, Element, AnnotatedTypeMirror, boolean)","url":"createDefaultApplierElement(org.checkerframework.framework.type.AnnotatedTypeFactory,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"createDefaultForTypeAnnotator()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createDefaultForTypeAnnotator()"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"createDefaultForUseTypeAnnotator()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createDefaultForUseTypeAnnotator()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createDefaultForUseTypeAnnotator()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"createDependentTypesHelper()"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"createDependentTypesHelper()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createDependentTypesHelper()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createDependentTypesHelper()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createDependentTypesHelper()"},{"p":"org.checkerframework.checker.index","c":"OffsetDependentTypesHelper","l":"createDependentTypesTreeAnnotator()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"createDependentTypesTreeAnnotator()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"createDirectSuperMap()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createDoesNotMatchRegexAnnotation(List<String>)","url":"createDoesNotMatchRegexAnnotation(java.util.List)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createDoubleAnnotation(List<Double>)","url":"createDoubleAnnotation(java.util.List)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createDoubleValAnnotation(List<Double>)","url":"createDoubleValAnnotation(java.util.List)"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"createElementlessQualifierMap()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnalysis","l":"createEmptyStore(boolean)"},{"p":"org.checkerframework.checker.lock","c":"LockAnalysis","l":"createEmptyStore(boolean)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnalysis","l":"createEmptyStore(boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnalysis","l":"createEmptyStore(boolean)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnalysis","l":"createEmptyStore(boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"createEmptyStore(boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAnalysis","l":"createEmptyStore(boolean)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"createEnhancedForLoopArrayVariable(ExpressionTree, VariableElement)","url":"createEnhancedForLoopArrayVariable(com.sun.source.tree.ExpressionTree,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder.CFCFGTranslationPhaseOne","l":"createEnhancedForLoopArrayVariable(ExpressionTree, VariableElement)","url":"createEnhancedForLoopArrayVariable(com.sun.source.tree.ExpressionTree,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"createEnhancedForLoopIteratorVariable(MethodInvocationTree, VariableElement)","url":"createEnhancedForLoopIteratorVariable(com.sun.source.tree.MethodInvocationTree,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder.CFCFGTranslationPhaseOne","l":"createEnhancedForLoopIteratorVariable(MethodInvocationTree, VariableElement)","url":"createEnhancedForLoopIteratorVariable(com.sun.source.tree.MethodInvocationTree,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"createEqualityComparer()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"createError(String, JavaExpressionParseUtil.JavaExpressionParseException)","url":"createError(java.lang.String,org.checkerframework.framework.util.JavaExpressionParseUtil.JavaExpressionParseException)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"createError(String, String)","url":"createError(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.checker.signature","c":"SignatureChecker","l":"createFactory(CompilationUnitTree)","url":"createFactory(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationFieldAccessAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.common.basetype","c":"BaseAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.common.initializedfields","c":"InitializedFieldsAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","url":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","url":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","url":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<CFValue, InitializationStore, InitializationTransfer>)","url":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<CFValue, LockStore, LockTransfer>)","url":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<KeyForValue, KeyForStore, KeyForTransfer>)","url":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<NullnessNoInitValue, NullnessNoInitStore, NullnessNoInitTransfer>)","url":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<Value, Store, TransferFunction>)","url":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"createFormatForCall(MethodInvocationTree, I18nFormatterAnnotatedTypeFactory)","url":"createFormatForCall(com.sun.source.tree.MethodInvocationTree,org.checkerframework.checker.i18nformatter.I18nFormatterAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"createGlbsMap()"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"createHierarchyMap(AnnotationMirrorSet, QualifierHierarchy)","url":"createHierarchyMap(org.checkerframework.javacutil.AnnotationMirrorSet,org.checkerframework.framework.type.QualifierHierarchy)"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"createInitialAssignmentConstraints(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeFactory, Set<TypeVariable>)","url":"createInitialAssignmentConstraints(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeFactory,java.util.Set)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createIntRangeAnnotation(Range)","url":"createIntRangeAnnotation(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createIntValAnnotation(List<Long>)","url":"createIntValAnnotation(java.util.List)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createKeyForAnnotationMirrorWithValue(Set<String>)","url":"createKeyForAnnotationMirrorWithValue(java.util.Set)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createKeyForAnnotationMirrorWithValue(String)","url":"createKeyForAnnotationMirrorWithValue(java.lang.String)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"createLessThanQualifier(List<String>)","url":"createLessThanQualifier(java.util.List)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"createLessThanQualifier(String)","url":"createLessThanQualifier(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createLiteral(int)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"createLiteral(TypeTag, Object, TypeMirror, ProcessingEnvironment)","url":"createLiteral(com.sun.tools.javac.code.TypeTag,java.lang.Object,javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"CollectionUtils","l":"createLRUCache(int)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"createLubsMap()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createMatchesRegexAnnotation(List<String>)","url":"createMatchesRegexAnnotation(java.util.List)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createMustCall(List<String>)","url":"createMustCall(java.util.List)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"createNameToAnnotationMap(List<TypeElement>)","url":"createNameToAnnotationMap(java.util.List)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createNumberAnnotationMirror(List<Number>)","url":"createNumberAnnotationMirror(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"createOffsetForInt(int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"createOffsetFromJavaExpression(String)","url":"createOffsetFromJavaExpression(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"createOffsetFromNode(Node, AnnotationProvider, char)","url":"createOffsetFromNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.javacutil.AnnotationProvider,char)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"createOffsetFromNodesValue(Node, ValueAnnotatedTypeFactory, char)","url":"createOffsetFromNodesValue(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.common.value.ValueAnnotatedTypeFactory,char)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"createOverrideChecker(Tree, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror)","url":"createOverrideChecker(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"createOverrideChecker(Tree, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror)","url":"createOverrideChecker(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"createPpOpts(List<String>)","url":"createPpOpts(java.util.List)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"createPredicateAnnotation(String)","url":"createPredicateAnnotation(java.lang.String)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"createQualAllowedLocations()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createQualifierDefaults()"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.GeneralAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory.FenumQualifierHierarchy","l":"createQualifierKindHierarchy(Collection<Class<? extends Annotation>>)","url":"createQualifierKindHierarchy(java.util.Collection)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierHierarchy","l":"createQualifierKindHierarchy(Collection<Class<? extends Annotation>>)","url":"createQualifierKindHierarchy(java.util.Collection)"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"createQualifierKindHierarchy(Collection<Class<? extends Annotation>>)","url":"createQualifierKindHierarchy(java.util.Collection)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"createQualifierKindHierarchy(Collection<Class<? extends Annotation>>)","url":"createQualifierKindHierarchy(java.util.Collection)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"createQualifierKinds(Collection<Class<? extends Annotation>>)","url":"createQualifierKinds(java.util.Collection)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"createQualifierPolymorphism()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createQualifierPolymorphism()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createQualifierUpperBounds()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createQualifierUpperBounds()"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"createRequiresOrEnsuresQualifier(String, AnnotationMirror, AnnotatedTypeMirror, Analysis.BeforeOrAfter, List<AnnotationMirror>)","url":"createRequiresOrEnsuresQualifier(java.lang.String,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createRequiresOrEnsuresQualifier(String, AnnotationMirror, AnnotatedTypeMirror, Analysis.BeforeOrAfter, List<AnnotationMirror>)","url":"createRequiresOrEnsuresQualifier(java.lang.String,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"createRuntimeClasspath(List<String>)","url":"createRuntimeClasspath(java.util.List)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"createSameLen(Collection<String>)","url":"createSameLen(java.util.Collection)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"createSingleAnnotationValue(AnnotationMirror, TypeMirror)","url":"createSingleAnnotationValue(javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitSubchecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.reflection","c":"ClassValChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.reflection","c":"MethodValChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.util.count","c":"AnnotationStatistics","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.util.count","c":"JavaCodeStatistics","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug","l":"createSourceVisitor(CompilationUnitTree)","url":"createSourceVisitor(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"createSourceVisitorPublic()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createStringAnnotation(List<String>)","url":"createStringAnnotation(java.util.List)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"createSupportedLintOptions()"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.i18n","c":"I18nAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.i18n","c":"LocalizableKeyAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.common.returnsreceiver","c":"ReturnsReceiverAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.framework.util","c":"PurityAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"createTemporaryVar(Node)","url":"createTemporaryVar(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"createTops()"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"createTopsMap()"},{"p":"org.checkerframework.checker.lock","c":"LockAnalysis","l":"createTransferFunction()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"createTransferFunction()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"createTransferResult(V, TransferInput<V, S>)","url":"createTransferResult(V,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.compilermsgs","c":"CompilerMessagesAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.i18n","c":"I18nAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.i18n","c":"LocalizableKeyAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor","l":"createTreePathScanner(CompilationUnitTree)","url":"createTreePathScanner(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.javacutil","c":"BasicTypeProcessor","l":"createTreePathScanner(CompilationUnitTree)","url":"createTreePathScanner(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"createType(TypeMirror, AnnotatedTypeFactory, boolean)","url":"createType(javax.lang.model.type.TypeMirror,org.checkerframework.framework.type.AnnotatedTypeFactory,boolean)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.common.returnsreceiver","c":"ReturnsReceiverAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createTypeArgumentInference()"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"createTypeCompoundFromAnnotationMirror(AnnotationMirror, TypeAnnotationPosition, ProcessingEnvironment)","url":"createTypeCompoundFromAnnotationMirror(javax.lang.model.element.AnnotationMirror,com.sun.tools.javac.code.TypeAnnotationPosition,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.common.reflection","c":"ClassValVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.common.reflection","c":"MethodValVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"createTypeFactoryPublic()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createTypeHierarchy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createTypeHierarchy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"createTypeOfObject(AnnotatedTypeFactory)","url":"createTypeOfObject(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"createTypeOfRecord(AnnotatedTypeFactory)","url":"createTypeOfRecord(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"createTypeValidator()"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"createTypeValidator()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"createTypeValidator()"},{"p":"org.checkerframework.common.reflection","c":"ClassValVisitor","l":"createTypeValidator()"},{"p":"org.checkerframework.common.reflection","c":"MethodValVisitor","l":"createTypeValidator()"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"createTypeValidator()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createTypeVariableSubstitutor()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(AnnotatedTypeMirror, AnnotationMirror, UpperBoundChecker)","url":"createUBQualifier(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror,org.checkerframework.checker.index.upperbound.UpperBoundChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(AnnotationMirror, String, UpperBoundChecker)","url":"createUBQualifier(javax.lang.model.element.AnnotationMirror,java.lang.String,org.checkerframework.checker.index.upperbound.UpperBoundChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(AnnotationMirror, UpperBoundChecker)","url":"createUBQualifier(javax.lang.model.element.AnnotationMirror,org.checkerframework.checker.index.upperbound.UpperBoundChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(List<String>, List<String>, String)","url":"createUBQualifier(java.util.List,java.util.List,java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(List<String>, List<String>)","url":"createUBQualifier(java.util.List,java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(String, String)","url":"createUBQualifier(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"createUnderInitializationAnnotation(Class<?>)","url":"createUnderInitializationAnnotation(java.lang.Class)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"createUnderInitializationAnnotation(TypeMirror)","url":"createUnderInitializationAnnotation(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"createUnknownInitializationAnnotation(Class<?>)","url":"createUnknownInitializationAnnotation(java.lang.Class)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"createUnknownInitializationAnnotation(TypeMirror)","url":"createUnknownInitializationAnnotation(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createViewpointAdapter()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"currentFileAjavaTypes"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"currentInput"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"currentlyPrintingRaw"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"currentMethods"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"currentNode"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"currentPrintInvisibleSetting"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"currentPrintVerboseGenerics"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"currentRoot"},{"p":"org.checkerframework.javacutil","c":"BasicTypeProcessor","l":"currentRoot"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"currentTop"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"currentTree"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"customizeOptions(List<String>)","url":"customizeOptions(java.util.List)"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerFileTest","l":"customizeOptions(List<String>)","url":"customizeOptions(java.util.List)"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"DATE"},{"p":"org.checkerframework.framework.type.treeannotator","c":"DebugListTreeAnnotator","l":"DebugListTreeAnnotator(Tree.Kind[], TreeAnnotator...)","url":"%3Cinit%3E(com.sun.source.tree.Tree.Kind[],org.checkerframework.framework.type.treeannotator.TreeAnnotator...)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"DebugListTreeAnnotator","l":"DebugListTreeAnnotator(TreeAnnotator...)","url":"%3Cinit%3E(org.checkerframework.framework.type.treeannotator.TreeAnnotator...)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"debugSpew"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"debugSpew"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"deca"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"deci"},{"p":"org.checkerframework.javacutil.trees","c":"DetachedVarSymbol","l":"decl"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.AnnotationFileAnnotations","l":"declAnnos"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"declarationFromElement(Element)","url":"declarationFromElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"declarationTreeKinds()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis.FieldInitialValue","l":"declared"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_WILDCARD"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"declaredClasses"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"declaredLambdas"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DeconstructorPatternNode","l":"deconstructorPattern"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DeconstructorPatternNode","l":"DeconstructorPatternNode(TypeMirror, Tree, List<Node>)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror,com.sun.source.tree.Tree,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNoType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNullType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedPrimitiveType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedUnionType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"deepCopy()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"deepCopy()"},{"p":"org.checkerframework.javacutil","c":"DeepCopyable","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNoType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNullType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedPrimitiveType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedUnionType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.javacutil","c":"CollectionUtils","l":"deepCopy(C)"},{"p":"org.checkerframework.javacutil","c":"CollectionUtils","l":"deepCopy(M)"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"deepCopy(Pair<T1, T2>)","url":"deepCopy(org.checkerframework.javacutil.Pair)"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"deepCopyFirst(Pair<T1, T2>)","url":"deepCopyFirst(org.checkerframework.javacutil.Pair)"},{"p":"org.checkerframework.javacutil","c":"DeepCopyable","l":"deepCopyOrNull(T2)"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"deepCopySecond(Pair<T1, T2>)","url":"deepCopySecond(org.checkerframework.javacutil.Pair)"},{"p":"org.checkerframework.javacutil","c":"CollectionUtils","l":"deepCopyValues(M)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"deeplyEnclosedJavaTestFiles(File)","url":"deeplyEnclosedJavaTestFiles(java.io.File)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionNode","l":"def"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"DEFAULT_LANGUAGE_LEVEL"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"DEFAULT_VALUE"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"Default(AnnotationMirror, TypeUseLocation, boolean)","url":"%3Cinit%3E(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation,boolean)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"defaultAction"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"defaultAction(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM)","url":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"defaultAction(AnnotatedTypeMirror, AnnotatedTypeMirror, Void)","url":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"defaultAction(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeCombiner","l":"defaultAction(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"defaultAction(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"defaultAction(AnnotatedTypeMirror, P)","url":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner.DefaultAction","l":"defaultAction(AnnotatedTypeMirror, P)","url":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"defaultAction(AnnotatedTypeMirror, P)","url":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,P)"},{"p":"org.checkerframework.framework.type","c":"HashcodeAtmVisitor","l":"defaultAction(AnnotatedTypeMirror, Void)","url":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"defaultAction(Node)","url":"defaultAction(com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationEqualityVisitor","l":"defaultAction(T, T)","url":"defaultAction(T,T)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"defaultAction(T, T)","url":"defaultAction(T,T)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"DebugListTreeAnnotator","l":"defaultAction(Tree, AnnotatedTypeMirror)","url":"defaultAction(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"ListTreeAnnotator","l":"defaultAction(Tree, AnnotatedTypeMirror)","url":"defaultAction(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"LiteralTreeAnnotator","l":"defaultAction(Tree, AnnotatedTypeMirror)","url":"defaultAction(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"defaultAction(Tree, Node)","url":"defaultAction(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.Matcher","l":"defaultAction(Tree, Void)","url":"defaultAction(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"defaultAction(Tree)","url":"defaultAction(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"defaultAction(Tree)","url":"defaultAction(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"DefaultAnnotatedTypeFormatter()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"DefaultAnnotatedTypeFormatter(AnnotationFormatter, boolean, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.util.AnnotationFormatter,boolean,boolean)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"DefaultAnnotatedTypeFormatter(boolean, boolean)","url":"%3Cinit%3E(boolean,boolean)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"DefaultAnnotatedTypeFormatter(DefaultAnnotatedTypeFormatter.FormattingVisitor)","url":"%3Cinit%3E(org.checkerframework.framework.type.DefaultAnnotatedTypeFormatter.FormattingVisitor)"},{"p":"org.checkerframework.framework.util","c":"DefaultAnnotationFormatter","l":"DefaultAnnotationFormatter()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"DefaultApplierElement(AnnotatedTypeFactory, Element, AnnotatedTypeMirror, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElementImpl","l":"DefaultApplierElementImpl(QualifierDefaults.DefaultApplierElement)","url":"%3Cinit%3E(org.checkerframework.framework.util.defaults.QualifierDefaults.DefaultApplierElement)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"defaultCreateAbstractValue(CFAbstractAnalysis<CFValue, ?, ?>, AnnotationMirrorSet, TypeMirror)","url":"defaultCreateAbstractValue(org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"defaultErrorMessage(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM)","url":"defaultErrorMessage(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"defaultErrorMessage(AnnotatedTypeMirror, AnnotatedTypeMirror, Void)","url":"defaultErrorMessage(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"defaultErrorMessage(AnnotatedTypeMirror, AnnotatedTypeMirror, Void)","url":"defaultErrorMessage(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"DefaultForTypeAnnotator(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"DefaultInferredTypesApplier","l":"DefaultInferredTypesApplier(boolean, QualifierHierarchy, AnnotatedTypeFactory)","url":"%3Cinit%3E(boolean,org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"DefaultInferredTypesApplier","l":"DefaultInferredTypesApplier(QualifierHierarchy, AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"defaultInvisiblesSetting"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"defaultJointAction(Tree, Node)","url":"defaultJointAction(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"DefaultJointVisitor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"defaultPrintVerboseGenerics"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"defaultQualifierApplyToSubpackagesElement"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"DefaultQualifierForUseTypeAnnotator(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"DefaultQualifierKindHierarchy(Collection<Class<? extends Annotation>>, Class<? extends Annotation>)","url":"%3Cinit%3E(java.util.Collection,java.lang.Class)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"DefaultQualifierKindHierarchy(Collection<Class<? extends Annotation>>)","url":"%3Cinit%3E(java.util.Collection)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"defaultQualifierListValueElement"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"defaultQualifierLocationsElement"},{"p":"org.checkerframework.framework.type.poly","c":"DefaultQualifierPolymorphism","l":"DefaultQualifierPolymorphism(ProcessingEnvironment, AnnotatedTypeFactory)","url":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"defaultQualifierValueElement"},{"p":"org.checkerframework.common.reflection","c":"DefaultReflectionResolver","l":"DefaultReflectionResolver(BaseTypeChecker, MethodValAnnotatedTypeFactory, boolean)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.common.reflection.MethodValAnnotatedTypeFactory,boolean)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"defaultResult"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"defaults"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"DefaultTypeArgumentInference(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"defaultTypeFromName(AnnotatedTypeMirror, String)","url":"defaultTypeFromName(org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"DefaultTypeHierarchy(BaseTypeChecker, QualifierHierarchy, boolean, boolean)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.framework.type.QualifierHierarchy,boolean,boolean)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"deg"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"delocalize(AnnotatedTypeMirror, MethodTree)","url":"delocalize(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"delocalizeAtCallsite(AnnotatedTypeMirror, Tree, List<Node>, Node, ExecutableElement)","url":"delocalizeAtCallsite(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.util.List,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"DependentTypesError(String, JavaExpressionParseUtil.JavaExpressionParseException)","url":"%3Cinit%3E(java.lang.String,org.checkerframework.framework.util.JavaExpressionParseUtil.JavaExpressionParseException)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"DependentTypesError(String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"dependentTypesHelper"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"dependentTypesHelper"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"DependentTypesHelper(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesTreeAnnotator","l":"DependentTypesTreeAnnotator(AnnotatedTypeFactory, DependentTypesHelper)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.util.dependenttypes.DependentTypesHelper)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"depthFirstOrder"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"descendingIterator()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"descendingSet()"},{"p":"org.checkerframework.javacutil.trees","c":"DetachedVarSymbol","l":"DetachedVarSymbol(long, Name, Type, Symbol)","url":"%3Cinit%3E(long,com.sun.tools.javac.util.Name,com.sun.tools.javac.code.Type,com.sun.tools.javac.code.Symbol)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"detail"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"DETAILS_SEPARATOR"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"DETERMINISTIC"},{"p":"org.checkerframework.dataflow.qual","c":"Pure.Kind","l":"DETERMINISTIC"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"DiagMessage(Diagnostic.Kind, String, Object...)","url":"%3Cinit%3E(javax.tools.Diagnostic.Kind,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_FILE_PATTERN"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_FILE_REGEX"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_FILE_WARNING_PATTERN"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_FILE_WARNING_REGEX"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_IN_JAVA_PATTERN"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_IN_JAVA_REGEX"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_PATTERN"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_REGEX"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_WARNING_IN_JAVA_PATTERN"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_WARNING_IN_JAVA_REGEX"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_WARNING_PATTERN"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_WARNING_REGEX"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"diagnosticsToString(List<TestDiagnostic>)","url":"diagnosticsToString(java.util.List)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"diagnosticsToStrings(Iterable<Diagnostic<? extends JavaFileObject>>, boolean)","url":"diagnosticsToStrings(java.lang.Iterable,boolean)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"diagnosticToString(Diagnostic<? extends JavaFileObject>, boolean)","url":"diagnosticToString(javax.tools.Diagnostic,boolean)"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"didTestFail()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"dimensions"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"dimensions"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtilExtra","l":"dimensionUnsignedHeight(Dimension)","url":"dimensionUnsignedHeight(java.awt.Dimension)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtilExtra","l":"dimensionUnsignedWidth(Dimension)","url":"dimensionUnsignedWidth(java.awt.Dimension)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"direction"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"directSupertypes()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"directSupertypes()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"directSupertypes()"},{"p":"org.checkerframework.framework.stub","c":"JavaStubifier","l":"dirnameToPath(String)","url":"dirnameToPath(java.lang.String)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"DISABLE_BUILDER_FRAMEWORK_SUPPORTS"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"DISABLE_RETURNS_RECEIVER"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"divide(int)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"divide(Number)","url":"divide(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"divide(Number)","url":"divide(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"divide(Number)","url":"divide(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"divide(Number)","url":"divide(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"divide(Number)","url":"divide(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"divide(Number)","url":"divide(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"divide(Number)","url":"divide(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"divide(Range)","url":"divide(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelations","l":"division(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"division(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"division(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"division(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"DOES_NOT_MATCH_REGEX_NAME"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"doesAnnotatedForApplyToThisChecker(AnnotationMirror)","url":"doesAnnotatedForApplyToThisChecker(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"doesNotMatchRegexValueElement"},{"p":"org.checkerframework.common.util.report","c":"DoNothingChecker","l":"DoNothingChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkWPIPerDirectoryTest","l":"doNotTypecheck(String)","url":"doNotTypecheck(java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"dontEmitDebugInfo()"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"DOT_SEPARATED_IDENTIFIERS"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"DOT_SPLITTER"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"DOTCFGVisualizer()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"dotOutputFileName(UnderlyingAST)","url":"dotOutputFileName(org.checkerframework.dataflow.cfg.UnderlyingAST)"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"DOUBLE"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"DOUBLE"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"DoubleAnnotatedTypeScanner()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"DoubleAnnotatedTypeScanner(AnnotatedTypeScanner.Reduce<R>, R)","url":"%3Cinit%3E(org.checkerframework.framework.type.visitor.AnnotatedTypeScanner.Reduce,R)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"DoubleJavaParserVisitor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DoubleLiteralNode","l":"DoubleLiteralNode(LiteralTree)","url":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"DoubleMath(double)","url":"%3Cinit%3E(double)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"DOUBLEVAL_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"doubleValValueElement"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"drawToDot(File, AnnotatedTypeMirror)","url":"drawToDot(java.io.File,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"drawToDot(String, AnnotatedTypeMirror)","url":"drawToDot(java.lang.String,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"drawToPng(File, AnnotatedTypeMirror)","url":"drawToPng(java.io.File,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"drawToPng(String, AnnotatedTypeMirror)","url":"drawToPng(java.lang.String,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"ea"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.FlowRule","l":"EACH_TO_EACH"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"Effect(Class<? extends Annotation>)","url":"%3Cinit%3E(java.lang.Class)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect.EffectRange","l":"EffectRange(Effect, Effect)","url":"%3Cinit%3E(org.checkerframework.checker.guieffect.Effect,org.checkerframework.checker.guieffect.Effect)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"effStack"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"element"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"element"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"element"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"element"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"element"},{"p":"org.checkerframework.framework.util.element","c":"ElementAnnotationUtil","l":"ElementAnnotationUtil()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromDeclaration(ClassTree)","url":"elementFromDeclaration(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromDeclaration(ExpressionTree)","url":"elementFromDeclaration(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromDeclaration(MemberSelectTree)","url":"elementFromDeclaration(com.sun.source.tree.MemberSelectTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromDeclaration(MethodInvocationTree)","url":"elementFromDeclaration(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromDeclaration(MethodTree)","url":"elementFromDeclaration(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromDeclaration(NewClassTree)","url":"elementFromDeclaration(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromDeclaration(VariableTree)","url":"elementFromDeclaration(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(ClassTree)","url":"elementFromTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(ExpressionTree)","url":"elementFromTree(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(MemberSelectTree)","url":"elementFromTree(com.sun.source.tree.MemberSelectTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(MethodInvocationTree)","url":"elementFromTree(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(MethodTree)","url":"elementFromTree(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(NewClassTree)","url":"elementFromTree(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(Tree)","url":"elementFromTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(VariableTree)","url":"elementFromTree(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromUse(ClassTree)","url":"elementFromUse(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromUse(ExpressionTree)","url":"elementFromUse(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromUse(MemberSelectTree)","url":"elementFromUse(com.sun.source.tree.MemberSelectTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromUse(MethodInvocationTree)","url":"elementFromUse(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromUse(MethodTree)","url":"elementFromUse(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromUse(NewClassTree)","url":"elementFromUse(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromUse(VariableTree)","url":"elementFromUse(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"elementNamesValues(String, Object)","url":"elementNamesValues(java.lang.String,java.lang.Object)"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"ElementQualifierHierarchy(Collection<Class<? extends Annotation>>, Elements, GenericAnnotatedTypeFactory<?, ?, ?, ?>)","url":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements,org.checkerframework.framework.type.GenericAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter","l":"elements"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsAnnotationFormatter","l":"elements"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsFormattingVisitor","l":"elements"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"elements"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"elements"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"elements"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"elements"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"elements"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"elements"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"elementsWithSuppressedWarnings"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"elementToBoundType"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"elementToDefaults"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.Kind","l":"ELSE"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.FlowRule","l":"ELSE_TO_BOTH"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.FlowRule","l":"ELSE_TO_ELSE"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"elseFlowRule"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"elseOperand"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"elseStore"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"elseStore"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"elseStore"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"elseStores"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"elseSuccessor"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"emitDebugInfo()"},{"p":"org.checkerframework.common.util.debug","c":"EmptyProcessor","l":"EmptyProcessor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"emptySet()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"emptyStore"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingClass(TreePath)","url":"enclosingClass(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingDeclarationPath(TreePath)","url":"enclosingDeclarationPath(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"enclosingExpression"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"enclosingMemberSelect()"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingMethod(TreePath)","url":"enclosingMethod(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingMethodOrLambda(TreePath)","url":"enclosingMethodOrLambda(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingNonParen(TreePath)","url":"enclosingNonParen(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingOfClass(TreePath, Class<T>)","url":"enclosingOfClass(com.sun.source.util.TreePath,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingOfKind(TreePath, Set<Tree.Kind>)","url":"enclosingOfKind(com.sun.source.util.TreePath,java.util.Set)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingOfKind(TreePath, Tree.Kind)","url":"enclosingOfKind(com.sun.source.util.TreePath,com.sun.source.tree.Tree.Kind)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"enclosingPackage(Element)","url":"enclosingPackage(javax.lang.model.element.Element)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"enclosingStatement(Tree)","url":"enclosingStatement(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingTopLevelBlock(TreePath)","url":"enclosingTopLevelBlock(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"enclosingType"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"enclosingTypeElement(Element)","url":"enclosingTypeElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingVariable(TreePath)","url":"enclosingVariable(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"ensureDirectoryExists(String)","url":"ensureDirectoryExists(java.lang.String)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"ensuresLockHeldIfExpressionElement"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"ensuresLockHeldValueElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierExpressionElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierIfExpressionElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierIfListTM"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierIfListValueElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierIfResultElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierIfTM"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierListTM"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierListValueElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierTM"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlock.SpecialBlockType","l":"ENTRY"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"entryBlock"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"entrySet()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"env"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"env"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"env"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints","l":"equalities"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Equalities","l":"Equalities()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"EqualitiesSolver","l":"EqualitiesSolver()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"EQUALITY_COMPARER"},{"p":"org.checkerframework.framework.type","c":"EqualityAtmComparer","l":"EqualityAtmComparer()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"equalityComparer"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"equals(Effect)","url":"equals(org.checkerframework.checker.guieffect.Effect)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprValue","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseAndNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseComplementNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseOrNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseXorNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BooleanLiteralNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CatchMarkerNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CharacterLiteralNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalAndNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalNotNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalOrNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DoubleLiteralNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"EqualToNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatLiteralNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingDivisionNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingRemainderNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanOrEqualNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerDivisionNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerLiteralNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerRemainderNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LeftShiftNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanOrEqualNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LongLiteralNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NotEqualNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullLiteralNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalAdditionNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMinusNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMultiplicationNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalPlusNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalSubtractionNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ShortLiteralNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SignedRightShiftNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringLiteralNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThisNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnsignedRightShiftNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionNode","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeParameterBounds","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.util","c":"Contract.ConditionalPostcondition","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TUConstraint","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"equalTo(Number)","url":"equalTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"equalTo(Number)","url":"equalTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"equalTo(Number)","url":"equalTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"equalTo(Number)","url":"equalTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"equalTo(Number)","url":"equalTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"equalTo(Number)","url":"equalTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"equalTo(Number)","url":"equalTo(java.lang.Number)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"EqualToNode","l":"EqualToNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"EquivalentAtmComboScanner()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"errMissingFormatAnnotation()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"error"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"Error"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"ERROR"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"error(String, Object...)","url":"error(java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"errorKey"},{"p":"org.checkerframework.framework.util.element","c":"ElementAnnotationUtil.ErrorTypeKindException","l":"ErrorTypeKindException(String, Object...)","url":"%3Cinit%3E(java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"errsOnLastExit"},{"p":"org.checkerframework.common.value","c":"ReflectiveEvaluator","l":"evaluateMethodCall(List<List<?>>, List<?>, MethodInvocationTree)","url":"evaluateMethodCall(java.util.List,java.util.List,com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"evaluatePredicate(AnnotationMirror, String)","url":"evaluatePredicate(javax.lang.model.element.AnnotationMirror,java.lang.String)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"evaluatePredicate(List<String>, String)","url":"evaluatePredicate(java.util.List,java.lang.String)"},{"p":"org.checkerframework.common.value","c":"ReflectiveEvaluator","l":"evaluateStaticFieldAccess(String, String, ExpressionTree)","url":"evaluateStaticFieldAccess(java.lang.String,java.lang.String,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"evaluator"},{"p":"org.checkerframework.common.value","c":"ReflectiveEvaluator","l":"evaluteConstructorCall(List<List<?>>, NewClassTree, TypeMirror)","url":"evaluteConstructorCall(java.util.List,com.sun.source.tree.NewClassTree,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"everyStringMatchesSomeRegex(Collection<String>, Collection<String>)","url":"everyStringMatchesSomeRegex(java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"EVERYTHING"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"exa"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block.BlockType","l":"EXCEPTION_BLOCK"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode.ExtendedNodeType","l":"EXCEPTION_NODE"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"EXCEPTION_PARAMETER"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlock.SpecialBlockType","l":"EXCEPTIONAL_EXIT"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"exceptionalExitBlock"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"exceptionalExitStores"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"exceptionalStores"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"exceptionalSuccessors"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"ExceptionBlockImpl()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"exceptionStores"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"exceptionToInvalidFormatAnnotation(IllegalArgumentException)","url":"exceptionToInvalidFormatAnnotation(java.lang.IllegalArgumentException)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"exceptionToInvalidFormatAnnotation(IllegalFormatException)","url":"exceptionToInvalidFormatAnnotation(java.util.IllegalFormatException)"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.ExcessiveOrMissingFormatArgumentException","l":"ExcessiveOrMissingFormatArgumentException(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"execDotToPng(File, File)","url":"execDotToPng(java.io.File,java.io.File)"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_WILDCARD"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory.ParameterizedExecutableType","l":"executableType"},{"p":"org.checkerframework.framework.util","c":"ExecUtil","l":"execute(String[], OutputStream, OutputStream)","url":"execute(java.lang.String[],java.io.OutputStream,java.io.OutputStream)"},{"p":"org.checkerframework.framework.util","c":"ExecUtil","l":"ExecUtil()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlock.SpecialBlockType","l":"EXIT"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"expandArgFiles(List<File>)","url":"expandArgFiles(java.util.List)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"expandCFOptions(List<? extends Class<?>>, String[])","url":"expandCFOptions(java.util.List,java.lang.String[])"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"expandVarArgsParameters(AnnotatedTypeFactory, AnnotatedTypeMirror.AnnotatedExecutableType, List<? extends ExpressionTree>)","url":"expandVarArgsParameters(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"expandVarArgsParametersFromTypes(AnnotatedTypeMirror.AnnotatedExecutableType, List<AnnotatedTypeMirror>)","url":"expandVarArgsParametersFromTypes(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.List)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"ExpectedTreesVisitor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"EXPLICIT_LOWER_BOUND"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"EXPLICIT_UPPER_BOUND"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExplicitThisNode","l":"ExplicitThisNode(IdentifierTree)","url":"%3Cinit%3E(com.sun.source.tree.IdentifierTree)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"exprContainsVariable(Node, Node)","url":"exprContainsVariable(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"expression"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"expression"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"expression"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethodsIf","l":"expression()"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOfIf","l":"expression()"},{"p":"org.checkerframework.checker.lock.qual","c":"EnsuresLockHeldIf","l":"expression()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresKeyForIf","l":"expression()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresNonNullIf","l":"expression()"},{"p":"org.checkerframework.common.value.qual","c":"EnsuresMinLenIf","l":"expression()"},{"p":"org.checkerframework.framework.qual","c":"EnsuresQualifier","l":"expression()"},{"p":"org.checkerframework.framework.qual","c":"EnsuresQualifierIf","l":"expression()"},{"p":"org.checkerframework.framework.qual","c":"RequiresQualifier","l":"expression()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"ExpressionStatementNode(ExpressionTree)","url":"%3Cinit%3E(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"expressionString"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"ExtendedNode(ExtendedNode.ExtendedNodeType)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.builder.ExtendedNode.ExtendedNodeType)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGBuilder","l":"extendedNodeCollectionToStringDebug(Collection<? extends ExtendedNode>)","url":"extendedNodeCollectionToStringDebug(java.util.Collection)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"extendWithClassNameNode(ClassNameNode)","url":"extendWithClassNameNode(org.checkerframework.dataflow.cfg.node.ClassNameNode)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"extendWithExtendedNode(ExtendedNode)","url":"extendWithExtendedNode(org.checkerframework.dataflow.cfg.builder.ExtendedNode)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"extendWithNode(Node)","url":"extendWithNode(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"extendWithNodeWithException(Node, TypeMirror)","url":"extendWithNodeWithException(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"extendWithNodeWithExceptions(Node, Set<TypeMirror>)","url":"extendWithNodeWithExceptions(org.checkerframework.dataflow.cfg.node.Node,java.util.Set)"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"extractAndApply()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"extractAndApply()"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"extractAndApply()"},{"p":"org.checkerframework.framework.util.element","c":"TypeVarUseApplier","l":"extractAndApply()"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"extractAndApply()"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"extractAnnotationMirror(AnnotatedTypeMirror)","url":"extractAnnotationMirror(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"extractArg(String, String, List<String>)","url":"extractArg(java.lang.String,java.lang.String,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"extractBootClassPath(List<String>)","url":"extractBootClassPath(java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"extractCpOpts(List<String>)","url":"extractCpOpts(java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"extractFileArg(String, File, List<String>)","url":"extractFileArg(java.lang.String,java.io.File,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"extractJvmOpts(List<String>)","url":"extractJvmOpts(java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"extractOptWithPattern(Pattern, boolean, List<String>)","url":"extractOptWithPattern(java.util.regex.Pattern,boolean,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"extractPpOpts(List<String>)","url":"extractPpOpts(java.util.List)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"F2A","l":"F2A(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"F2AReducer","l":"F2AReducer(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"failure(FormatterTreeUtil.Result<?>, String, Object...)","url":"failure(org.checkerframework.checker.formatter.FormatterTreeUtil.Result,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"failure(FormatterTreeUtil.Result<?>, String, Object...)","url":"failure(org.checkerframework.checker.formatter.FormatterTreeUtil.Result,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.AnnotationFileAnnotations","l":"fakeOverrides"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"falseFlowRule"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"falseSucc"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"FBCBOTTOM"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"femto"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"FENUM_BOTTOM"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"FENUM_TOP"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"FENUM_UNQUALIFIED"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"FenumAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.fenum","c":"FenumChecker","l":"FenumChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory.FenumQualifierHierarchy","l":"FenumQualifierHierarchy(Collection<Class<? extends Annotation>>, Elements)","url":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"FenumVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"field"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"field"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"FIELD"},{"p":"org.checkerframework.common.value.qual","c":"MinLenFieldInvariant","l":"field()"},{"p":"org.checkerframework.framework.qual","c":"FieldInvariant","l":"field()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"FieldAccess(JavaExpression, FieldAccessNode)","url":"%3Cinit%3E(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.cfg.node.FieldAccessNode)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"FieldAccess(JavaExpression, TypeMirror, VariableElement)","url":"%3Cinit%3E(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.type.TypeMirror,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"FieldAccess(JavaExpression, VariableElement)","url":"%3Cinit%3E(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"FieldAccessNode(Tree, Node)","url":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"FieldAccessNode(Tree, VariableElement, Node)","url":"%3Cinit%3E(com.sun.source.tree.Tree,javax.lang.model.element.VariableElement,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis.FieldInitialValue","l":"fieldDecl"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis.FieldInitialValue","l":"FieldInitialValue(FieldAccess, V, V)","url":"%3Cinit%3E(org.checkerframework.dataflow.expression.FieldAccess,V,V)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fieldInvariantFieldElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fieldInvariantQualifierElement"},{"p":"org.checkerframework.framework.util","c":"FieldInvariants","l":"FieldInvariants(FieldInvariants, List<String>, List<AnnotationMirror>, AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.util.FieldInvariants,java.util.List,java.util.List,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"FieldInvariants","l":"FieldInvariants(List<String>, List<AnnotationMirror>, AnnotatedTypeFactory)","url":"%3Cinit%3E(java.util.List,java.util.List,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.common.initializedfields.qual","c":"EnsuresInitializedFields","l":"fields()"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"fieldTAPosition(int)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"fieldValues"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"fieldValues"},{"p":"org.checkerframework.framework.stub","c":"FileAnnotationFileResource","l":"FileAnnotationFileResource(File)","url":"%3Cinit%3E(java.io.File)"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"filter(T, Predicate<? super T>)","url":"filter(T,java.util.function.Predicate)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"filterInitializedFields(Tree, List<VariableTree>, boolean)","url":"filterInitializedFields(com.sun.source.tree.Tree,java.util.List,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"finalLocalValues"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"finalLocalValues"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"findAnnotationInHierarchy(Collection<? extends AnnotationMirror>, AnnotationMirror)","url":"findAnnotationInHierarchy(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"findAnnotationInHierarchy(Collection<? extends AnnotationMirror>, AnnotationMirror)","url":"findAnnotationInHierarchy(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"findAnnotationInHierarchy(Collection<? extends AnnotationMirror>, AnnotationMirror)","url":"findAnnotationInHierarchy(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"findAnnotationInSameHierarchy(Collection<? extends AnnotationMirror>, AnnotationMirror)","url":"findAnnotationInSameHierarchy(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"findAnnotationInSameHierarchy(Collection<? extends AnnotationMirror>, AnnotationMirror)","url":"findAnnotationInSameHierarchy(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"findAnnotationInSameHierarchy(Collection<? extends AnnotationMirror>, AnnotationMirror)","url":"findAnnotationInSameHierarchy(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"findClass(String, TreePath)","url":"findClass(java.lang.String,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"findClassInPackage(String, Symbol.PackageSymbol, TreePath)","url":"findClassInPackage(java.lang.String,com.sun.tools.javac.code.Symbol.PackageSymbol,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"findComparisonFile(File)","url":"findComparisonFile(java.io.File)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"findConcreteUpperBound(TypeMirror)","url":"findConcreteUpperBound(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"findEffectiveAnnotationInHierarchy(QualifierHierarchy, AnnotatedTypeMirror, AnnotationMirror, boolean)","url":"findEffectiveAnnotationInHierarchy(org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"findEffectiveAnnotationInHierarchy(QualifierHierarchy, AnnotatedTypeMirror, AnnotationMirror)","url":"findEffectiveAnnotationInHierarchy(org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"findEffectiveAnnotations(QualifierHierarchy, AnnotatedTypeMirror)","url":"findEffectiveAnnotations(org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"findEffectiveLowerBoundAnnotations(QualifierHierarchy, AnnotatedTypeMirror)","url":"findEffectiveLowerBoundAnnotations(org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"findElement(CharSequence)","url":"findElement(java.lang.CharSequence)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"EqualitiesSolver","l":"findEqualTarget(TargetConstraints.Equalities, AnnotationMirrorSet)","url":"findEqualTarget(org.checkerframework.framework.util.typeinference.solver.TargetConstraints.Equalities,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"findField(String, TypeMirror, TreePath)","url":"findField(java.lang.String,javax.lang.model.type.TypeMirror,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"findFieldInType(TypeElement, String)","url":"findFieldInType(javax.lang.model.element.TypeElement,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"findFieldsInType(TypeElement, Collection<String>)","url":"findFieldsInType(javax.lang.model.element.TypeElement,java.util.Collection)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"findFieldsInTypeOrSuperType(TypeMirror, Collection<String>)","url":"findFieldsInTypeOrSuperType(javax.lang.model.type.TypeMirror,java.util.Collection)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"findFilesInParent(File, String...)","url":"findFilesInParent(java.io.File,java.lang.String...)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"findFunction(Tree, ProcessingEnvironment)","url":"findFunction(com.sun.source.tree.Tree,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"findHighestQualifiers(Set<QualifierKind>)","url":"findHighestQualifiers(java.util.Set)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"findInheritedEffectRange(TypeElement, ExecutableElement, boolean, Tree)","url":"findInheritedEffectRange(javax.lang.model.element.TypeElement,javax.lang.model.element.ExecutableElement,boolean,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"findInheritedEffectRange(TypeElement, ExecutableElement)","url":"findInheritedEffectRange(javax.lang.model.element.TypeElement,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"findJavaFilesPerDirectory(File, String...)","url":"findJavaFilesPerDirectory(java.io.File,java.lang.String...)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"findLocalVariableOrParameter(String, TreePath)","url":"findLocalVariableOrParameter(java.lang.String,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"findLowestQualifiers(Set<QualifierKind>)","url":"findLowestQualifiers(java.util.Set)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"findMethod(String, TypeMirror, TreePath, List<TypeMirror>)","url":"findMethod(java.lang.String,javax.lang.model.type.TypeMirror,com.sun.source.util.TreePath,java.util.List)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"findNestedJavaTestFiles(String...)","url":"findNestedJavaTestFiles(java.lang.String...)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"findPackage(String, TreePath)","url":"findPackage(java.lang.String,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"findPathTo(Class<?>, boolean)","url":"findPathTo(java.lang.Class,boolean)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"findRelativeNestedJavaFiles(File, String...)","url":"findRelativeNestedJavaFiles(java.io.File,java.lang.String...)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"findRelativeNestedJavaFiles(String, String...)","url":"findRelativeNestedJavaFiles(java.lang.String,java.lang.String...)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"findTypeArguments(ProcessingEnvironment, AnnotatedTypeFactory, ExpressionTree, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"findTypeArguments(javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.ExpressionTree,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory.ScanState","l":"FINISHED"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"finishValue(NullnessNoInitValue, NullnessNoInitStore, NullnessNoInitStore)","url":"finishValue(org.checkerframework.checker.nullness.NullnessNoInitValue,org.checkerframework.checker.nullness.NullnessNoInitStore,org.checkerframework.checker.nullness.NullnessNoInitStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"finishValue(NullnessNoInitValue, NullnessNoInitStore)","url":"finishValue(org.checkerframework.checker.nullness.NullnessNoInitValue,org.checkerframework.checker.nullness.NullnessNoInitStore)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"finishValue(V, S, S)","url":"finishValue(V,S,S)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"finishValue(V, S)","url":"finishValue(V,S)"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"first"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"first()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"firstStatement(Tree)","url":"firstStatement(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"FIsA","l":"FIsA(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"FIsAReducer","l":"FIsAReducer(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"flatOptions()"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"FLOAT"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"FLOAT"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"FLOAT"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingDivisionNode","l":"FloatingDivisionNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingRemainderNode","l":"FloatingRemainderNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatLiteralNode","l":"FloatLiteralNode(LiteralTree)","url":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"FloatMath(float)","url":"%3Cinit%3E(float)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"floor(AnnotationMirror)","url":"floor(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"flowByDefault"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"flowResult"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"flowResultAnalysisCaches"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"flowRule"},{"p":"org.checkerframework.common.returnsreceiver","c":"FluentAPIGenerator","l":"FluentAPIGenerator()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"FORMAL_PARAM_NAME_STRING"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"formalParameter"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"FormalParameter(int, VariableElement)","url":"%3Cinit%3E(int,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"formalParameterPattern"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"FORMAT_NAME"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"format()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFormatter","l":"format(AnnotatedTypeMirror, boolean)","url":"format(org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"format(AnnotatedTypeMirror, boolean)","url":"format(org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFormatter","l":"format(AnnotatedTypeMirror)","url":"format(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"format(AnnotatedTypeMirror)","url":"format(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"format(Object)","url":"format(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"format(Object)","url":"format(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"format(Object)","url":"format(java.lang.Object)"},{"p":"org.checkerframework.framework.util","c":"AnnotationFormatter","l":"formatAnnotationMirror(AnnotationMirror)","url":"formatAnnotationMirror(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"DefaultAnnotationFormatter","l":"formatAnnotationMirror(AnnotationMirror)","url":"formatAnnotationMirror(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsAnnotationFormatter","l":"formatAnnotationString(Collection<? extends AnnotationMirror>, boolean)","url":"formatAnnotationString(java.util.Collection,boolean)"},{"p":"org.checkerframework.framework.util","c":"AnnotationFormatter","l":"formatAnnotationString(Collection<? extends AnnotationMirror>, boolean)","url":"formatAnnotationString(java.util.Collection,boolean)"},{"p":"org.checkerframework.framework.util","c":"DefaultAnnotationFormatter","l":"formatAnnotationString(Collection<? extends AnnotationMirror>, boolean)","url":"formatAnnotationString(java.util.Collection,boolean)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"formatAnnotationToCategories(AnnotationMirror)","url":"formatAnnotationToCategories(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"formatAnnotationToCategories(AnnotationMirror)","url":"formatAnnotationToCategories(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"FORMATBOTTOM"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"formatFlatType(AnnotatedTypeMirror)","url":"formatFlatType(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"formatJavaxToolString(String, boolean)","url":"formatJavaxToolString(java.lang.String,boolean)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"FORMATMETHOD"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil","l":"formatParameterCategories(String)","url":"formatParameterCategories(java.lang.String)"},{"p":"org.checkerframework.checker.i18nformatter.util","c":"I18nFormatUtil","l":"formatParameterCategories(String)","url":"formatParameterCategories(java.lang.String)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterVisitor","l":"formatStringIndex(ExecutableElement)","url":"formatStringIndex(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"FormatterAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterChecker","l":"FormatterChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTransfer","l":"FormatterTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"FormatterTreeUtil(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterVisitor","l":"FormatterVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"formattingVisitor"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"FormattingVisitor(AnnotationFormatter, boolean, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.util.AnnotationFormatter,boolean,boolean)"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil","l":"FormatUtil()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"formatValueElement"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.Direction","l":"FORWARD"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"ForwardAnalysisImpl(int)","url":"%3Cinit%3E(int)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"ForwardAnalysisImpl(T)","url":"%3Cinit%3E(T)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist.ForwardDFOComparator","l":"ForwardDFOComparator()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.FoundRequired","l":"found"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"frameworkContractClass"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"frameworkContractListClass"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"freshTypeVariable(TypeMirror, ProcessingEnvironment)","url":"freshTypeVariable(javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"from"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"from"},{"p":"org.checkerframework.checker.index.qual","c":"HasSubsequence","l":"from()"},{"p":"org.checkerframework.common.value.qual","c":"ArrayLenRange","l":"from()"},{"p":"org.checkerframework.common.value.qual","c":"IntRange","l":"from()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"fromArrayAccess(ArrayAccessNode)","url":"fromArrayAccess(org.checkerframework.dataflow.cfg.node.ArrayAccessNode)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromCelsiusToKelvin(@org.checkerframework.checker.units.qual.C int)","url":"fromCelsiusToKelvin(@org.checkerframework.checker.units.qual.Cint)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"fromClass(Elements, Class<? extends Annotation>, Map<String, AnnotationValue>)","url":"fromClass(javax.lang.model.util.Elements,java.lang.Class,java.util.Map)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"fromClass(Elements, Class<? extends Annotation>)","url":"fromClass(javax.lang.model.util.Elements,java.lang.Class)"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"fromCompilationResults(TestConfiguration, CompilationResult, List<TestDiagnostic>)","url":"fromCompilationResults(org.checkerframework.framework.test.TestConfiguration,org.checkerframework.framework.test.CompilationResult,java.util.List)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"fromConversionChar(char)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromDiagnosticFileLine(String)","url":"fromDiagnosticFileLine(java.lang.String)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromDiagnosticFileString(String)","url":"fromDiagnosticFileString(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fromElement(Element)","url":"fromElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fromElement(ExecutableElement)","url":"fromElement(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fromElement(TypeElement)","url":"fromElement(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fromExpressionTreeCache"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromGramToKiloGram(@org.checkerframework.checker.units.qual.g int)","url":"fromGramToKiloGram(@org.checkerframework.checker.units.qual.gint)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromHourToMinute(@org.checkerframework.checker.units.qual.h int)","url":"fromHourToMinute(@org.checkerframework.checker.units.qual.hint)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromJavaFileComment(String, long, String)","url":"fromJavaFileComment(java.lang.String,long,java.lang.String)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromJavaSourceLine(String, String, long)","url":"fromJavaSourceLine(java.lang.String,java.lang.String,long)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromJavaxDiagnosticList(List<Diagnostic<? extends JavaFileObject>>, boolean)","url":"fromJavaxDiagnosticList(java.util.List,boolean)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromJavaxToolsDiagnostic(String, boolean)","url":"fromJavaxToolsDiagnostic(java.lang.String,boolean)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromJSpecifyFileComment(String, long, String)","url":"fromJSpecifyFileComment(java.lang.String,long,java.lang.String)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromKelvinToCelsius(@org.checkerframework.checker.units.qual.K int)","url":"fromKelvinToCelsius(@org.checkerframework.checker.units.qual.Kint)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromKiloGramToGram(@org.checkerframework.checker.units.qual.kg int)","url":"fromKiloGramToGram(@org.checkerframework.checker.units.qual.kgint)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromKiloGramToMetricTon(@org.checkerframework.checker.units.qual.kg int)","url":"fromKiloGramToMetricTon(@org.checkerframework.checker.units.qual.kgint)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromKiloMeterPerHourToMeterPerSecond(@org.checkerframework.checker.units.qual.kmPERh double)","url":"fromKiloMeterPerHourToMeterPerSecond(@org.checkerframework.checker.units.qual.kmPERhdouble)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromKiloMeterToMeter(@org.checkerframework.checker.units.qual.km int)","url":"fromKiloMeterToMeter(@org.checkerframework.checker.units.qual.kmint)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromKiloNewtonToNewton(@org.checkerframework.checker.units.qual.kN int)","url":"fromKiloNewtonToNewton(@org.checkerframework.checker.units.qual.kNint)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fromMemberTreeCache"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromMeterPerSecondToKiloMeterPerHour(@org.checkerframework.checker.units.qual.mPERs double)","url":"fromMeterPerSecondToKiloMeterPerHour(@org.checkerframework.checker.units.qual.mPERsdouble)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromMeterToKiloMeter(@org.checkerframework.checker.units.qual.m int)","url":"fromMeterToKiloMeter(@org.checkerframework.checker.units.qual.mint)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromMeterToMilliMeter(@org.checkerframework.checker.units.qual.m int)","url":"fromMeterToMilliMeter(@org.checkerframework.checker.units.qual.mint)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromMetricTonToKiloGram(@org.checkerframework.checker.units.qual.t int)","url":"fromMetricTonToKiloGram(@org.checkerframework.checker.units.qual.tint)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromMilliMeterToMeter(@org.checkerframework.checker.units.qual.mm int)","url":"fromMilliMeterToMeter(@org.checkerframework.checker.units.qual.mmint)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromMinuteToHour(@org.checkerframework.checker.units.qual.min int)","url":"fromMinuteToHour(@org.checkerframework.checker.units.qual.minint)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromMinuteToSecond(@org.checkerframework.checker.units.qual.min int)","url":"fromMinuteToSecond(@org.checkerframework.checker.units.qual.minint)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"fromName(Elements, CharSequence, Map<String, AnnotationValue>)","url":"fromName(javax.lang.model.util.Elements,java.lang.CharSequence,java.util.Map)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"fromName(Elements, CharSequence)","url":"fromName(javax.lang.model.util.Elements,java.lang.CharSequence)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fromNewClass(NewClassTree)","url":"fromNewClass(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromNewtonToKiloNewton(@org.checkerframework.checker.units.qual.N int)","url":"fromNewtonToKiloNewton(@org.checkerframework.checker.units.qual.Nint)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"fromNode(Node)","url":"fromNode(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"fromNodeFieldAccess(FieldAccessNode)","url":"fromNodeFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"fromParseString(String)","url":"fromParseString(java.lang.String)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromPatternMatching(Pattern, Pattern, String, Long, String)","url":"fromPatternMatching(java.util.regex.Pattern,java.util.regex.Pattern,java.lang.String,java.lang.Long,java.lang.String)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromSecondToMinute(@org.checkerframework.checker.units.qual.s int)","url":"fromSecondToMinute(@org.checkerframework.checker.units.qual.sint)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"fromTree(ExpressionTree)","url":"fromTree(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fromTypeTreeCache"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"fromVariableTree(VariableTree)","url":"fromVariableTree(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"fullMessageOf(String, String)","url":"fullMessageOf(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"FunctionalInterfaceNode(LambdaExpressionTree)","url":"%3Cinit%3E(com.sun.source.tree.LambdaExpressionTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"FunctionalInterfaceNode(MemberReferenceTree)","url":"%3Cinit%3E(com.sun.source.tree.MemberReferenceTree)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner.FunctionalSwitchExpressionScanner","l":"FunctionalSwitchExpressionScanner(BiFunction<ExpressionTree, P1, R1>, BiFunction<R1, R1, R1>)","url":"%3Cinit%3E(java.util.function.BiFunction,java.util.function.BiFunction)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"g"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"g"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"GENERAL"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"GENERAL"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.GeneralAnnotatedTypeFactory","l":"GeneralAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"generated"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"GenericAnnotatedTypeFactory(BaseTypeChecker, boolean)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,boolean)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"GenericAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityVisitHistory","l":"get(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","url":"get(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"get(Object)","url":"get(java.lang.Object)"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"get(T)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationValue","l":"getAccumulatedValues()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"getAccumulatedValues(AnnotationMirror)","url":"getAccumulatedValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"getAccumulatedValues(Tree)","url":"getAccumulatedValues(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"getActualDiagnostics()"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"getAllAbstractMethods(TypeElement)","url":"getAllAbstractMethods(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getAllBlocks()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"getAllFields(ClassTree)","url":"getAllFields(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getAllFieldsIn(TypeElement, Elements)","url":"getAllFieldsIn(javax.lang.model.element.TypeElement,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getAllMethodsIn(TypeElement, Elements)","url":"getAllMethodsIn(javax.lang.model.element.TypeElement,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getAllNodes()"},{"p":"org.checkerframework.taglet","c":"ManualTaglet","l":"getAllowedLocations()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getAllSupertypes(TypeElement, ProcessingEnvironment)","url":"getAllSupertypes(javax.lang.model.element.TypeElement,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getAllTypeElementsIn(TypeElement)","url":"getAllTypeElementsIn(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedUnionType","l":"getAlternatives()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"getAnalysis()"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"getAnnot()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedNullType(Set<? extends AnnotationMirror>)","url":"getAnnotatedNullType(java.util.Set)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(Class<?>)","url":"getAnnotatedType(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(ClassTree)","url":"getAnnotatedType(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(Element)","url":"getAnnotatedType(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(ExecutableElement)","url":"getAnnotatedType(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(MethodTree)","url":"getAnnotatedType(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(NewArrayTree)","url":"getAnnotatedType(com.sun.source.tree.NewArrayTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(NewClassTree)","url":"getAnnotatedType(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"getAnnotatedType(Tree)","url":"getAnnotatedType(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(Tree)","url":"getAnnotatedType(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(TypeElement)","url":"getAnnotatedType(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"getAnnotatedTypeBefore(JavaExpression, ExpressionTree)","url":"getAnnotatedTypeBefore(org.checkerframework.dataflow.expression.JavaExpression,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotatedTypeBefore(JavaExpression, ExpressionTree)","url":"getAnnotatedTypeBefore(org.checkerframework.dataflow.expression.JavaExpression,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedTypeFormatter()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedTypeFromTypeTree(Tree)","url":"getAnnotatedTypeFromTypeTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"getAnnotatedTypeLhs(Tree)","url":"getAnnotatedTypeLhs(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotatedTypeLhs(Tree)","url":"getAnnotatedTypeLhs(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotatedTypeLhsNoTypeVarDefault(Tree)","url":"getAnnotatedTypeLhsNoTypeVarDefault(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"getAnnotatedTypeMirror(Element)","url":"getAnnotatedTypeMirror(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"getAnnotatedTypeMirrorOfParameter(AnnotatedTypeMirror.AnnotatedExecutableType, int)","url":"getAnnotatedTypeMirrorOfParameter(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,int)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotatedTypeRhsUnaryAssign(UnaryTree)","url":"getAnnotatedTypeRhsUnaryAssign(com.sun.source.tree.UnaryTree)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"getAnnotatedTypes(AnnotatedTypeFactory, List<AnnotatedTypeMirror>, List<? extends ExpressionTree>)","url":"getAnnotatedTypes(org.checkerframework.framework.type.AnnotatedTypeFactory,java.util.List,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotatedTypeVarargsArray(Tree)","url":"getAnnotatedTypeVarargsArray(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getAnnotation(Class<? extends Annotation>)","url":"getAnnotation(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getAnnotation(String)","url":"getAnnotation(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotationByClass(Collection<? extends AnnotationMirror>, Class<? extends Annotation>)","url":"getAnnotationByClass(java.util.Collection,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getAnnotationByClass(Collection<? extends AnnotationMirror>, Class<? extends Annotation>)","url":"getAnnotationByClass(java.util.Collection,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getAnnotationByName(Collection<? extends AnnotationMirror>, String)","url":"getAnnotationByName(java.util.Collection,java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"getAnnotationClass()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"getAnnotationClass()"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"getAnnotationElt()"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationFileStore","l":"getAnnotationFileForType(String)","url":"getAnnotationFileForType(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotationFormatter()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"getAnnotationForRemainder(IntegerRemainderNode, TransferInput<CFValue, CFStore>)","url":"getAnnotationForRemainder(org.checkerframework.dataflow.cfg.node.IntegerRemainderNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.type","c":"QualifierUpperBounds","l":"getAnnotationFromElement(Element)","url":"getAnnotationFromElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotationFromJavaExpression(JavaExpression, Tree, Class<? extends Annotation>)","url":"getAnnotationFromJavaExpression(org.checkerframework.dataflow.expression.JavaExpression,com.sun.source.tree.Tree,java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotationFromJavaExpressionString(String, Tree, TreePath, Class<? extends Annotation>)","url":"getAnnotationFromJavaExpressionString(java.lang.String,com.sun.source.tree.Tree,com.sun.source.util.TreePath,java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getAnnotationInHierarchy(AnnotationMirror)","url":"getAnnotationInHierarchy(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotationMirror(Tree, Class<? extends Annotation>)","url":"getAnnotationMirror(com.sun.source.tree.Tree,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationProvider","l":"getAnnotationMirror(Tree, Class<? extends Annotation>)","url":"getAnnotationMirror(com.sun.source.tree.Tree,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"BasicAnnotationProvider","l":"getAnnotationMirror(Tree, Class<? extends Annotation>)","url":"getAnnotationMirror(com.sun.source.tree.Tree,java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotationMirrorFromJavaExpressionString(String, Tree, TreePath)","url":"getAnnotationMirrorFromJavaExpressionString(java.lang.String,com.sun.source.tree.Tree,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotationOrTypeDeclarationBound(TypeMirror, Set<? extends AnnotationMirror>)","url":"getAnnotationOrTypeDeclarationBound(javax.lang.model.type.TypeMirror,java.util.Set)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getAnnotationProvider()"},{"p":"org.checkerframework.common.util.count","c":"AnnotationStatistics","l":"getAnnotationProvider()"},{"p":"org.checkerframework.common.util.count","c":"JavaCodeStatistics","l":"getAnnotationProvider()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getAnnotationProvider()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"getAnnotations()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getAnnotations()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getAnnotationsField()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordComponentStub","l":"getAnnotationsForTarget(ElementKind)","url":"getAnnotationsForTarget(javax.lang.model.element.ElementKind)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotationsFromJavaExpression(JavaExpression, Tree)","url":"getAnnotationsFromJavaExpression(org.checkerframework.dataflow.expression.JavaExpression,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationEqualityVisitor","l":"getAnnotationsMatch()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotationWithMetaAnnotation(Element, Class<? extends Annotation>)","url":"getAnnotationWithMetaAnnotation(javax.lang.model.element.Element,java.lang.Class)"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"getArgs()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"getArgTypes()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"getArgument(int)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"getArgument(int)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"getArguments()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"getArguments()"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"getArguments()"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"getArgumentTypes(ExpressionTree, AnnotatedTypeFactory)","url":"getArgumentTypes(com.sun.source.tree.ExpressionTree,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"getArray()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"getArray()"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"getArrayDepth(AnnotatedTypeMirror.AnnotatedArrayType)","url":"getArrayDepth(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getArrayDepth(TypeMirror)","url":"getArrayDepth(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"getArrayExpression()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getArrayLength(AnnotationMirror)","url":"getArrayLength(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getArrayLenRangeFromValue(AnnotationMirror)","url":"getArrayLenRangeFromValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getArrayLenRangeToValue(AnnotationMirror)","url":"getArrayLenRangeToValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"getAssertionsEnabledVariable()"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"getAssignmentContext(TreePath)","url":"getAssignmentContext(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getBinaryName(TypeElement)","url":"getBinaryName(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"getBindingVariable()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DeconstructorPatternNode","l":"getBindingVariables()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"getBindingVariables()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree.PredecessorHolder","l":"getBlock()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"getBlock()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"getBlock()"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.CaseUtils","l":"getBody(CaseTree)","url":"getBody(com.sun.source.tree.CaseTree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getBooleanOption(String, boolean)","url":"getBooleanOption(java.lang.String,boolean)"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getBooleanOption(String, boolean)","url":"getBooleanOption(java.lang.String,boolean)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getBooleanOption(String)","url":"getBooleanOption(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getBooleanOption(String)","url":"getBooleanOption(java.lang.String)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getBooleanValue(AnnotationMirror)","url":"getBooleanValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getBooleanValues(AnnotationMirror)","url":"getBooleanValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"getBottom()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"getBottom()"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"getBottomAnnotation(AnnotationMirror)","url":"getBottomAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"getBottomAnnotation(AnnotationMirror)","url":"getBottomAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"getBottomAnnotation(AnnotationMirror)","url":"getBottomAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"getBottomAnnotations()"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"getBottomAnnotations()"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"getBottomAnnotations()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"getBottoms()"},{"p":"org.checkerframework.framework.util","c":"QualifierKindHierarchy","l":"getBottoms()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getBoundFields()"},{"p":"org.checkerframework.framework.type","c":"QualifierUpperBounds","l":"getBoundQualifiers(TypeMirror)","url":"getBoundQualifiers(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"getBounds()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getBounds()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getBoxedType(AnnotatedTypeMirror.AnnotatedPrimitiveType)","url":"getBoxedType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType)"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"getBundledAnnotationClasses()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getBundledTypeQualifiers(Class<? extends Annotation>...)","url":"getBundledTypeQualifiers(java.lang.Class...)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getCacheSize()"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"getCaptureConversionId(TypeVariable)","url":"getCaptureConversionId(javax.lang.model.type.TypeVariable)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getCapturedWildcard(TypeVariable)","url":"getCapturedWildcard(javax.lang.model.type.TypeVariable)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"getCaseOperands()"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.SwitchExpressionUtils","l":"getCases(Tree)","url":"getCases(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CatchMarkerNode","l":"getCatchType()"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor.CFGProcessResult","l":"getCFG()"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor","l":"getCFGProcessResult()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getCFGVisualizer()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getCharValues(AnnotationMirror)","url":"getCharValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getChecker()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"getChecker()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getChecker()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getCheckerNames()"},{"p":"org.checkerframework.framework.test","c":"PerDirectorySuite","l":"getChildren()"},{"p":"org.checkerframework.framework.test","c":"PerFileSuite","l":"getChildren()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"getClassBody()"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getClassFromType(TypeMirror)","url":"getClassFromType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"InternalUtils","l":"getClassLoaderForClass(Class<? extends Object>)","url":"getClassLoaderForClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizeOptions","l":"getClassName()"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory","l":"getClassNamesFromAnnotation(AnnotationMirror)","url":"getClassNamesFromAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"getClassTree()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"getClassTree()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGStatement","l":"getClassTree()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST","l":"getCode()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"getCode()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"getCode()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGStatement","l":"getCode()"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"getCompilationResult()"},{"p":"org.checkerframework.javacutil","c":"AbstractTypeProcessor","l":"getCompilerLog()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordStub","l":"getComponentsInCanonicalConstructor()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"getComponentType()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"getComputedEffectAtCallsite(MethodInvocationTree, AnnotatedTypeMirror.AnnotatedDeclaredType, ExecutableElement)","url":"getComputedEffectAtCallsite(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"getCondition()"},{"p":"org.checkerframework.framework.util","c":"ContractsFromMethod","l":"getConditionalPostconditions(ExecutableElement)","url":"getConditionalPostconditions(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"getConditionOperand()"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"getConfiguration()"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.ConstantCaseLabelUtils","l":"getConstantExpression(Tree)","url":"getConstantExpression(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"getConstraints(TypeVariable)","url":"getConstraints(javax.lang.model.type.TypeVariable)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"getConstructor()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getContainingClass(Tree)","url":"getContainingClass(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getContainingClass(Tree)","url":"getContainingClass(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getContainingMethod(Tree)","url":"getContainingMethod(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getContainingMethod(Tree)","url":"getContainingMethod(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getContractExpressions(AnnotationMirror)","url":"getContractExpressions(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getContractExpressions(Contract.Kind, AnnotationMirror)","url":"getContractExpressions(org.checkerframework.framework.util.Contract.Kind,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getContractListValues(AnnotationMirror)","url":"getContractListValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"ContractsFromMethod","l":"getContracts(ExecutableElement)","url":"getContracts(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.common.initializedfields","c":"InitializedFieldsAnnotatedTypeFactory","l":"getContractsFromMethod()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getContractsFromMethod()"},{"p":"org.checkerframework.checker.mustcall","c":"CreatesMustCallForToJavaExpression","l":"getCreatesMustCallForExpressionsAtInvocation(MethodInvocationNode, GenericAnnotatedTypeFactory<?, ?, ?, ?>, CreatesMustCallForElementSupplier)","url":"getCreatesMustCallForExpressionsAtInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.GenericAnnotatedTypeFactory,org.checkerframework.checker.mustcall.CreatesMustCallForElementSupplier)"},{"p":"org.checkerframework.checker.mustcall","c":"CreatesMustCallForToJavaExpression","l":"getCreatesMustCallForExpressionsAtMethodDeclaration(MethodTree, GenericAnnotatedTypeFactory<?, ?, ?, ?>, CreatesMustCallForElementSupplier)","url":"getCreatesMustCallForExpressionsAtMethodDeclaration(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.GenericAnnotatedTypeFactory,org.checkerframework.checker.mustcall.CreatesMustCallForElementSupplier)"},{"p":"org.checkerframework.checker.mustcall","c":"CreatesMustCallForElementSupplier","l":"getCreatesMustCallForListValueElement()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"getCreatesMustCallForListValueElement()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"getCreatesMustCallForListValueElement()"},{"p":"org.checkerframework.checker.mustcall","c":"CreatesMustCallForElementSupplier","l":"getCreatesMustCallForValueElement()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"getCreatesMustCallForValueElement()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"getCreatesMustCallForValueElement()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getCurrentClassTree(Tree)","url":"getCurrentClassTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getCurrentMethodReceiver(Tree)","url":"getCurrentMethodReceiver(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"getCurrentPath()"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"getCurrentSourceVersion(ProcessingEnvironment)","url":"getCurrentSourceVersion(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getCurrentTree()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getDeclAnnotation(Element, Class<? extends Annotation>)","url":"getDeclAnnotation(javax.lang.model.element.Element,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationProvider","l":"getDeclAnnotation(Element, Class<? extends Annotation>)","url":"getDeclAnnotation(javax.lang.model.element.Element,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"BasicAnnotationProvider","l":"getDeclAnnotation(Element, Class<? extends Annotation>)","url":"getDeclAnnotation(javax.lang.model.element.Element,java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getDeclAnnotationNoAliases(Element, Class<? extends Annotation>)","url":"getDeclAnnotationNoAliases(javax.lang.model.element.Element,java.lang.Class)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"getDeclAnnotations(Element)","url":"getDeclAnnotations(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getDeclAnnotations(Element)","url":"getDeclAnnotations(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getDeclAnnotationWithMetaAnnotation(Element, Class<? extends Annotation>)","url":"getDeclAnnotationWithMetaAnnotation(javax.lang.model.element.Element,java.lang.Class)"},{"p":"org.checkerframework.javacutil.trees","c":"DetachedVarSymbol","l":"getDeclaration()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getDeclaredClasses()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"getDeclaredEffect(ExecutableElement)","url":"getDeclaredEffect(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getDeclaredLambdas()"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.DeconstructionPatternUtils","l":"getDeconstructor(Tree)","url":"getDeconstructor(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"getDefaultAnnosForUses(Element)","url":"getDefaultAnnosForUses(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getDefaultAnnotations(Tree, AnnotatedTypeMirror)","url":"getDefaultAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"getDefaultClassPath()"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"getDefaultConfigurationBuilder(String, File, String, Iterable<File>, Iterable<String>, List<String>, boolean)","url":"getDefaultConfigurationBuilder(java.lang.String,java.io.File,java.lang.String,java.lang.Iterable,java.lang.Iterable,java.util.List,boolean)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getDefaultForTypeAnnotator()"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"getDefaultQualifierForUses(Element)","url":"getDefaultQualifierForUses(javax.lang.model.element.Element)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"getDefaultTypeDeclarationBounds()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getDefaultTypeDeclarationBounds()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"getDefaultValueAnnotatedType(TypeMirror)","url":"getDefaultValueAnnotatedType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getDefaultValueAnnotatedType(TypeMirror)","url":"getDefaultValueAnnotatedType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getDefaultValueTree(TypeMirror, ProcessingEnvironment)","url":"getDefaultValueTree(javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getDependentTypesHelper()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getDepthFirstOrderedBlocks()"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil.CheckedPatternSyntaxException","l":"getDescription()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileResource","l":"getDescription()"},{"p":"org.checkerframework.framework.stub","c":"FileAnnotationFileResource","l":"getDescription()"},{"p":"org.checkerframework.framework.stub","c":"JarEntryAnnotationFileResource","l":"getDescription()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"getDetail()"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil.JavaExpressionParseException","l":"getDiagMessage()"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"getDiagnosticFiles()"},{"p":"org.checkerframework.framework.test","c":"TestConfiguration","l":"getDiagnosticFiles()"},{"p":"org.checkerframework.framework.test","c":"CompilationResult","l":"getDiagnostics()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticLine","l":"getDiagnostics()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"getDimension(int)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"getDimensions()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"getDimensions()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getDirection()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getDirection()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getDirectSuperTypeElements(TypeElement, Elements)","url":"getDirectSuperTypeElements(javax.lang.model.element.TypeElement,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getDoesNotMatchRegexValues(AnnotationMirror)","url":"getDoesNotMatchRegexValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getDoubleValues(AnnotationMirror)","url":"getDoubleValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"getDummyAssignedTo(ExpressionTree)","url":"getDummyAssignedTo(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getDummyAssignedTo(ExpressionTree)","url":"getDummyAssignedTo(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getDummyAssignedTo(ExpressionTree)","url":"getDummyAssignedTo(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getEffectiveAnnotation(Class<? extends Annotation>)","url":"getEffectiveAnnotation(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getEffectiveAnnotationInHierarchy(AnnotationMirror)","url":"getEffectiveAnnotationInHierarchy(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getEffectiveAnnotations()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"getElement()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"getElement()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"getElement()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"getElement()"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"getElement()"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"getElement()"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"getElement()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getElement()"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"getElementIndex()"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"getElementIndex()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"getElementIndex()"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"getElementIndex()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementKindsForElementType(ElementType)","url":"getElementKindsForElementType(java.lang.annotation.ElementType)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementKindsForTarget(Target)","url":"getElementKindsForTarget(java.lang.annotation.Target)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getElementUtils()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getElementUtils()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValue(AnnotationMirror, CharSequence, Class<T>, boolean)","url":"getElementValue(javax.lang.model.element.AnnotationMirror,java.lang.CharSequence,java.lang.Class,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValue(AnnotationMirror, ExecutableElement, Class<T>, T)","url":"getElementValue(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class,T)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValue(AnnotationMirror, ExecutableElement, Class<T>)","url":"getElementValue(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueArray(AnnotationMirror, CharSequence, Class<T>, boolean)","url":"getElementValueArray(javax.lang.model.element.AnnotationMirror,java.lang.CharSequence,java.lang.Class,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueArray(AnnotationMirror, ExecutableElement, Class<T>, List<T>)","url":"getElementValueArray(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class,java.util.List)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueArray(AnnotationMirror, ExecutableElement, Class<T>)","url":"getElementValueArray(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueArrayOrNull(AnnotationMirror, CharSequence, Class<T>, boolean)","url":"getElementValueArrayOrNull(javax.lang.model.element.AnnotationMirror,java.lang.CharSequence,java.lang.Class,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueBoolean(AnnotationMirror, ExecutableElement, boolean)","url":"getElementValueBoolean(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueClassName(AnnotationMirror, CharSequence, boolean)","url":"getElementValueClassName(javax.lang.model.element.AnnotationMirror,java.lang.CharSequence,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueClassName(AnnotationMirror, ExecutableElement)","url":"getElementValueClassName(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueClassNames(AnnotationMirror, ExecutableElement)","url":"getElementValueClassNames(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueEnum(AnnotationMirror, ExecutableElement, Class<T>, T)","url":"getElementValueEnum(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class,T)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueEnum(AnnotationMirror, ExecutableElement, Class<T>)","url":"getElementValueEnum(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueEnumArray(AnnotationMirror, ExecutableElement, Class<T>, T[])","url":"getElementValueEnumArray(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class,T[])"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueEnumArray(AnnotationMirror, ExecutableElement, Class<T>)","url":"getElementValueEnumArray(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueInt(AnnotationMirror, ExecutableElement, int)","url":"getElementValueInt(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,int)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueInt(AnnotationMirror, ExecutableElement)","url":"getElementValueInt(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueLong(AnnotationMirror, ExecutableElement, long)","url":"getElementValueLong(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,long)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueOrNull(AnnotationMirror, CharSequence, Class<T>, boolean)","url":"getElementValueOrNull(javax.lang.model.element.AnnotationMirror,java.lang.CharSequence,java.lang.Class,boolean)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlock","l":"getElseFlowRule()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"getElseFlowRule()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"getElseLabel()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"getElseOperand()"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"getElseStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"getElseStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"getElseStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"getElseStore()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlock","l":"getElseSuccessor()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"getElseSuccessor()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getEmptyStore()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getEnclosingClassName(ExecutableElement)","url":"getEnclosingClassName(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getEnclosingClassName(VariableElement)","url":"getEnclosingClassName(javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getEnclosingClassOrMethod(Tree)","url":"getEnclosingClassOrMethod(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"getEnclosingExpression()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"getEnclosingMethod()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"getEnclosingMethodName()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getEnclosingSubType(TypeElement, Tree)","url":"getEnclosingSubType(javax.lang.model.element.TypeElement,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"getEnclosingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getEnclosingType(TypeElement, Tree)","url":"getEnclosingType(javax.lang.model.element.TypeElement,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"getEnsuresCalledMethodsListValueElement()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getEnsuresQualifierIfResult(Contract.Kind, AnnotationMirror)","url":"getEnsuresQualifierIfResult(org.checkerframework.framework.util.Contract.Kind,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getEntryBlock()"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysis","l":"getEntryStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"getEntryStore()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getEnumConstants(TypeElement)","url":"getEnumConstants(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.checker.tainting","c":"TaintingAnnotatedTypeFactory","l":"getEnumConstructorQualifiers()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getEnumConstructorQualifiers()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"getEnv()"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"getEnvForPath(TreePath)","url":"getEnvForPath(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getErased()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"getErased()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"getErased()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getErased()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getErased()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"getErased()"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor.CFGProcessResult","l":"getErrMsg()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"getError()"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"getErrorHeaders()"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getExactStringValue(Tree, ValueAnnotatedTypeFactory)","url":"getExactStringValue(com.sun.source.tree.Tree,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getExactValue(Element, ValueAnnotatedTypeFactory)","url":"getExactValue(javax.lang.model.element.Element,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getExactValue(Tree, ValueAnnotatedTypeFactory)","url":"getExactValue(com.sun.source.tree.Tree,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getExceptionalExitBlock()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getExceptionalExitStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getExceptionalExitStore()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getExceptionalExitStore(Tree)","url":"getExceptionalExitStore(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getExceptionalExitStore(Tree)","url":"getExceptionalExitStore(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"getExceptionalStore(TypeMirror)","url":"getExceptionalStore(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"getExceptionalStores()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlock","l":"getExceptionalSuccessors()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"getExceptionalSuccessors()"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"getExecArguments()"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.ExcessiveOrMissingFormatArgumentException","l":"getExpected()"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.IllegalFormatConversionCategoryException","l":"getExpected()"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"getExpectedDiagnostics()"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"getExplicitAnnos(Element)","url":"getExplicitAnnos(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getExplicitAnnotations()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getExplicitAnnotationsOnConstructorResult(MethodTree)","url":"getExplicitAnnotationsOnConstructorResult(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getExplicitAnnotationTrees(List<? extends AnnotationTree>, Tree)","url":"getExplicitAnnotationTrees(java.util.List,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getExplicitNewClassAnnos(NewClassTree)","url":"getExplicitNewClassAnnos(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getExplicitNewClassAnnos(NewClassTree)","url":"getExplicitNewClassAnnos(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getExplicitNewClassClassTypeArgs(NewClassTree)","url":"getExplicitNewClassClassTypeArgs(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getExplicitNewClassClassTypeArgs(NewClassTree)","url":"getExplicitNewClassClassTypeArgs(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"getExpression()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"getExpression()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"getExpression()"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.SwitchExpressionUtils","l":"getExpression(Tree)","url":"getExpression(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getExpressionAndOffset(String)","url":"getExpressionAndOffset(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getExpressionAndOffsetFromJavaExpressionString(String, TreePath)","url":"getExpressionAndOffsetFromJavaExpressionString(java.lang.String,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.CaseUtils","l":"getExpressions(CaseTree)","url":"getExpressions(com.sun.source.tree.CaseTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"getExtendsBound()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"getExtendsBoundField()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getExtraStubFiles()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"getFakeOverride(Element, AnnotatedTypeMirror)","url":"getFakeOverride(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"getFalseFlowRule()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"getField()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getField(String, String, ProcessingEnvironment)","url":"getField(java.lang.String,java.lang.String,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getFieldAccessFactory()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"getFieldInitialValues()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getFieldInvariantAnnotationTree(List<? extends AnnotationTree>)","url":"getFieldInvariantAnnotationTree(java.util.List)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getFieldInvariantDeclarationAnnotations()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getFieldInvariantDeclarationAnnotations()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getFieldInvariants(TypeElement)","url":"getFieldInvariants(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getFieldInvariants(TypeElement)","url":"getFieldInvariants(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"getFieldName()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getFieldName(Tree)","url":"getFieldName(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.util","c":"FieldInvariants","l":"getFields()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getFieldValue(FieldAccess)","url":"getFieldValue(org.checkerframework.dataflow.expression.FieldAccess)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getFieldValues()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"getFilename()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticLine","l":"getFilename()"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getFinalLocalValues()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getFinalLocalValues()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getFirstNodeOfKindForTree(Tree, Class<T>)","url":"getFirstNodeOfKindForTree(com.sun.source.tree.Tree,java.lang.Class)"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"getFlatOptions()"},{"p":"org.checkerframework.framework.test","c":"TestConfiguration","l":"getFlatOptions()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlock","l":"getFlowRule()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"getFlowRule()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getFnInterfaceFromTree(Tree)","url":"getFnInterfaceFromTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"getFormalParameters(ExecutableElement)","url":"getFormalParameters(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"getFormatCategories()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getFormatCategories()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getFormatType()"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.ExcessiveOrMissingFormatArgumentException","l":"getFound()"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.IllegalFormatConversionCategoryException","l":"getFound()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getFromValueFromIntRange(AnnotatedTypeMirror)","url":"getFromValueFromIntRange(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"getFullyQualifiedName(TypeDeclaration<?>, CompilationUnit)","url":"getFullyQualifiedName(com.github.javaparser.ast.body.TypeDeclaration,com.github.javaparser.ast.CompilationUnit)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getFunctionTypeFromTree(LambdaExpressionTree)","url":"getFunctionTypeFromTree(com.sun.source.tree.LambdaExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getFunctionTypeFromTree(MemberReferenceTree)","url":"getFunctionTypeFromTree(com.sun.source.tree.MemberReferenceTree)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"getGroupCount(AnnotationMirror)","url":"getGroupCount(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"getGroupCount(String)","url":"getGroupCount(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"getGuard()"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.CaseUtils","l":"getGuard(CaseTree)","url":"getGuard(com.sun.source.tree.CaseTree)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"getHasFormatCallCategories(MethodInvocationNode)","url":"getHasFormatCallCategories(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"getHierarchiesNoDefault(Element)","url":"getHierarchiesNoDefault(javax.lang.model.element.Element)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitSubchecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.common.reflection","c":"ClassValChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.common.reflection","c":"MethodValChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"getImplicitReceiver(Element)","url":"getImplicitReceiver(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getImplicitReceiverType(ExpressionTree)","url":"getImplicitReceiverType(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil.CheckedPatternSyntaxException","l":"getIndex()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"getIndex()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"getIndex()"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"getIndex()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"getInferedEffectForLambdaExpression(LambdaExpressionTree)","url":"getInferedEffectForLambdaExpression(com.sun.source.tree.LambdaExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getInferredValueFor(Tree)","url":"getInferredValueFor(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"getInformation(Node)","url":"getInformation(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"getInitializedFields(InitializationStore, TreePath)","url":"getInitializedFields(org.checkerframework.checker.initialization.InitializationStore,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"getInitializer(int)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"getInitializers()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"getInitializers()"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getInnermostComponentType(ArrayType)","url":"getInnermostComponentType(javax.lang.model.type.ArrayType)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getInput(Block)","url":"getInput(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"getInput(Block)","url":"getInput(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"getInput(Block)","url":"getInput(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"getInputBefore(Block)","url":"getInputBefore(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizeOptions","l":"getInputFile()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileResource","l":"getInputStream()"},{"p":"org.checkerframework.framework.stub","c":"FileAnnotationFileResource","l":"getInputStream()"},{"p":"org.checkerframework.framework.stub","c":"JarEntryAnnotationFileResource","l":"getInputStream()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"getInSource()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"getInt()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"getIntOffsetEquation(Set<OffsetEquation>)","url":"getIntOffsetEquation(java.util.Set)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getIntRangeFromValue(AnnotationMirror, long)","url":"getIntRangeFromValue(javax.lang.model.element.AnnotationMirror,long)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getIntRangeFromValue(AnnotationMirror)","url":"getIntRangeFromValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getIntRangeToValue(AnnotationMirror, long)","url":"getIntRangeToValue(javax.lang.model.element.AnnotationMirror,long)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getIntRangeToValue(AnnotationMirror)","url":"getIntRangeToValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getIntValues(AnnotationMirror)","url":"getIntValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getInvalidError()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getInvalidInvocationType()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"getInvocationType()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getInvocationType()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"getIsStartOfBlock()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getIterableElementType(ExpressionTree, AnnotatedTypeMirror)","url":"getIterableElementType(com.sun.source.tree.ExpressionTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getIterableElementType(ExpressionTree)","url":"getIterableElementType(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"getIterableExpression()"},{"p":"org.checkerframework.javacutil","c":"InternalUtils","l":"getJavacContext(ProcessingEnvironment)","url":"getJavacContext(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.test","c":"CompilationResult","l":"getJavacOutput()"},{"p":"org.checkerframework.framework.test","c":"CompilationResult","l":"getJavaFileObjects()"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"getJavaFilesAsArgumentList(File...)","url":"getJavaFilesAsArgumentList(java.io.File...)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"getJreVersion()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForValue","l":"getKeyForMaps()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST","l":"getKind()"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"getKind()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"getKind()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getKind()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getKindRecordAsClass(Element)","url":"getKindRecordAsClass(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getKindRecordAsClass(Tree)","url":"getKindRecordAsClass(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"getKinds()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"getLabel()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"getLabel(TreePath)","url":"getLabel(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.CaseUtils","l":"getLabels(CaseTree)","url":"getLabels(com.sun.source.tree.CaseTree)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"getLambdaTree()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block","l":"getLastNode()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"getLastNode()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"getLastNode()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"getLastNode()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlockImpl","l":"getLastNode()"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"getLeft()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"getLeftOperand()"},{"p":"org.checkerframework.checker.index","c":"IndexUtil","l":"getLengthSequenceTree(Tree, IndexMethodIdentifier, ProcessingEnvironment)","url":"getLengthSequenceTree(com.sun.source.tree.Tree,org.checkerframework.checker.index.IndexMethodIdentifier,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getLengthsForStringValues(List<String>)","url":"getLengthsForStringValues(java.util.List)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"getLessThanAnnotatedTypeFactory()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"getLessThanAnnotatedTypeFactory()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"getLessThanExpressions(AnnotationMirror)","url":"getLessThanExpressions(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"getLessThanExpressions(ExpressionTree)","url":"getLessThanExpressions(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"getLineNumber()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticLine","l":"getLineNumber()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getLintOption(String, boolean)","url":"getLintOption(java.lang.String,boolean)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getLintOption(String)","url":"getLintOption(java.lang.String)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory","l":"getLookupKeys()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getLowerBound()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeParameterBounds","l":"getLowerBound()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getLowerBoundField()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMatchesRegexValues(AnnotationMirror)","url":"getMatchesRegexValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMaxLenValue(AnnotationMirror)","url":"getMaxLenValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getMaxValue(Tree, ValueAnnotatedTypeFactory)","url":"getMaxValue(com.sun.source.tree.Tree,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils.MemberReferenceKind","l":"getMemberReferenceKind(MemberReferenceTree)","url":"getMemberReferenceKind(com.sun.source.tree.MemberReferenceTree)"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.ExcessiveOrMissingFormatArgumentException","l":"getMessage()"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.IllegalFormatConversionCategoryException","l":"getMessage()"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil.CheckedPatternSyntaxException","l":"getMessage()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"getMessage()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"getMessage()"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil.JavaExpressionParseException","l":"getMessage()"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"getMessageKey()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getMessagesProperties()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"getMethod()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"getMethod()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getMethod(Class<?>, String, int, ProcessingEnvironment)","url":"getMethod(java.lang.Class,java.lang.String,int,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getMethod(Class<?>, String, ProcessingEnvironment, String...)","url":"getMethod(java.lang.Class,java.lang.String,javax.annotation.processing.ProcessingEnvironment,java.lang.String...)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getMethod(String, String, int, ProcessingEnvironment)","url":"getMethod(java.lang.String,java.lang.String,int,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getMethod(String, String, ProcessingEnvironment, String...)","url":"getMethod(java.lang.String,java.lang.String,javax.annotation.processing.ProcessingEnvironment,java.lang.String...)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"getMethodName()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizeOptions","l":"getMethodName()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getMethodName(Tree)","url":"getMethodName(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getMethodOrNull(String, String, int, ProcessingEnvironment)","url":"getMethodOrNull(java.lang.String,java.lang.String,int,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"getMethodReturnType(MethodTree, ReturnTree)","url":"getMethodReturnType(com.sun.source.tree.MethodTree,com.sun.source.tree.ReturnTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getMethodReturnType(MethodTree, ReturnTree)","url":"getMethodReturnType(com.sun.source.tree.MethodTree,com.sun.source.tree.ReturnTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getMethodReturnType(MethodTree)","url":"getMethodReturnType(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getMethodReturnType(MethodTree)","url":"getMethodReturnType(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getMethods(String, String, int, ProcessingEnvironment)","url":"getMethods(java.lang.String,java.lang.String,int,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMinimumIntegralValue(AnnotatedTypeMirror)","url":"getMinimumIntegralValue(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getMinLen(Tree, ValueAnnotatedTypeFactory)","url":"getMinLen(com.sun.source.tree.Tree,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMinLenFromString(String, Tree, TreePath)","url":"getMinLenFromString(java.lang.String,com.sun.source.tree.Tree,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getMinLenFromTree(Tree, ValueAnnotatedTypeFactory)","url":"getMinLenFromTree(com.sun.source.tree.Tree,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMinLenValue(AnnotatedTypeMirror)","url":"getMinLenValue(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMinLenValue(AnnotationMirror)","url":"getMinLenValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMinLenValue(AnnotationMirrorSet)","url":"getMinLenValue(org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMinLenValueValue(AnnotationMirror)","url":"getMinLenValueValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getMinValue(Tree, ValueAnnotatedTypeFactory)","url":"getMinValue(com.sun.source.tree.Tree,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationEqualityVisitor","l":"getMismatchedNode1()"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationEqualityVisitor","l":"getMismatchedNode2()"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"getMissingDiagnostics()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"getMustCallValueElement()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"getName()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"getName()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"getName()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"getName()"},{"p":"org.checkerframework.taglet","c":"ManualTaglet","l":"getName()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"getNarrowedAnnotations(AnnotationMirrorSet, TypeKind, TypeKind)","url":"getNarrowedAnnotations(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getNarrowedAnnotations(AnnotationMirrorSet, TypeKind, TypeKind)","url":"getNarrowedAnnotations(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getNarrowedPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, TypeMirror)","url":"getNarrowedPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"getNarrowedValue(TypeMirror, V)","url":"getNarrowedValue(javax.lang.model.type.TypeMirror,V)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DeconstructorPatternNode","l":"getNestedPatterns()"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.DeconstructionPatternUtils","l":"getNestedPatterns(Tree)","url":"getNestedPatterns(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"getNode()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlock","l":"getNode()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"getNode()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"getNode()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block","l":"getNodes()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"getNodes()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"getNodes()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"getNodes()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlockImpl","l":"getNodes()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getNodesCorrespondingToTree(Tree)","url":"getNodesCorrespondingToTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getNodesForTree(Tree)","url":"getNodesForTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getNodesForTree(Tree)","url":"getNodesForTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getNodesForTree(Tree)","url":"getNodesForTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"getNodeSimpleName(Node)","url":"getNodeSimpleName(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getNodeValues()"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"getNotBothReasons()"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"getNotDetReasons()"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"getNotSEFreeReasons()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"getNullnessAnnotations()"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"getNumberMath(Number)","url":"getNumberMath(java.lang.Number)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getObjectTypeMirror(ProcessingEnvironment)","url":"getObjectTypeMirror(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"getOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"getOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"getOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"getOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"getOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnaryOperationNode","l":"getOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"getOperand()"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"getOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BooleanLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CharacterLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DeconstructorPatternNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DoubleLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LongLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ShortLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThisNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnaryOperationNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"getOperationKind()"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"getOperationKind()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getOption(String, String)","url":"getOption(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getOption(String, String)","url":"getOption(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getOption(String)","url":"getOption(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getOption(String)","url":"getOption(java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getOptionConfiguration()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getOptions()"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"getOptions()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getOptions()"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"getOptions()"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"getOptions()"},{"p":"org.checkerframework.framework.test","c":"TestConfiguration","l":"getOptions()"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getOptions()"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"getOptionsAsList()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getOptionsNoSubcheckers()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticLine","l":"getOriginalLine()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizeOptions","l":"getOutputDirectory()"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"getOutputDirFromProperty()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getOverriddenMethods(ExecutableElement, Types)","url":"getOverriddenMethods(javax.lang.model.element.ExecutableElement,javax.lang.model.util.Types)"},{"p":"org.checkerframework.framework.type","c":"ElementAnnotationApplier","l":"getParamAndLambdaTree(VariableElement, AnnotatedTypeFactory)","url":"getParamAndLambdaTree(javax.lang.model.element.VariableElement,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"getParametersAsLocalVariables(ExecutableElement)","url":"getParametersAsLocalVariables(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getParameterTypes()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getParamTypes()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"getParent()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"getParent()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getParentChecker()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"getParentMethod(Element)","url":"getParentMethod(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util","c":"TreePathCacher","l":"getPath(CompilationUnitTree, Tree)","url":"getPath(com.sun.source.tree.CompilationUnitTree,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getPath(Tree)","url":"getPath(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"getPathsProperty(String)","url":"getPathsProperty(java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getPathToCompilationUnit()"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil.CheckedPatternSyntaxException","l":"getPattern()"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.InstanceOfUtils","l":"getPattern(InstanceOfTree)","url":"getPattern(com.sun.source.tree.InstanceOfTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.PatternCaseLabelUtils","l":"getPattern(Tree)","url":"getPattern(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"getPatternNode()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"getPolymorphic()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"getPolymorphic()"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"getPolymorphicAnnotation(AnnotationMirror)","url":"getPolymorphicAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"getPolymorphicAnnotation(AnnotationMirror)","url":"getPolymorphicAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"getPolymorphicAnnotation(AnnotationMirror)","url":"getPolymorphicAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getPossibleValues(AnnotatedTypeMirror, ValueAnnotatedTypeFactory)","url":"getPossibleValues(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"ContractsFromMethod","l":"getPostconditions(ExecutableElement)","url":"getPostconditions(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getPostfixBinaryTree(UnaryTree)","url":"getPostfixBinaryTree(com.sun.source.tree.UnaryTree)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getPostfixNodeLookup()"},{"p":"org.checkerframework.framework.util","c":"ContractsFromMethod","l":"getPreconditions(ExecutableElement)","url":"getPreconditions(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree","l":"getPredecessorHolder(BlockImpl, BlockImpl)","url":"getPredecessorHolder(org.checkerframework.dataflow.cfg.block.BlockImpl,org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block","l":"getPredecessors()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"getPredecessors()"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"getPrefix(AnnotatedTypeMirror)","url":"getPrefix(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"getPrefix(AnnotationMirror)","url":"getPrefix(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getPrimitiveConversionKind(PrimitiveType, PrimitiveType)","url":"getPrimitiveConversionKind(javax.lang.model.type.PrimitiveType,javax.lang.model.type.PrimitiveType)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"getPrimitiveConversionKind(TypeKind, TypeKind)","url":"getPrimitiveConversionKind(javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getPrimitiveKind()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getProcessingEnv()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getProcessingEnvironment()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"getProcessOrder(ControlFlowGraph)","url":"getProcessOrder(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"getProcessOrderSimpleString(List<Integer>)","url":"getProcessOrderSimpleString(java.util.List)"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"getProcessors()"},{"p":"org.checkerframework.framework.test","c":"TestConfiguration","l":"getProcessors()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getProperties(Class<?>, String, boolean)","url":"getProperties(java.lang.Class,java.lang.String,boolean)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"getPseudoReceiver(TreePath, TypeMirror)","url":"getPseudoReceiver(com.sun.source.util.TreePath,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"getPurityKinds(AnnotationProvider, ExecutableElement)","url":"getPurityKinds(org.checkerframework.javacutil.AnnotationProvider,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"getPurityKinds(AnnotationProvider, MethodTree)","url":"getPurityKinds(org.checkerframework.javacutil.AnnotationProvider,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getQualifiedClassName(Element)","url":"getQualifiedClassName(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getQualifiedName(DeclaredType)","url":"getQualifiedName(javax.lang.model.type.DeclaredType)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getQualifiedName(Element)","url":"getQualifiedName(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getQualifierHierarchy()"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"getQualifierKind(AnnotationMirror)","url":"getQualifierKind(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"getQualifierKind(AnnotationMirror)","url":"getQualifierKind(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"getQualifierKind(String)","url":"getQualifierKind(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"getQualifierKind(String)","url":"getQualifierKind(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"QualifierKindHierarchy","l":"getQualifierKind(String)","url":"getQualifierKind(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getQualifierParameterHierarchies(AnnotatedTypeMirror)","url":"getQualifierParameterHierarchies(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getQualifierParameterHierarchies(Element)","url":"getQualifierParameterHierarchies(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getQualifierPolymorphism()"},{"p":"org.checkerframework.framework.util","c":"FieldInvariants","l":"getQualifiersFor(CharSequence)","url":"getQualifiersFor(java.lang.CharSequence)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getQualifierUpperBounds()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getRange(AnnotationMirror)","url":"getRange(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getRangeFromValues(List<? extends Number>)","url":"getRangeFromValues(java.util.List)"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"getRawTypeAttributes()"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"getRawTypeAttributes()"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"getRawTypeAttributes()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"getRawTypeAttributes()"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"getRawTypeAttributes()"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"getRawTypeAttributes()"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"getRawTypeAttributes()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"getReceiver()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"getReceiver()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"getReceiver()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"getReceiver()"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"getReceiver()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"getReceiver(ExpressionTree)","url":"getReceiver(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getReceiverTree(ExpressionTree)","url":"getReceiverTree(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getReceiverType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getReceiverType(ExpressionTree)","url":"getReceiverType(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getRecordComponents(TypeElement)","url":"getRecordComponents(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"getRefType()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getRegularExitBlock()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getRegularExitStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getRegularExitStore()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getRegularExitStore(Tree)","url":"getRegularExitStore(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getRegularExitStore(Tree)","url":"getRegularExitStore(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"getRegularStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"getRegularStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"getRegularStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"getRegularStore()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlock","l":"getRegularSuccessor()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"getRegularSuccessor()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getRelatedClassName(Class<?>, String)","url":"getRelatedClassName(java.lang.Class,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"getReleaseValue(ProcessingEnvironment)","url":"getReleaseValue(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferenceResult","l":"getRemainingTargets(Set<TypeVariable>, boolean)","url":"getRemainingTargets(java.util.Set,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getResult()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getResult()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"getResult()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"getResult()"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner.Visited","l":"getResult(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"getResult(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getResultingTypeOfConstructorMemberReference(MemberReferenceTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"getResultingTypeOfConstructorMemberReference(com.sun.source.tree.MemberReferenceTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"getResultValue()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getReturnNodes()"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysis","l":"getReturnStatementStores()"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"getReturnStatementStores()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getReturnStatementStores(MethodTree)","url":"getReturnStatementStores(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getReturnStatementStores(MethodTree)","url":"getReturnStatementStores(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getReturnType()"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"getRight()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"getRightOperand()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getSame(Collection<? extends AnnotationMirror>, AnnotationMirror)","url":"getSame(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getSameByName(Collection<? extends AnnotationMirror>, AnnotationMirror)","url":"getSameByName(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"getSameLensFromString(String, Tree, TreePath)","url":"getSameLensFromString(java.lang.String,com.sun.source.tree.Tree,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"getSearchIndexAnnotatedTypeFactory()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"getSelfType(Tree)","url":"getSelfType(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getSelfType(Tree)","url":"getSelfType(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"getSeparator()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"getSeparator()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"getSeparator()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"getSequences()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getSharedCFGForTree(Tree)","url":"getSharedCFGForTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getShouldDefaultTypeVarLocals()"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"getShouldEmitDebugInfo()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"getSimpleClassName()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"getSimpleClassName()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGStatement","l":"getSimpleClassName()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getSimpleDescription(ExecutableElement)","url":"getSimpleDescription(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getSimpleNameOrDescription(ExecutableElement)","url":"getSimpleNameOrDescription(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getSimpleSignature(ExecutableElement)","url":"getSimpleSignature(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getSortedQualifierNames()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getSourceFilePath(TypeElement)","url":"getSourceFilePath(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlock","l":"getSpecialType()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlockImpl","l":"getSpecialType()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getStandardSuppressWarningsPrefixes()"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getStoreAfter(Block)","url":"getStoreAfter(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"getStoreAfter(Block)","url":"getStoreAfter(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getStoreAfter(Node)","url":"getStoreAfter(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getStoreAfter(Node)","url":"getStoreAfter(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getStoreAfter(Set<Node>)","url":"getStoreAfter(java.util.Set)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getStoreAfter(Tree)","url":"getStoreAfter(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getStoreAfter(Tree)","url":"getStoreAfter(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"getStoreBefore(Block, Store.Kind)","url":"getStoreBefore(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Store.Kind)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getStoreBefore(Block)","url":"getStoreBefore(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getStoreBefore(Node)","url":"getStoreBefore(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getStoreBefore(Node)","url":"getStoreBefore(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getStoreBefore(Set<Node>)","url":"getStoreBefore(java.util.Set)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getStoreBefore(Tree)","url":"getStoreBefore(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getStoreBefore(Tree)","url":"getStoreBefore(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"getStoreForBlock(boolean, Block, Block)","url":"getStoreForBlock(boolean,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"getStrictSuperTypes()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"getStrictSuperTypes()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getStringsOption(String, char, List<String>)","url":"getStringsOption(java.lang.String,char,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getStringsOption(String, char, List<String>)","url":"getStringsOption(java.lang.String,char,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getStringsOption(String, char)","url":"getStringsOption(java.lang.String,char)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getStringsOption(String, String, List<String>)","url":"getStringsOption(java.lang.String,java.lang.String,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getStringsOption(String, String, List<String>)","url":"getStringsOption(java.lang.String,java.lang.String,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getStringsOption(String, String)","url":"getStringsOption(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getStringType(AnnotatedTypeMirror)","url":"getStringType(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getStringValues(AnnotationMirror)","url":"getStringValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getSubchecker(Class<T>)","url":"getSubchecker(java.lang.Class)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getSubcheckers()"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"getSubsequenceFromReceiver(JavaExpression, BaseAnnotatedTypeFactoryForIndexChecker)","url":"getSubsequenceFromReceiver(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.checker.index.BaseAnnotatedTypeFactoryForIndexChecker)"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"getSubsequenceFromTree(Tree, BaseAnnotatedTypeFactoryForIndexChecker)","url":"getSubsequenceFromTree(com.sun.source.tree.Tree,org.checkerframework.checker.index.BaseAnnotatedTypeFactoryForIndexChecker)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlock","l":"getSuccessor()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"getSuccessor()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block","l":"getSuccessors()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"getSuccessors()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"getSuccessors()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"getSuccessors()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"getSuperBound()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"getSuperBoundField()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getSuperClass(TypeElement)","url":"getSuperClass(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getSuperclass(TypeMirror, Types)","url":"getSuperclass(javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getSuperClassOrInterface(TypeMirror, Types)","url":"getSuperClassOrInterface(javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getSuperConstructor(NewClassTree)","url":"getSuperConstructor(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"getSuperTypes(AnnotatedTypeMirror.AnnotatedDeclaredType)","url":"getSuperTypes(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getSuperTypes(TypeElement, Elements)","url":"getSuperTypes(javax.lang.model.element.TypeElement,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getSupportedAnnotationTypes()"},{"p":"org.checkerframework.checker.i18n","c":"I18nChecker","l":"getSupportedCheckers()"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"getSupportedCheckers()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getSupportedLintOptions()"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"getSupportedLintOptions()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getSupportedLintOptions()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getSupportedMonotonicTypeQualifiers()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getSupportedOptions()"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"getSupportedOptions()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getSupportedOptions()"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getSupportedOptions()"},{"p":"org.checkerframework.common.util.debug","c":"EmptyProcessor","l":"getSupportedSourceVersion()"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor","l":"getSupportedSourceVersion()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getSupportedSourceVersion()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getSupportedTypeQualifierNames()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.fenum","c":"FenumChecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitSubchecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.checker.units","c":"UnitsChecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingChecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingChecker","l":"getSuppressWarningsPrefixes(SourceVisitor<?, ?>, NavigableSet<String>)","url":"getSuppressWarningsPrefixes(org.checkerframework.framework.source.SourceVisitor,java.util.NavigableSet)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getSuppressWarningsPrefixesOfSubcheckers()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"getSwitchExpressionVar()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"getSwitchOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"getTarget()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"getTarget()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"getTargetCheckerClass()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"getTargetCheckerClass()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"getTargets()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"getTempVar(Node)","url":"getTempVar(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"getTerminatesExecution()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"getTernaryExpressionVar()"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"getTestFile(String)","url":"getTestFile(java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"getTestSourceFiles()"},{"p":"org.checkerframework.framework.test","c":"TestConfiguration","l":"getTestSourceFiles()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlock","l":"getThenFlowRule()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"getThenFlowRule()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"getThenLabel()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"getThenOperand()"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"getThenStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"getThenStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"getThenStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"getThenStore()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlock","l":"getThenSuccessor()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"getThenSuccessor()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getThrownTypes()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"getThrowUpperBoundAnnotations()"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"getToolsJar()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"getTop()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"getTop()"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"getTopAnnotation(AnnotationMirror)","url":"getTopAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"getTopAnnotation(AnnotationMirror)","url":"getTopAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"getTopAnnotation(AnnotationMirror)","url":"getTopAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"getTopAnnotations()"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"getTopAnnotations()"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"getTopAnnotations()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"getTops()"},{"p":"org.checkerframework.framework.util","c":"QualifierKindHierarchy","l":"getTops()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getToValueFromIntRange(AnnotatedTypeMirror)","url":"getToValueFromIntRange(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getTransferFunction()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getTransferFunction()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"getTransitiveOperands()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DeconstructorPatternNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExplicitThisNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ImplicitThisNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnaryOperationNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getTreeLookup()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"getTreePath()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getTreePathCacher()"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"getTrees()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getTreeUtils()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getTreeUtils()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"getTrueFlowRule()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block","l":"getType()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"getType()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"getType()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"getType()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"getType()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getType(Element)","url":"getType(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getTypeArgumentInference()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"getTypeArguments()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"getTypeCompoundIndex(Attribute.TypeCompound)","url":"getTypeCompoundIndex(com.sun.tools.javac.code.Attribute.TypeCompound)"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"getTypeCompoundIndex(Attribute.TypeCompound)","url":"getTypeCompoundIndex(com.sun.tools.javac.code.Attribute.TypeCompound)"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"getTypeDeclarationBounds(TypeMirror)","url":"getTypeDeclarationBounds(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getTypeDeclarationBounds(TypeMirror)","url":"getTypeDeclarationBounds(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"getTypeDeclarationByName(CompilationUnit, String)","url":"getTypeDeclarationByName(com.github.javaparser.ast.CompilationUnit,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getTypeElement(ProcessingEnvironment, Class<?>)","url":"getTypeElement(javax.annotation.processing.ProcessingEnvironment,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getTypeElement(TypeMirror)","url":"getTypeElement(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnalysis","l":"getTypeFactory()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"getTypeFactory()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitSubchecker","l":"getTypeFactory()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getTypeFactory()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"getTypeFactory()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"getTypeFactory()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getTypeFactoryOfSubchecker(Class<? extends BaseTypeChecker>)","url":"getTypeFactoryOfSubchecker(java.lang.Class)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"getTypeFactoryOfSubcheckerOrNull(Class<? extends BaseTypeChecker>)","url":"getTypeFactoryOfSubcheckerOrNull(java.lang.Class)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getTypeFactoryOfSubcheckerOrNull(Class<? extends BaseTypeChecker>)","url":"getTypeFactoryOfSubcheckerOrNull(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getTypeFactoryOfSubcheckerOrNull(Class<? extends BaseTypeChecker>)","url":"getTypeFactoryOfSubcheckerOrNull(java.lang.Class)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"getTypeFrameFromAnnotation(AnnotationMirror)","url":"getTypeFrameFromAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"getTypeHierarchy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getTypeHierarchy()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"getTypeMirror(Class<?>)","url":"getTypeMirror(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getTypeOfExtendsImplements(Tree)","url":"getTypeOfExtendsImplements(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"getTypes()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"getTypeToInstantiate()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getTypeUtils()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"getTypeVariable()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getTypeVariables()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getTypeVarSubstitutor()"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getUid()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"getUid()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getUid()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST","l":"getUid()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"getUid()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"getUid()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getUid()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getUltimateParentChecker()"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"getUnboxedType(AnnotatedTypeMirror.AnnotatedDeclaredType)","url":"getUnboxedType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getUnboxedType(AnnotatedTypeMirror.AnnotatedDeclaredType)","url":"getUnboxedType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"getUnderInitializationAnnotationOfSuperType(TypeMirror)","url":"getUnderInitializationAnnotationOfSuperType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getUnderlyingAST()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNoType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNullType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedPrimitiveType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getUnderlyingTypeHashCode()"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"getUnexpectedDiagnostics()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getUninferredWildcardType(AnnotatedTypeMirror.AnnotatedTypeVariable)","url":"getUninferredWildcardType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"getUninitializedFields(InitializationStore, TreePath, boolean, Collection<? extends AnnotationMirror>)","url":"getUninitializedFields(org.checkerframework.checker.initialization.InitializationStore,com.sun.source.util.TreePath,boolean,java.util.Collection)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"getUnitsRel()"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"getUnsigned(ByteBuffer, @org.checkerframework.checker.signedness.qual.Unsigned byte[])","url":"getUnsigned(java.nio.ByteBuffer,@org.checkerframework.checker.signedness.qual.Unsignedbyte[])"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"getUnsigned(ByteBuffer, byte[], int, int)","url":"getUnsigned(java.nio.ByteBuffer,byte[],int,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"getUnsigned(ByteBuffer, int)","url":"getUnsigned(java.nio.ByteBuffer,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"getUnsigned(ByteBuffer)","url":"getUnsigned(java.nio.ByteBuffer)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"getUnsigned(IntBuffer, int)","url":"getUnsigned(java.nio.IntBuffer,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"getUnsignedInt(ByteBuffer)","url":"getUnsignedInt(java.nio.ByteBuffer)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtilExtra","l":"getUnsignedRGB(BufferedImage, int, int, int, int, @org.checkerframework.checker.signedness.qual.Unsigned int[], int, int)","url":"getUnsignedRGB(java.awt.image.BufferedImage,int,int,int,int,@org.checkerframework.checker.signedness.qual.Unsignedint[],int,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"getUnsignedShort(ByteBuffer)","url":"getUnsignedShort(java.nio.ByteBuffer)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getUpperBound()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeParameterBounds","l":"getUpperBound()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getUpperBoundField()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getUpstreamCheckerNames()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BooleanLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CharacterLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DoubleLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LongLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ShortLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"getValue()"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"getValue()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getValue(ArrayAccessNode)","url":"getValue(org.checkerframework.dataflow.cfg.node.ArrayAccessNode)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getValue(FieldAccessNode)","url":"getValue(org.checkerframework.dataflow.cfg.node.FieldAccessNode)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"getValue(JavaExpression)","url":"getValue(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getValue(JavaExpression)","url":"getValue(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getValue(LocalVariableNode)","url":"getValue(org.checkerframework.dataflow.cfg.node.LocalVariableNode)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getValue(MethodInvocationNode)","url":"getValue(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getValue(Node)","url":"getValue(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getValue(Node)","url":"getValue(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getValue(Node)","url":"getValue(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getValue(ThisNode)","url":"getValue(org.checkerframework.dataflow.cfg.node.ThisNode)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getValue(Tree)","url":"getValue(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getValue(Tree)","url":"getValue(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getValue(Tree)","url":"getValue(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.YieldUtils","l":"getValue(Tree)","url":"getValue(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"getValueAnnotatedTypeFactory()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"getValueAnnotatedTypeFactory()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"getValueFromFactory(Tree, Node)","url":"getValueFromFactory(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"getValueOfMethod(ProcessingEnvironment, TypeMirror)","url":"getValueOfMethod(javax.annotation.processing.ProcessingEnvironment,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"getValueOfSubNode(Node)","url":"getValueOfSubNode(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getValuesCastedToType(AnnotationMirror, TypeMirror, boolean, ValueAnnotatedTypeFactory)","url":"getValuesCastedToType(javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror,boolean,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getValuesCastedToType(AnnotationMirror, TypeMirror, ValueAnnotatedTypeFactory)","url":"getValuesCastedToType(javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getValuesFromRange(Range, Class<T>)","url":"getValuesFromRange(org.checkerframework.common.value.util.Range,java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getVarargType()"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.BindingPatternUtils","l":"getVariable(Tree)","url":"getVariable(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getVisitor()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getVisitor()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getVisitorTreePath()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitSubchecker","l":"getWarningMessagePrefix()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getWarningMessagePrefix()"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"getWidenedAnnotations(AnnotationMirrorSet, TypeKind, TypeKind)","url":"getWidenedAnnotations(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"getWidenedAnnotations(AnnotationMirrorSet, TypeKind, TypeKind)","url":"getWidenedAnnotations(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getWidenedAnnotations(AnnotationMirrorSet, TypeKind, TypeKind)","url":"getWidenedAnnotations(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getWidenedAnnotations(AnnotationMirrorSet, TypeKind, TypeKind)","url":"getWidenedAnnotations(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getWidenedType(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"getWidenedType(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getWidenedType(AnnotationMirrorSet, TypeMirror, AnnotatedTypeMirror)","url":"getWidenedType(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"getWidenedValue(TypeMirror, V)","url":"getWidenedValue(javax.lang.model.type.TypeMirror,V)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"getWidth()"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"giga"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"glb(UBQualifier)","url":"glb(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"glb(UBQualifier)","url":"glb(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"glb(UBQualifier)","url":"glb(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"glb(UBQualifier)","url":"glb(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.framework.util.typeinference","c":"GlbUtil","l":"glbAll(Map<AnnotatedTypeMirror, AnnotationMirrorSet>, AnnotatedTypeFactory)","url":"glbAll(java.util.Map,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"glbOfBounds(AnnotatedTypeMirror.AnnotatedIntersectionType, QualifierHierarchy)","url":"glbOfBounds(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.QualifierHierarchy)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SubtypesSolver","l":"glbSubtypes(Set<TypeVariable>, ConstraintMap, AnnotatedTypeFactory)","url":"glbSubtypes(java.util.Set,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference","c":"GlbUtil","l":"GlbUtil()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"greaterThan(Number)","url":"greaterThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"greaterThan(Number)","url":"greaterThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"greaterThan(Number)","url":"greaterThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"greaterThan(Number)","url":"greaterThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"greaterThan(Number)","url":"greaterThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"greaterThan(Number)","url":"greaterThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"greaterThan(Number)","url":"greaterThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"greaterThanEq(Number)","url":"greaterThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"greaterThanEq(Number)","url":"greaterThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"greaterThanEq(Number)","url":"greaterThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"greaterThanEq(Number)","url":"greaterThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"greaterThanEq(Number)","url":"greaterThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"greaterThanEq(Number)","url":"greaterThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"greaterThanEq(Number)","url":"greaterThanEq(java.lang.Number)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanNode","l":"GreaterThanNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanOrEqualNode","l":"GreaterThanOrEqualNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"greatestLowerBound(QualifierKind, QualifierKind)","url":"greatestLowerBound(org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.util","c":"QualifierKindHierarchy","l":"greatestLowerBound(QualifierKind, QualifierKind)","url":"greatestLowerBound(org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"greatestLowerBound(TypeMirror, TypeMirror, ProcessingEnvironment)","url":"greatestLowerBound(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"greatestLowerBound(V)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundQualifierHierarchy","l":"greatestLowerBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"greatestLowerBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory.AccumulationQualifierHierarchy","l":"greatestLowerBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"greatestLowerBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory.ClassValQualifierHierarchy","l":"greatestLowerBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"greatestLowerBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory.MethodValQualifierHierarchy","l":"greatestLowerBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"greatestLowerBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"MostlyNoElementQualifierHierarchy","l":"greatestLowerBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"greatestLowerBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"greatestLowerBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"greatestLowerBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"greatestLowerBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"greatestLowerBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"greatestLowerBoundQualifiersOnly(AnnotationMirror, AnnotationMirror)","url":"greatestLowerBoundQualifiersOnly(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"greatestLowerBoundShallow(AnnotationMirror, TypeMirror, AnnotationMirror, TypeMirror)","url":"greatestLowerBoundShallow(javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror,javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"greatestLowerBoundsShallow(Collection<? extends AnnotationMirror>, TypeMirror, Collection<? extends AnnotationMirror>, TypeMirror)","url":"greatestLowerBoundsShallow(java.util.Collection,javax.lang.model.type.TypeMirror,java.util.Collection,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory.FenumQualifierHierarchy","l":"greatestLowerBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"greatestLowerBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory.InitializationQualifierHierarchy","l":"greatestLowerBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"greatestLowerBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierHierarchy","l":"greatestLowerBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"greatestLowerBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"MostlyNoElementQualifierHierarchy","l":"greatestLowerBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"greatestLowerBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSubsetQualifierHierarchy","l":"greatestLowerBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"greatestLowerBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSupersetQualifierHierarchy","l":"greatestLowerBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"greatestLowerBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"groundMissingHierarchies(Map.Entry<AnnotatedTypeMirror, AnnotationMirrorSet>, AnnotationMirrorMap<AnnotationMirror>)","url":"groundMissingHierarchies(java.util.Map.Entry,org.checkerframework.javacutil.AnnotationMirrorMap)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"GTEN1"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"GTEN1"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"guard"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"GUARDEDBY"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"GUARDEDBYBOTTOM"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"GUARDEDBYUNKNOWN"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"guardedByValueElement"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"GUARDSATISFIED"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"guardSatisfiedValueElement"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectChecker","l":"GuiEffectChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor.GuiEffectOverrideChecker","l":"GuiEffectOverrideChecker(Tree, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror)","url":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"GuiEffectTypeFactory(BaseTypeChecker, boolean)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,boolean)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"GuiEffectVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"h"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"h"},{"p":"org.checkerframework.checker.nullness","c":"CollectionToArrayHeuristics","l":"handle(MethodInvocationTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handle(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.nullness","c":"SystemGetPropertyHandler","l":"handle(MethodInvocationTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handle(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"handleArtificialTree(Tree)","url":"handleArtificialTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder.CFCFGTranslationPhaseOne","l":"handleArtificialTree(Tree)","url":"handleArtificialTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"handleBuilderBuildMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handleBuilderBuildMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupport","l":"handleBuilderBuildMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handleBuilderBuildMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"handleBuilderBuildMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handleBuilderBuildMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"handleCFGViz(ControlFlowGraph)","url":"handleCFGViz(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"handleConditionalStatementIsPresentGet(IfTree)","url":"handleConditionalStatementIsPresentGet(com.sun.source.tree.IfTree)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"handleConstructor(NewClassTree, AnnotatedTypeMirror)","url":"handleConstructor(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupport","l":"handleConstructor(NewClassTree, AnnotatedTypeMirror)","url":"handleConstructor(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"handleConstructor(NewClassTree, AnnotatedTypeMirror)","url":"handleConstructor(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"handleCreationElimination(MethodInvocationTree)","url":"handleCreationElimination(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"handleEndOfLineJavaDiagnostic(String)","url":"handleEndOfLineJavaDiagnostic(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"handleSuccessorsHelper(Block, Set<Block>, Queue<Block>, StringBuilder)","url":"handleSuccessorsHelper(org.checkerframework.dataflow.cfg.block.Block,java.util.Set,java.util.Queue,java.lang.StringBuilder)"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"handleTargeted(List<Attribute.TypeCompound>)","url":"handleTargeted(java.util.List)"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"handleTargeted(List<Attribute.TypeCompound>)","url":"handleTargeted(java.util.List)"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"handleTargeted(List<Attribute.TypeCompound>)","url":"handleTargeted(java.util.List)"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"handleTargeted(List<Attribute.TypeCompound>)","url":"handleTargeted(java.util.List)"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"handleTargeted(List<Attribute.TypeCompound>)","url":"handleTargeted(java.util.List)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"handleTernaryIsPresentGet(ConditionalExpressionTree)","url":"handleTernaryIsPresentGet(com.sun.source.tree.ConditionalExpressionTree)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"handleToBuilderMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handleToBuilderMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupport","l":"handleToBuilderMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handleToBuilderMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"handleToBuilderMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","url":"handleToBuilderMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordComponentStub","l":"hasAccessorInStubs()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasAnnotation(AnnotationMirror)","url":"hasAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasAnnotation(Class<? extends Annotation>)","url":"hasAnnotation(java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"hasAnnotation(Element, String)","url":"hasAnnotation(javax.lang.model.element.Element,java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasAnnotationInHierarchy(AnnotationMirror)","url":"hasAnnotationInHierarchy(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasAnnotationRelaxed(AnnotationMirror)","url":"hasAnnotationRelaxed(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"hasCreatesMustCallFor(MethodInvocationNode)","url":"hasCreatesMustCallFor(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"hasDefaultsForCheckedCode()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"hasDependentAnnotations()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticLine","l":"hasDiagnostics()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasEffectiveAnnotation(AnnotationMirror)","url":"hasEffectiveAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasEffectiveAnnotation(Class<? extends Annotation>)","url":"hasEffectiveAnnotation(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasEffectiveAnnotationRelaxed(AnnotationMirror)","url":"hasEffectiveAnnotationRelaxed(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"hasElements()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"hasElements()"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"hasEnclosingType(TypeMirror)","url":"hasEnclosingType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"hasError()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasExplicitAnnotation(AnnotationMirror)","url":"hasExplicitAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasExplicitAnnotation(Class<? extends Annotation>)","url":"hasExplicitAnnotation(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasExplicitAnnotationRelaxed(AnnotationMirror)","url":"hasExplicitAnnotationRelaxed(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"hasExplicitConstructor(ClassTree)","url":"hasExplicitConstructor(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"hasExplicitExtendsBound(AnnotatedTypeMirror)","url":"hasExplicitExtendsBound(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"hasExplicitExtendsBound(TypeMirror)","url":"hasExplicitExtendsBound(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"hasExplicitNoQualifierParameterInHierarchy(Element, AnnotationMirror)","url":"hasExplicitNoQualifierParameterInHierarchy(javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"hasExplicitQualifierParameterInHierarchy(Element, AnnotationMirror)","url":"hasExplicitQualifierParameterInHierarchy(javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"hasExplicitSuperBound(AnnotatedTypeMirror)","url":"hasExplicitSuperBound(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"hasExplicitSuperBound(TypeMirror)","url":"hasExplicitSuperBound(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.i18nformatter.util","c":"I18nFormatUtil","l":"hasFormat(String, I18nConversionCategory...)","url":"hasFormat(java.lang.String,org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory...)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"HASHCODE_VISITOR"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"hashCode()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"hashCode()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"hashCode()"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"hashCode()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"hashCode()"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"hashCode()"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprValue","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseAndNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseComplementNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseOrNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseXorNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CatchMarkerNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalAndNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalNotNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalOrNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"EqualToNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingDivisionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingRemainderNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanOrEqualNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerDivisionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerRemainderNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LeftShiftNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanOrEqualNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NotEqualNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalAdditionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMinusNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMultiplicationNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalPlusNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalSubtractionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SignedRightShiftNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThisNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnsignedRightShiftNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"hashCode()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"hashCode()"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"hashCode()"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"hashCode()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"hashCode()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"hashCode()"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"hashCode()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"hashCode()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hashCode()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeParameterBounds","l":"hashCode()"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"hashCode()"},{"p":"org.checkerframework.framework.util","c":"Contract.ConditionalPostcondition","l":"hashCode()"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"hashCode()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"hashCode()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"hashCode()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TUConstraint","l":"hashCode()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"hashCode()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"hashCode()"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"hashCode()"},{"p":"org.checkerframework.framework.type","c":"HashcodeAtmVisitor","l":"HashcodeAtmVisitor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"hasInheritedMeta(AnnotationMirror)","url":"hasInheritedMeta(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"hasLowerBoundTypeByClass(Node, Class<? extends Annotation>)","url":"hasLowerBoundTypeByClass(org.checkerframework.dataflow.cfg.node.Node,java.lang.Class)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"JavaDiagnosticReader","l":"hasNext()"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"hasNoExplicitBound(AnnotatedTypeMirror)","url":"hasNoExplicitBound(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"hasNoExplicitBound(TypeMirror)","url":"hasNoExplicitBound(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"hasNoPrefix(AnnotatedTypeMirror)","url":"hasNoPrefix(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"hasNoPrefix(AnnotationMirror)","url":"hasNoPrefix(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"hasNotOwning(Element)","url":"hasNotOwning(javax.lang.model.element.Element)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"hasNoUnits(AnnotatedTypeMirror)","url":"hasNoUnits(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"hasOption(String)","url":"hasOption(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"hasOption(String)","url":"hasOption(java.lang.String)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"hasOptionNoSubcheckers(String)","url":"hasOptionNoSubcheckers(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"hasOrIsSubchecker"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"hasOwning(Element)","url":"hasOwning(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"hasPolymorphicQualifiers(AnnotatedTypeMirror)","url":"hasPolymorphicQualifiers(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"hasPurityAnnotation(AnnotationProvider, ExecutableElement)","url":"hasPurityAnnotation(org.checkerframework.javacutil.AnnotationProvider,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"hasPurityAnnotation(AnnotationProvider, MethodTree)","url":"hasPurityAnnotation(org.checkerframework.javacutil.AnnotationProvider,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"hasQualifierParameterInHierarchy(AnnotatedTypeMirror, AnnotationMirror)","url":"hasQualifierParameterInHierarchy(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"hasQualifierParameterInHierarchy(Element, AnnotationMirror)","url":"hasQualifierParameterInHierarchy(javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"hasQualifierParameterValueElement"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"hasReceiver(Element)","url":"hasReceiver(javax.lang.model.element.Element)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"hasSequenceWithOffset(String, int)","url":"hasSequenceWithOffset(java.lang.String,int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"hasSequenceWithOffset(String, int)","url":"hasSequenceWithOffset(java.lang.String,int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"hasSequenceWithOffset(String, String)","url":"hasSequenceWithOffset(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"hasSequenceWithOffset(String, String)","url":"hasSequenceWithOffset(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkWPIPerDirectoryTest","l":"hasSkipComment(File, String)","url":"hasSkipComment(java.io.File,java.lang.String)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"hasSpecificUnit(AnnotatedTypeMirror, AnnotationMirror)","url":"hasSpecificUnit(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"hasSpecificUnitIgnoringPrefix(AnnotatedTypeMirror, AnnotationMirror)","url":"hasSpecificUnitIgnoringPrefix(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceFromElement"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceFromValue(AnnotationMirror)","url":"hasSubsequenceFromValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceSubsequenceElement"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceSubsequenceValue(AnnotationMirror)","url":"hasSubsequenceSubsequenceValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceToElement"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceToValue(AnnotationMirror)","url":"hasSubsequenceToValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"hasSyntheticArgument(NewClassTree)","url":"hasSyntheticArgument(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"hasTypeQualifierElementTypes(ElementType[], Class<?>)","url":"hasTypeQualifierElementTypes(java.lang.annotation.ElementType[],java.lang.Class)"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingAnnotationClassLoader","l":"hasWellDefinedTargetMetaAnnotation(Class<? extends Annotation>)","url":"hasWellDefinedTargetMetaAnnotation(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"hasWellDefinedTargetMetaAnnotation(Class<? extends Annotation>)","url":"hasWellDefinedTargetMetaAnnotation(java.lang.Class)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"havePairOfUnits(AnnotatedTypeMirror, AnnotationMirror, AnnotatedTypeMirror, AnnotationMirror)","url":"havePairOfUnits(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"havePairOfUnitsIgnoringOrder(AnnotatedTypeMirror, AnnotationMirror, AnnotatedTypeMirror, AnnotationMirror)","url":"havePairOfUnitsIgnoringOrder(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"haveSameDeclaration(Types, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable)","url":"haveSameDeclaration(javax.lang.model.util.Types,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"headSet(AnnotationMirror, boolean)","url":"headSet(javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"headSet(AnnotationMirror)","url":"headSet(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"hecto"},{"p":"org.checkerframework.framework.util","c":"Heuristics","l":"Heuristics()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"higher(AnnotationMirror)","url":"higher(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.i18n","c":"I18nAnnotatedTypeFactory","l":"I18nAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.i18n","c":"I18nChecker","l":"I18nChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.FormatType","l":"I18NFORMAT"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18NFORMAT_NAME"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18NFORMATBOTTOM"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"I18nFormatCall(MethodInvocationTree, AnnotatedTypeFactory)","url":"%3Cinit%3E(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.FormatType","l":"I18NFORMATFOR"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18NFORMATFOR_NAME"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"i18nFormatForValueElement"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18nFormatterAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterChecker","l":"I18nFormatterChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTransfer","l":"I18nFormatterTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"I18nFormatterTreeUtil(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterVisitor","l":"I18nFormatterVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.i18nformatter.util","c":"I18nFormatUtil","l":"I18nFormatUtil()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"i18nFormatValueElement"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.FormatType","l":"I18NINVALID"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18NINVALIDFORMAT_NAME"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"i18nInvalidFormatValueElement"},{"p":"org.checkerframework.checker.i18n","c":"I18nSubchecker","l":"I18nSubchecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18NUNKNOWNFORMAT"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"ifPresent(T, Consumer<? super T>)","url":"ifPresent(T,java.util.function.Consumer)"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"IGNORE_RANGE_OVERFLOW"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnalysis","l":"ignoredExceptionTypes"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"ignoreOverflow"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"ignoreRawTypes"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"ignoreTargetLocations"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ignoreUninferredTypeArguments"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.IllegalFormatConversionCategoryException","l":"IllegalFormatConversionCategoryException(ConversionCategory, ConversionCategory)","url":"%3Cinit%3E(org.checkerframework.checker.formatter.qual.ConversionCategory,org.checkerframework.checker.formatter.qual.ConversionCategory)"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"ImmutableTestConfiguration(List<File>, List<File>, List<String>, Map<String, String>, boolean)","url":"%3Cinit%3E(java.util.List,java.util.List,java.util.List,java.util.Map,boolean)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"impl"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"implementsAnnotation(AnnotatedTypeMirror)","url":"implementsAnnotation(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils.MemberReferenceKind","l":"IMPLICIT_INNER"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"IMPLICIT_LOWER_BOUND"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"IMPLICIT_UPPER_BOUND"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ImplicitThisNode","l":"ImplicitThisNode(TypeMirror)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"IMPURE"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory.ScanState","l":"IN_PROGRESS"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"inConstructor(TreePath)","url":"inConstructor(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"inConstructorOrInitializer"},{"p":"org.checkerframework.common.util.count","c":"AnnotationStatistics","l":"incrementCount(Name)","url":"incrementCount(javax.lang.model.element.Name)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"index"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"index"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"index"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"IndexAbstractTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.index","c":"IndexChecker","l":"IndexChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"IndexMethodIdentifier(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"IndexRefinementInfo(TransferResult<CFValue, CFStore>, CFAbstractAnalysis<?, ?, ?>, BinaryOperationNode)","url":"%3Cinit%3E(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.dataflow.cfg.node.BinaryOperationNode)"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"IndexRefinementInfo(TransferResult<CFValue, CFStore>, CFAbstractAnalysis<?, ?, ?>, Node, Node)","url":"%3Cinit%3E(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferenceResult","l":"InferenceResult()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferredValue.InferredTarget","l":"InferredTarget(TypeVariable, Collection<? extends AnnotationMirror>)","url":"%3Cinit%3E(javax.lang.model.type.TypeVariable,java.util.Collection)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferredValue.InferredType","l":"InferredType(AnnotatedTypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferredValue","l":"InferredValue()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"inferTypeArgs(AnnotatedTypeFactory, ExpressionTree, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"inferTypeArgs(org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.ExpressionTree,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgumentInference","l":"inferTypeArgs(AnnotatedTypeFactory, ExpressionTree, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"inferTypeArgs(org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.ExpressionTree,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.common.reflection","c":"ReflectionResolver","l":"INIT"},{"p":"org.checkerframework.common.reflection","c":"ReflectionResolver","l":"INIT_LIST"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"init(ControlFlowGraph)","url":"init(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"init(Map<String, Object>)","url":"init(java.util.Map)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"init(Map<String, Object>)","url":"init(java.util.Map)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"init(Map<String, Object>)","url":"init(java.util.Map)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"init(Map<String, Object>)","url":"init(java.util.Map)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelations","l":"init(ProcessingEnvironment)","url":"init(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"init(ProcessingEnvironment)","url":"init(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"init(ProcessingEnvironment)","url":"init(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"AbstractTypeProcessor","l":"init(ProcessingEnvironment)","url":"init(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"initChecker()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"initChecker()"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"initChecker()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"initChecker()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"initFields(ControlFlowGraph)","url":"initFields(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"initFields(ControlFlowGraph)","url":"initFields(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"initFields(ControlFlowGraph)","url":"initFields(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardTransferFunction","l":"initialExceptionalExitStore(UnderlyingAST)","url":"initialExceptionalExitStore(org.checkerframework.dataflow.cfg.UnderlyingAST)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"initialExceptionalExitStore(UnderlyingAST)","url":"initialExceptionalExitStore(org.checkerframework.dataflow.cfg.UnderlyingAST)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"initialExceptionalExitStore(UnderlyingAST)","url":"initialExceptionalExitStore(org.checkerframework.dataflow.cfg.UnderlyingAST)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnalysis","l":"InitializationAnalysis(BaseTypeChecker, InitializationParentAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.initialization.InitializationParentAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"InitializationAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"InitializationChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationFieldAccessAnnotatedTypeFactory","l":"InitializationFieldAccessAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationFieldAccessSubchecker","l":"InitializationFieldAccessSubchecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationFieldAccessTreeAnnotator","l":"InitializationFieldAccessTreeAnnotator(GenericAnnotatedTypeFactory<?, ?, ?, ?>)","url":"%3Cinit%3E(org.checkerframework.framework.type.GenericAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationFieldAccessVisitor","l":"InitializationFieldAccessVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"InitializationParentAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory.InitializationQualifierHierarchy","l":"InitializationQualifierHierarchy()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"initializationStaticStore"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"initializationStore"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"InitializationStore(InitializationAnalysis, boolean)","url":"%3Cinit%3E(org.checkerframework.checker.initialization.InitializationAnalysis,boolean)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"InitializationStore(InitializationStore)","url":"%3Cinit%3E(org.checkerframework.checker.initialization.InitializationStore)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"InitializationTransfer(InitializationAnalysis)","url":"%3Cinit%3E(org.checkerframework.checker.initialization.InitializationAnalysis)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"InitializationVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.type","c":"BoundsInitializer","l":"initializeBounds(AnnotatedTypeMirror.AnnotatedTypeVariable)","url":"initializeBounds(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"INITIALIZED"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"initializedFields"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"initializedFields"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitStore","l":"initializedFields"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"initializedFieldsAfterCall(MethodInvocationNode)","url":"initializedFieldsAfterCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.common.initializedfields","c":"InitializedFieldsAnnotatedTypeFactory","l":"InitializedFieldsAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.initializedfields","c":"InitializedFieldsChecker","l":"InitializedFieldsChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.initializedfields","c":"InitializedFieldsTransfer","l":"InitializedFieldsTransfer(AccumulationAnalysis)","url":"%3Cinit%3E(org.checkerframework.common.accumulation.AccumulationAnalysis)"},{"p":"org.checkerframework.framework.type","c":"BoundsInitializer","l":"initializeExtendsBound(AnnotatedTypeMirror.AnnotatedWildcardType)","url":"initializeExtendsBound(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"initializeMethodParameter(LocalVariableNode, V)","url":"initializeMethodParameter(org.checkerframework.dataflow.cfg.node.LocalVariableNode,V)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"initializePolymorphicQualifiers()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"initializeQualifierKindFields(Map<DefaultQualifierKindHierarchy.DefaultQualifierKind, Set<DefaultQualifierKindHierarchy.DefaultQualifierKind>>)","url":"initializeQualifierKindFields(java.util.Map)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis.FieldInitialValue","l":"initializer"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"initializeReflectionResolution()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"initializeReflectionResolution()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"initializers"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"initializers"},{"p":"org.checkerframework.framework.type","c":"BoundsInitializer","l":"initializeSuperBound(AnnotatedTypeMirror.AnnotatedWildcardType)","url":"initializeSuperBound(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"initializeThisValue(AnnotationMirror, TypeMirror)","url":"initializeThisValue(javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"BoundsInitializer","l":"initializeTypeArgs(AnnotatedTypeMirror.AnnotatedDeclaredType)","url":"initializeTypeArgs(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardTransferFunction","l":"initialNormalExitStore(UnderlyingAST, List<ReturnNode>)","url":"initialNormalExitStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"initialNormalExitStore(UnderlyingAST, List<ReturnNode>)","url":"initialNormalExitStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"initialNormalExitStore(UnderlyingAST, List<ReturnNode>)","url":"initialNormalExitStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"initialStore(UnderlyingAST, List<LocalVariableNode>)","url":"initialStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardTransferFunction","l":"initialStore(UnderlyingAST, List<LocalVariableNode>)","url":"initialStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"initialStore(UnderlyingAST, List<LocalVariableNode>)","url":"initialStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionTransfer","l":"initialStore(UnderlyingAST, List<LocalVariableNode>)","url":"initialStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"initialStore(UnderlyingAST, List<LocalVariableNode>)","url":"initialStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"initInitialInputs()"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"initInitialInputs()"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"initInitialInputs()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"injectRecordComponentType(Types, Element, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"injectRecordComponentType(javax.lang.model.util.Types,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"innerMostType(AnnotatedTypeMirror)","url":"innerMostType(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"inputs"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"inSameClass(Element, Element)","url":"inSameClass(javax.lang.model.element.Element,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.ajava","c":"InsertAjavaAnnotations","l":"InsertAjavaAnnotations(Elements)","url":"%3Cinit%3E(javax.lang.model.util.Elements)"},{"p":"org.checkerframework.framework.ajava","c":"InsertAjavaAnnotations","l":"insertAnnotations(InputStream, String, String)","url":"insertAnnotations(java.io.InputStream,java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.ajava","c":"InsertAjavaAnnotations","l":"insertAnnotations(String, String)","url":"insertAnnotations(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"insertExtendedNodeAfter(ExtendedNode, Node)","url":"insertExtendedNodeAfter(org.checkerframework.dataflow.cfg.builder.ExtendedNode,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"insertIntoStores(TransferResult<CFValue, CFStore>, JavaExpression, AnnotationMirror)","url":"insertIntoStores(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"insertLockPossiblyHeld(JavaExpression)","url":"insertLockPossiblyHeld(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"insertNodeAfter(T, Node)","url":"insertNodeAfter(T,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"insertNodeWithExceptionsAfter(Node, Set<TypeMirror>, Node)","url":"insertNodeWithExceptionsAfter(org.checkerframework.dataflow.cfg.node.Node,java.util.Set,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertOrRefine(JavaExpression, AnnotationMirror, boolean)","url":"insertOrRefine(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertOrRefine(JavaExpression, AnnotationMirror)","url":"insertOrRefine(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertOrRefinePermitNondeterministic(JavaExpression, AnnotationMirror)","url":"insertOrRefinePermitNondeterministic(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertThisValue(AnnotationMirror, TypeMirror)","url":"insertThisValue(javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertValue(JavaExpression, AnnotationMirror)","url":"insertValue(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"insertValue(JavaExpression, CFValue, boolean)","url":"insertValue(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.framework.flow.CFValue,boolean)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"insertValue(JavaExpression, CFValue, boolean)","url":"insertValue(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.framework.flow.CFValue,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertValue(JavaExpression, V, boolean)","url":"insertValue(org.checkerframework.dataflow.expression.JavaExpression,V,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertValue(JavaExpression, V)","url":"insertValue(org.checkerframework.dataflow.expression.JavaExpression,V)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertValuePermitNondeterministic(JavaExpression, AnnotationMirror)","url":"insertValuePermitNondeterministic(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertValuePermitNondeterministic(JavaExpression, V)","url":"insertValuePermitNondeterministic(org.checkerframework.dataflow.expression.JavaExpression,V)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"inSource"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"InstanceOfNode(InstanceOfTree, Node, Node, TypeMirror, Types)","url":"%3Cinit%3E(com.sun.source.tree.InstanceOfTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"InstanceOfNode(InstanceOfTree, Node, TypeMirror, Types)","url":"%3Cinit%3E(com.sun.source.tree.InstanceOfTree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"instanceOfTreeGetPattern(InstanceOfTree)","url":"instanceOfTreeGetPattern(com.sun.source.tree.InstanceOfTree)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"INT"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"INT"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"INT"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"INT_AND_TIME"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"INT_EVERYTHING"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerDivisionNode","l":"IntegerDivisionNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerLiteralNode","l":"IntegerLiteralNode(LiteralTree)","url":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"IntegerMath(int)","url":"%3Cinit%3E(int)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerRemainderNode","l":"IntegerRemainderNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"INTERNAL_FORM"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"internalVisualize(CFGVisualizer<CFValue, InitializationStore, ?>)","url":"internalVisualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"internalVisualize(CFGVisualizer<CFValue, LockStore, ?>)","url":"internalVisualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitStore","l":"internalVisualize(CFGVisualizer<NullnessNoInitValue, NullnessNoInitStore, ?>)","url":"internalVisualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"internalVisualize(CFGVisualizer<V, S, ?>)","url":"internalVisualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"InterningAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.interning","c":"InterningChecker","l":"InterningChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"InterningVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.test","c":"TypecheckExecutor","l":"interpretResults(TestConfiguration, CompilationResult)","url":"interpretResults(org.checkerframework.framework.test.TestConfiguration,org.checkerframework.framework.test.CompilationResult)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"intersect(ConversionCategory, ConversionCategory)","url":"intersect(org.checkerframework.checker.formatter.qual.ConversionCategory,org.checkerframework.checker.formatter.qual.ConversionCategory)"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"intersect(I18nConversionCategory, I18nConversionCategory)","url":"intersect(org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory,org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"intersect(Range)","url":"intersect(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_WILDCARD"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"intFromDouble(double)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"intFromFloat(float)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"INTRANGE_FROMGTENEGONE_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"INTRANGE_FROMNONNEG_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"INTRANGE_FROMPOS_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"INTRANGE_NAME"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"intRange()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"intRangeFromElement"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"intRangeToElement"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"INTVAL_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"intValValueElement"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"INVALIDFORMAT_NAME"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"invalidFormatAnnotationToErrorMessage(AnnotationMirror)","url":"invalidFormatAnnotationToErrorMessage(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"invalidFormatAnnotationToErrorMessage(AnnotationMirror)","url":"invalidFormatAnnotationToErrorMessage(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"invalidFormatValueElement"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"invariantArrayComponents"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"invokeCompiler()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"invokeConstructorFor(String, Class<?>[], Object[])","url":"invokeConstructorFor(java.lang.String,java.lang.Class[],java.lang.Object[])"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"irrelevantExtraMessage()"},{"p":"org.checkerframework.framework.type.typeannotator","c":"IrrelevantTypeAnnotator","l":"IrrelevantTypeAnnotator(GenericAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.GenericAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_LEAST_10_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_LEAST_11_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_LEAST_14_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_LEAST_16_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_LEAST_17_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_LEAST_18_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_LEAST_21_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_LEAST_9_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_MOST_11_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_MOST_14_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_MOST_16_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_MOST_17_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_MOST_18_JVM"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"isAccepted()"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"isAccepted()"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"isAccepted()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"isAccepted()"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"isAccepted()"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"isAccepted()"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"isAccepted()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"isAccumulatorAnnotation(AnnotationMirror)","url":"isAccumulatorAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"isAnnotatedInHierarchy(AnnotationMirror)","url":"isAnnotatedInHierarchy(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isAnonymous(TypeMirror)","url":"isAnonymous(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isAnonymousConstructor(MethodTree)","url":"isAnonymousConstructor(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isAnonymousConstructorWithExplicitEnclosingExpression(ExecutableElement, NewClassTree)","url":"isAnonymousConstructorWithExplicitEnclosingExpression(javax.lang.model.element.ExecutableElement,com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"isArgumentNull(TypeMirror)","url":"isArgumentNull(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"SyntheticArrays","l":"isArrayClone(AnnotatedTypeMirror, Element)","url":"isArrayClone(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isArrayLengthAccess(Tree)","url":"isArrayLengthAccess(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.util","c":"NodeUtils","l":"isArrayLengthFieldAccess(Node)","url":"isArrayLengthFieldAccess(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"isAsFormatCall(MethodInvocationNode, AnnotatedTypeFactory)","url":"isAsFormatCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"isAssignableFrom(Class<?>)","url":"isAssignableFrom(java.lang.Class)"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"isAssignableFrom(Class<?>)","url":"isAssignableFrom(java.lang.Class)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"isATarget(AnnotatedTypeMirror, Set<TypeVariable>)","url":"isATarget(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.Set)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isAutoGeneratedRecordMember(Element)","url":"isAutoGeneratedRecordMember(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isAutoGeneratedRecordMember(Tree)","url":"isAutoGeneratedRecordMember(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isBinaryComparison(BinaryTree)","url":"isBinaryComparison(com.sun.source.tree.BinaryTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isBindingPatternTree(Tree)","url":"isBindingPatternTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isBindingVariable(Element)","url":"isBindingVariable(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isBooleanType(TypeMirror)","url":"isBooleanType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.util","c":"NodeUtils","l":"isBooleanTypeNode(Node)","url":"isBooleanTypeNode(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isBottom()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"isBottom()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"isBottom()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"isBottom()"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isBoxedFloating(TypeMirror)","url":"isBoxedFloating(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isBoxedPrimitive(TypeMirror)","url":"isBoxedPrimitive(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isBoxOf(TypeMirror, TypeMirror)","url":"isBoxOf(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"isBuilderBuildMethod(ExecutableElement)","url":"isBuilderBuildMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupport","l":"isBuilderBuildMethod(ExecutableElement)","url":"isBuilderBuildMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"isBuilderBuildMethod(ExecutableElement)","url":"isBuilderBuildMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"isBuiltIn()"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isByteEverything()"},{"p":"org.checkerframework.framework.util","c":"TreePathCacher","l":"isCached(Tree)","url":"isCached(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagationTreeAnnotator","l":"isCallToKeyset(ExpressionTree)","url":"isCallToKeyset(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil","l":"isCanonicalConstructor(ExecutableElement, Types)","url":"isCanonicalConstructor(javax.lang.model.element.ExecutableElement,javax.lang.model.util.Types)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isCapturedTypeVariable(TypeMirror)","url":"isCapturedTypeVariable(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isCaseRule(CaseTree)","url":"isCaseRule(com.sun.source.tree.CaseTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.CaseUtils","l":"isCaseRule(CaseTree)","url":"isCaseRule(com.sun.source.tree.CaseTree)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isCharEverything()"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isCharType(TypeMirror)","url":"isCharType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isClass(TypeMirror)","url":"isClass(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isClassLiteral(Tree)","url":"isClassLiteral(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isClassTree(Tree)","url":"isClassTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isClassType(TypeMirror)","url":"isClassType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"isCommandLine()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isCompactCanonicalRecordConstructor(Element)","url":"isCompactCanonicalRecordConstructor(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isCompactCanonicalRecordConstructor(MethodTree)","url":"isCompactCanonicalRecordConstructor(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isCompileTimeConstant(Element)","url":"isCompileTimeConstant(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isCompileTimeString(ExpressionTree)","url":"isCompileTimeString(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferenceResult","l":"isComplete(Set<TypeVariable>)","url":"isComplete(java.util.Set)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isCompoundType(TypeMirror)","url":"isCompoundType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"isComputingAnnotatedTypeMirrorOfLhs()"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isConstant()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"isConstant()"},{"p":"org.checkerframework.dataflow.util","c":"NodeUtils","l":"isConstantBoolean(Node, boolean)","url":"isConstantBoolean(org.checkerframework.dataflow.cfg.node.Node,boolean)"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.ConstantCaseLabelUtils","l":"isConstantCaseLabelTree(Tree)","url":"isConstantCaseLabelTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isConstructor(MethodTree)","url":"isConstructor(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isContainedBy(AnnotatedTypeMirror, AnnotatedTypeMirror, boolean)","url":"isContainedBy(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isContainedMany(List<? extends AnnotatedTypeMirror>, List<? extends AnnotatedTypeMirror>, List<Integer>)","url":"isContainedMany(java.util.List,java.util.List,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isContainedWithinBounds(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror, boolean)","url":"isContainedWithinBounds(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"isDeclaration()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"isDeclaration()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"isDeclaration()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"isDeclarationAnnotation(AnnotationMirror)","url":"isDeclarationAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"isDeclarationOfJavaLangEnum(Types, Elements, AnnotatedTypeMirror)","url":"isDeclarationOfJavaLangEnum(javax.lang.model.util.Types,javax.lang.model.util.Elements,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isDeclarationTree(Tree)","url":"isDeclarationTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"isDeclaredInitialized(FieldAccess)","url":"isDeclaredInitialized(org.checkerframework.dataflow.expression.FieldAccess)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isDeclaredOfName(TypeMirror, CharSequence)","url":"isDeclaredOfName(javax.lang.model.type.TypeMirror,java.lang.CharSequence)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isDeconstructionPatternTree(Tree)","url":"isDeconstructionPatternTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.CaseUtils","l":"isDefaultCaseLabelTree(Tree)","url":"isDefaultCaseLabelTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isDefaultCaseTree(CaseTree)","url":"isDefaultCaseTree(com.sun.source.tree.CaseTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.CaseUtils","l":"isDefaultCaseTree(CaseTree)","url":"isDefaultCaseTree(com.sun.source.tree.CaseTree)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"isDefaultSuperConstructorCall(StatementTree)","url":"isDefaultSuperConstructorCall(com.sun.source.tree.StatementTree)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"isDeterministic(AnnotationProvider, ExecutableElement)","url":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"isDeterministic(AnnotationProvider, MethodTree)","url":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"isDeterministic(AnnotationProvider)","url":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"isDeterministic(AnnotationProvider)","url":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"isDeterministic(AnnotationProvider)","url":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"isDeterministic(AnnotationProvider)","url":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"isDeterministic(AnnotationProvider)","url":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"isDeterministic(AnnotationProvider)","url":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"isDeterministic(AnnotationProvider)","url":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"isDeterministic(AnnotationProvider)","url":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"isDeterministic(AnnotationProvider)","url":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"isDeterministic(AnnotationProvider)","url":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"isDeterministic(AnnotationProvider)","url":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"isDeterministic(AnnotationProvider)","url":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"isDeterministic(AnnotationProvider)","url":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isDiamondTree(Tree)","url":"isDiamondTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"isDirectlyMarkedUIThroughInference(Tree)","url":"isDirectlyMarkedUIThroughInference(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isEffectivelyFinal(Element)","url":"isEffectivelyFinal(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isElementFromByteCode(Element)","url":"isElementFromByteCode(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isElementFromSourceCode(Element)","url":"isElementFromSourceCode(javax.lang.model.element.Element)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"isEmpty()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlock","l":"isEmpty()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"isEmpty()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"isEmpty()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"isEmpty()"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"isEnabled(AccumulationChecker.AliasAnalysis)","url":"isEnabled(org.checkerframework.common.accumulation.AccumulationChecker.AliasAnalysis)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationChecker","l":"isEnabled(AccumulationChecker.AliasAnalysis)","url":"isEnabled(org.checkerframework.common.accumulation.AccumulationChecker.AliasAnalysis)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"isEnum(AnnotatedTypeMirror)","url":"isEnum(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isEnumSuperCall(MethodInvocationTree)","url":"isEnumSuperCall(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isErasedSubtype(TypeMirror, TypeMirror, Types)","url":"isErasedSubtype(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isError(Element)","url":"isError(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"isExplicitlyExtendsBounded(AnnotatedTypeMirror.AnnotatedWildcardType)","url":"isExplicitlyExtendsBounded(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"isExplicitlySuperBounded(AnnotatedTypeMirror.AnnotatedWildcardType)","url":"isExplicitlySuperBounded(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isExplicitThisDereference(ExpressionTree)","url":"isExplicitThisDereference(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isExprConstTrue(ExpressionTree)","url":"isExprConstTrue(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"isExpressionError(String)","url":"isExpressionError(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isExpressionTree(Tree)","url":"isExpressionTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"isFbcBottom(AnnotatedTypeMirror)","url":"isFbcBottom(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"isFbcBottom(AnnotationMirror)","url":"isFbcBottom(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isFieldAccess(Tree)","url":"isFieldAccess(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"isFieldInitialized(Element)","url":"isFieldInitialized(javax.lang.model.element.Element)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"isFinal()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isFinal(Element)","url":"isFinal(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"isFixable()"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"isFloatingPoint(TypeKind)","url":"isFloatingPoint(javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isFloatingPoint(TypeMirror)","url":"isFloatingPoint(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isFloatingPrimitive(TypeMirror)","url":"isFloatingPrimitive(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil.JavaExpressionParseException","l":"isFlowParseError()"},{"p":"org.checkerframework.checker.i18nformatter.util","c":"I18nFormatUtil","l":"isFormat(String)","url":"isFormat(java.lang.String)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"isFormatMethodCall(MethodInvocationTree, AnnotatedTypeFactory)","url":"isFormatMethodCall(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isFromByteCode(Element)","url":"isFromByteCode(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isFromStubFile(Element)","url":"isFromStubFile(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isFunctionalInterface(TypeMirror, ProcessingEnvironment)","url":"isFunctionalInterface(javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupportUtils","l":"isGuavaImmutableType(TypeMirror)","url":"isGuavaImmutableType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"isHasFormatCall(MethodInvocationNode, AnnotatedTypeFactory)","url":"isHasFormatCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnalysis","l":"isIgnoredExceptionType(TypeMirror)","url":"isIgnoredExceptionType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"isIgnoredExceptionType(TypeMirror)","url":"isIgnoredExceptionType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"isImmutable(TypeMirror)","url":"isImmutable(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"isImmutable(TypeMirror)","url":"isImmutable(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"isImmutable(TypeMirror)","url":"isImmutable(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isImmutable(TypeMirror)","url":"isImmutable(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isImmutableTypeInJdk(TypeMirror)","url":"isImmutableTypeInJdk(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isImplicitlyTypedLambda(Tree)","url":"isImplicitlyTypedLambda(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isIndexOfString(Tree)","url":"isIndexOfString(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"isInitialized(AnnotatedTypeMirror)","url":"isInitialized(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"isInitialized(AnnotationMirror)","url":"isInitialized(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isInitialized(GenericAnnotatedTypeFactory<?, ?, ?, ?>, CFAbstractValue<?>, VariableElement)","url":"isInitialized(org.checkerframework.framework.type.GenericAnnotatedTypeFactory,org.checkerframework.framework.flow.CFAbstractValue,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"isInitializedForFrame(AnnotatedTypeMirror, TypeMirror)","url":"isInitializedForFrame(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.taglet","c":"ManualTaglet","l":"isInlineTag()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"isInSameHierarchyAs(QualifierKind)","url":"isInSameHierarchyAs(org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"isInSameHierarchyAs(QualifierKind)","url":"isInSameHierarchyAs(org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"isInt()"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"isIntegral(TypeKind)","url":"isIntegral(javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isIntegralPrimitive(TypeMirror)","url":"isIntegralPrimitive(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isIntegralPrimitiveOrBoxed(TypeMirror)","url":"isIntegralPrimitiveOrBoxed(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"isIntegralZero(Number)","url":"isIntegralZero(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isIntEverything()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"isIntRange(AnnotationMirror)","url":"isIntRange(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"isIntRange(AnnotationMirrorSet)","url":"isIntRange(org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util","c":"DefaultAnnotationFormatter","l":"isInvisibleQualified(AnnotationMirror)","url":"isInvisibleQualified(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"isInvocationOfEquals(MethodInvocationTree)","url":"isInvocationOfEquals(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"isIrreducible(Set<TypeVariable>)","url":"isIrreducible(java.util.Set)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"isIsFormatCall(MethodInvocationNode, AnnotatedTypeFactory)","url":"isIsFormatCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"isJavaDiagnosticLineContinuation(String)","url":"isJavaDiagnosticLineContinuation(java.lang.String)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"isJavaDiagnosticLineStart(String)","url":"isJavaDiagnosticLineStart(java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"isJavaFile(File)","url":"isJavaFile(java.io.File)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"isJavaLangAnnotation(AnnotatedTypeMirror)","url":"isJavaLangAnnotation(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"isJavaTestFile(File)","url":"isJavaTestFile(java.io.File)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"isKeyForMap(String, ExpressionTree)","url":"isKeyForMap(java.lang.String,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isLengthOfMethodInvocation(ExecutableElement)","url":"isLengthOfMethodInvocation(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isLengthOfMethodInvocation(Node)","url":"isLengthOfMethodInvocation(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isLengthOfMethodInvocation(Tree)","url":"isLengthOfMethodInvocation(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"isLessThan(AnnotationMirror, String)","url":"isLessThan(javax.lang.model.element.AnnotationMirror,java.lang.String)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"isLessThan(Tree, String)","url":"isLessThan(com.sun.source.tree.Tree,java.lang.String)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"isLessThanByValue(Tree, String, TreePath)","url":"isLessThanByValue(com.sun.source.tree.Tree,java.lang.String,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isLessThanLengthOf(String)","url":"isLessThanLengthOf(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isLessThanLengthOf(String)","url":"isLessThanLengthOf(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isLessThanLengthOfAny(List<String>)","url":"isLessThanLengthOfAny(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isLessThanLengthOfAny(List<String>)","url":"isLessThanLengthOfAny(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isLessThanLengthQualifier()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isLessThanLengthQualifier()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"isLessThanOrEqual(AnnotationMirror, String)","url":"isLessThanOrEqual(javax.lang.model.element.AnnotationMirror,java.lang.String)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"isLessThanOrEqual(Tree, String)","url":"isLessThanOrEqual(com.sun.source.tree.Tree,java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isLessThanOrEqualTo(String)","url":"isLessThanOrEqualTo(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isLessThanOrEqualTo(String)","url":"isLessThanOrEqualTo(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isLiteral()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"isLiteral()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isLocalVariable(Element)","url":"isLocalVariable(javax.lang.model.element.Element)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"isLocalVariable(ExpressionTree)","url":"isLocalVariable(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isLocalVariable(Tree)","url":"isLocalVariable(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isLongEverything()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"isLValue()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"isMakeFormatCall(MethodInvocationNode, AnnotatedTypeFactory)","url":"isMakeFormatCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"isMapGet(Node)","url":"isMapGet(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isMathMax(Tree)","url":"isMathMax(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isMathMin(Tree)","url":"isMathMin(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"isMathMin(Tree)","url":"isMathMin(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isMathRandom(Tree, ProcessingEnvironment)","url":"isMathRandom(com.sun.source.tree.Tree,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isMethod(ExecutableElement, ExecutableElement, ProcessingEnvironment)","url":"isMethod(javax.lang.model.element.ExecutableElement,javax.lang.model.element.ExecutableElement,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isMethodAccess(Tree)","url":"isMethodAccess(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.util","c":"NodeUtils","l":"isMethodInvocation(Node, ExecutableElement, ProcessingEnvironment)","url":"isMethodInvocation(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.ExecutableElement,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isMethodInvocation(Tree, ExecutableElement, ProcessingEnvironment)","url":"isMethodInvocation(com.sun.source.tree.Tree,javax.lang.model.element.ExecutableElement,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isMethodInvocation(Tree, List<ExecutableElement>, ProcessingEnvironment)","url":"isMethodInvocation(com.sun.source.tree.Tree,java.util.List,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"isMethodReference"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"isMonotonicUpdate(FieldAccess, V)","url":"isMonotonicUpdate(org.checkerframework.dataflow.expression.FieldAccess,V)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"isNegativeOrZero()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"isNegOne()"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"isNoArgumentConstructor(Tree)","url":"isNoArgumentConstructor(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"isNonNegative()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"isNonNegative(Tree)","url":"isNonNegative(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"isNonNullOrAlias(AnnotationMirror)","url":"isNonNullOrAlias(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"isNotFullyInitializedReceiver(MethodTree)","url":"isNotFullyInitializedReceiver(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"isNotFullyInitializedReceiver(MethodTree)","url":"isNotFullyInitializedReceiver(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"isNotFullyInitializedReceiver(MethodTree)","url":"isNotFullyInitializedReceiver(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"isNotFullyInitializedReceiver(MethodTree)","url":"isNotFullyInitializedReceiver(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isNothing()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"isNullableOrAlias(AnnotationMirror)","url":"isNullableOrAlias(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isNullExpression(Tree)","url":"isNullExpression(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"isNullnessAnnotation(AnnotationMirror)","url":"isNullnessAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"isNumeric(TypeKind)","url":"isNumeric(javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isNumeric(TypeMirror)","url":"isNumeric(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isNumericBoxed(TypeMirror)","url":"isNumericBoxed(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"isNumericOrBoxed(TypeMirror)","url":"isNumericOrBoxed(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isObject(TypeElement)","url":"isObject(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isObject(TypeMirror)","url":"isObject(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"isParsing()"},{"p":"org.checkerframework.javacutil","c":"TreeUtilsAfterJava11.PatternCaseLabelUtils","l":"isPatternCaseLabelTree(Tree)","url":"isPatternCaseLabelTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizeOptions","l":"isPDF()"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"isPoly()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isPoly()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"isPoly()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"isPoly()"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"isPolymorphicQualifier(AnnotationMirror)","url":"isPolymorphicQualifier(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"isPolymorphicQualifier(AnnotationMirror)","url":"isPolymorphicQualifier(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"isPolymorphicQualifier(AnnotationMirror)","url":"isPolymorphicQualifier(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"isPolymorphicType(TypeElement)","url":"isPolymorphicType(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitStore","l":"isPolyNullNonNull"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitValue","l":"isPolyNullNonNull"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitStore","l":"isPolyNullNonNull()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitStore","l":"isPolyNullNull"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitValue","l":"isPolyNullNull"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitStore","l":"isPolyNullNull()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"isPolyNullOrAlias(AnnotationMirror)","url":"isPolyNullOrAlias(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"isPredicate(AnnotationMirror)","url":"isPredicate(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"isPredicateSubtype(String, String)","url":"isPredicateSubtype(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"isPresent(Object)","url":"isPresent(java.lang.Object)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isPrimarySubtype(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"isPrimarySubtype(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isPrimitive(TypeMirror)","url":"isPrimitive(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isPrimitiveOrBoxed(TypeMirror)","url":"isPrimitiveOrBoxed(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"isPure(EnumSet<Pure.Kind>)","url":"isPure(java.util.EnumSet)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isRandomNextDouble(Tree, ProcessingEnvironment)","url":"isRandomNextDouble(com.sun.source.tree.Tree,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isRandomNextInt(Tree, ProcessingEnvironment)","url":"isRandomNextInt(com.sun.source.tree.Tree,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"isRandomNextInt(Tree)","url":"isRandomNextInt(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isRecordAccessor(ExecutableElement)","url":"isRecordAccessor(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isRecordComponentElement(Element)","url":"isRecordComponentElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isRecordElement(Element)","url":"isRecordElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isRecordTree(Tree)","url":"isRecordTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.reflection","c":"DefaultReflectionResolver","l":"isReflectiveMethodInvocation(MethodInvocationTree)","url":"isReflectiveMethodInvocation(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.common.reflection","c":"ReflectionResolver","l":"isReflectiveMethodInvocation(MethodInvocationTree)","url":"isReflectiveMethodInvocation(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"isRegex(char)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"isRegex(String, int)","url":"isRegex(java.lang.String,int)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"isRegex(String)","url":"isRegex(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"isRelevant(AnnotatedTypeMirror)","url":"isRelevant(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"isRelevant(TypeMirror)","url":"isRelevant(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"isRelevantImpl(TypeMirror)","url":"isRelevantImpl(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isResourceVariable(Element)","url":"isResourceVariable(javax.lang.model.element.Element)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"isRunning"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"isRunning()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"isRunning()"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"isSafe()"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"isSameTAPosition(TypeAnnotationPosition, TypeAnnotationPosition)","url":"isSameTAPosition(com.sun.tools.javac.code.TypeAnnotationPosition,com.sun.tools.javac.code.TypeAnnotationPosition)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"isSameTAPositionExceptTreePos(TypeAnnotationPosition, TypeAnnotationPosition)","url":"isSameTAPositionExceptTreePos(com.sun.tools.javac.code.TypeAnnotationPosition,com.sun.tools.javac.code.TypeAnnotationPosition)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isSelfAccess(ExpressionTree)","url":"isSelfAccess(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.index","c":"IndexUtil","l":"isSequenceType(TypeMirror)","url":"isSequenceType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isShortEverything()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"isSideEffectFree(AnnotatedTypeFactory, ExecutableElement)","url":"isSideEffectFree(org.checkerframework.framework.type.AnnotatedTypeFactory,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"isSideEffectFree(AnnotationProvider, ExecutableElement)","url":"isSideEffectFree(org.checkerframework.javacutil.AnnotationProvider,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"isSideEffectFree(AnnotationProvider, MethodTree)","url":"isSideEffectFree(org.checkerframework.javacutil.AnnotationProvider,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"isSideEffectFree(ExecutableElement)","url":"isSideEffectFree(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isSideEffectFree(ExecutableElement)","url":"isSideEffectFree(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"AnnotationProvider","l":"isSideEffectFree(ExecutableElement)","url":"isSideEffectFree(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"BasicAnnotationProvider","l":"isSideEffectFree(ExecutableElement)","url":"isSideEffectFree(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isSpecificFieldAccess(Tree, VariableElement)","url":"isSpecificFieldAccess(com.sun.source.tree.Tree,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"isStatic()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"isStatic()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"isStatic()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isStatic(Element)","url":"isStatic(javax.lang.model.element.Element)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizeOptions","l":"isString()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isString(TypeElement)","url":"isString(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isString(TypeMirror)","url":"isString(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isStringCompoundConcatenation(CompoundAssignmentTree)","url":"isStringCompoundConcatenation(com.sun.source.tree.CompoundAssignmentTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isStringConcatenation(Tree)","url":"isStringConcatenation(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.util","c":"FieldInvariants","l":"isStrongerThan(FieldInvariants)","url":"isStrongerThan(org.checkerframework.framework.util.FieldInvariants)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"isStub()"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"isSubsetOf(ConversionCategory, ConversionCategory)","url":"isSubsetOf(org.checkerframework.checker.formatter.qual.ConversionCategory,org.checkerframework.checker.formatter.qual.ConversionCategory)"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"isSubsetOf(I18nConversionCategory, I18nConversionCategory)","url":"isSubsetOf(org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory,org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isSubtype(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","url":"isSubtype(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isSubtype(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"isSubtype(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"TypeHierarchy","l":"isSubtype(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"isSubtype(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isSubtype(UBQualifier)","url":"isSubtype(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isSubtype(UBQualifier)","url":"isSubtype(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"isSubtype(UBQualifier)","url":"isSubtype(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"isSubtype(UBQualifier)","url":"isSubtype(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isSubtypeCaching(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"isSubtypeCaching(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"isSubtypeOf(QualifierKind)","url":"isSubtypeOf(org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"isSubtypeOf(QualifierKind)","url":"isSubtypeOf(org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundQualifierHierarchy","l":"isSubtypeQualifiers(AnnotationMirror, AnnotationMirror)","url":"isSubtypeQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory.AccumulationQualifierHierarchy","l":"isSubtypeQualifiers(AnnotationMirror, AnnotationMirror)","url":"isSubtypeQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory.AliasingQualifierHierarchy","l":"isSubtypeQualifiers(AnnotationMirror, AnnotationMirror)","url":"isSubtypeQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory.ClassValQualifierHierarchy","l":"isSubtypeQualifiers(AnnotationMirror, AnnotationMirror)","url":"isSubtypeQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory.MethodValQualifierHierarchy","l":"isSubtypeQualifiers(AnnotationMirror, AnnotationMirror)","url":"isSubtypeQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"MostlyNoElementQualifierHierarchy","l":"isSubtypeQualifiers(AnnotationMirror, AnnotationMirror)","url":"isSubtypeQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"isSubtypeQualifiers(AnnotationMirror, AnnotationMirror)","url":"isSubtypeQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"isSubtypeQualifiers(AnnotationMirror, AnnotationMirror)","url":"isSubtypeQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"isSubtypeQualifiersOnly(AnnotationMirror, AnnotationMirror)","url":"isSubtypeQualifiersOnly(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"isSubtypeShallow(AnnotationMirror, AnnotationMirror, TypeMirror)","url":"isSubtypeShallow(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"isSubtypeShallow(AnnotationMirror, TypeMirror, AnnotationMirror, TypeMirror)","url":"isSubtypeShallow(javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror,javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"isSubtypeShallow(Collection<? extends AnnotationMirror>, Collection<? extends AnnotationMirror>, TypeMirror)","url":"isSubtypeShallow(java.util.Collection,java.util.Collection,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"isSubtypeShallow(Collection<? extends AnnotationMirror>, TypeMirror, Collection<? extends AnnotationMirror>, TypeMirror)","url":"isSubtypeShallow(java.util.Collection,javax.lang.model.type.TypeMirror,java.util.Collection,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isSubtypeShallowEffective(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","url":"isSubtypeShallowEffective(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"TypeHierarchy","l":"isSubtypeShallowEffective(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","url":"isSubtypeShallowEffective(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isSubtypeShallowEffective(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"isSubtypeShallowEffective(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"TypeHierarchy","l":"isSubtypeShallowEffective(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"isSubtypeShallowEffective(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isSubtypeShallowEffective(AnnotatedTypeMirror, AnnotationMirror)","url":"isSubtypeShallowEffective(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"TypeHierarchy","l":"isSubtypeShallowEffective(AnnotatedTypeMirror, AnnotationMirror)","url":"isSubtypeShallowEffective(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isSubtypeShallowEffective(AnnotatedTypeMirror, Collection<? extends AnnotationMirror>)","url":"isSubtypeShallowEffective(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.Collection)"},{"p":"org.checkerframework.framework.type","c":"TypeHierarchy","l":"isSubtypeShallowEffective(AnnotatedTypeMirror, Collection<? extends AnnotationMirror>)","url":"isSubtypeShallowEffective(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.Collection)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isSubtypeShallowEffective(AnnotationMirror, AnnotatedTypeMirror)","url":"isSubtypeShallowEffective(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"TypeHierarchy","l":"isSubtypeShallowEffective(AnnotationMirror, AnnotatedTypeMirror)","url":"isSubtypeShallowEffective(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isSubtypeShallowEffective(Collection<? extends AnnotationMirror>, AnnotatedTypeMirror)","url":"isSubtypeShallowEffective(java.util.Collection,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"TypeHierarchy","l":"isSubtypeShallowEffective(Collection<? extends AnnotationMirror>, AnnotatedTypeMirror)","url":"isSubtypeShallowEffective(java.util.Collection,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isSubtypeVisitHistory"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory.FenumQualifierHierarchy","l":"isSubtypeWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","url":"isSubtypeWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory.InitializationQualifierHierarchy","l":"isSubtypeWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","url":"isSubtypeWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierHierarchy","l":"isSubtypeWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","url":"isSubtypeWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"MostlyNoElementQualifierHierarchy","l":"isSubtypeWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","url":"isSubtypeWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSubsetQualifierHierarchy","l":"isSubtypeWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","url":"isSubtypeWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSupersetQualifierHierarchy","l":"isSubtypeWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","url":"isSubtypeWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor.CFGProcessResult","l":"isSuccess()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isSuperConstructorCall(MethodInvocationTree)","url":"isSuperConstructorCall(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotationClassLoader","l":"isSupportedAnnotationClass(Class<? extends Annotation>)","url":"isSupportedAnnotationClass(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"isSupportedAnnotationClass(Class<? extends Annotation>)","url":"isSupportedAnnotationClass(java.lang.Class)"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.GeneralAnnotatedTypeFactory","l":"isSupportedQualifier(AnnotationMirror)","url":"isSupportedQualifier(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isSupportedQualifier(AnnotationMirror)","url":"isSupportedQualifier(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isSupportedQualifier(Class<? extends Annotation>)","url":"isSupportedQualifier(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isSupportedQualifier(String)","url":"isSupportedQualifier(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isSwitchStatement(Tree)","url":"isSwitchStatement(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"isSynthetic()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isSynthetic(ExecutableElement)","url":"isSynthetic(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isSynthetic(MethodTree)","url":"isSynthetic(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isThisConstructorCall(MethodInvocationTree)","url":"isThisConstructorCall(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isThrowable(TypeMirror)","url":"isThrowable(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"isToBuilderMethod(ExecutableElement)","url":"isToBuilderMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupport","l":"isToBuilderMethod(ExecutableElement)","url":"isToBuilderMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"isToBuilderMethod(ExecutableElement)","url":"isToBuilderMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"isTop()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"isTop()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"isTop()"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"isTopLevelAssignmentInInitializerBlock(TreePath)","url":"isTopLevelAssignmentInInitializerBlock(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"isTopLevelValidType(AnnotatedTypeMirror)","url":"isTopLevelValidType(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"isTreeInStaticScope(TreePath)","url":"isTreeInStaticScope(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanVisitor","l":"isTypeCastSafe(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"isTypeCastSafe(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"isTypeCastSafe(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"isTypeCastSafe(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"isTypeCastSafe(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"isTypeCastSafe(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"isTypeCastSafe(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"isTypeCastSafe(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"isTypeCastSafe(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"isTypeCastSafe(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"isTypeCompoundContained(List<Attribute.TypeCompound>, Attribute.TypeCompound, Types)","url":"isTypeCompoundContained(com.sun.tools.javac.util.List,com.sun.tools.javac.code.Attribute.TypeCompound,javax.lang.model.util.Types)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isTypeDeclaration(Element)","url":"isTypeDeclaration(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isTypeDeclaration(Tree)","url":"isTypeDeclaration(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isTypeElement(Element)","url":"isTypeElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isTypeTree(Tree)","url":"isTypeTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"isUI()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"isUIType(TypeElement)","url":"isUIType(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils.MemberReferenceKind","l":"isUnbound()"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"isUnboundedOrExtendsBounded(AnnotatedTypeMirror.AnnotatedWildcardType)","url":"isUnboundedOrExtendsBounded(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isUnboundedOrExtendsBounded(WildcardType)","url":"isUnboundedOrExtendsBounded(javax.lang.model.type.WildcardType)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"isUnboundedOrSuperBounded(AnnotatedTypeMirror.AnnotatedWildcardType)","url":"isUnboundedOrSuperBounded(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isUnboundedOrSuperBounded(WildcardType)","url":"isUnboundedOrSuperBounded(javax.lang.model.type.WildcardType)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"isUnderInitialization(AnnotatedTypeMirror)","url":"isUnderInitialization(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"isUnderInitialization(AnnotationMirror)","url":"isUnderInitialization(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"isUnderlyingTypeRaw()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"isUninferredTypeArgument()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isUnknown()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"isUnknown()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"isUnknownInitialization(AnnotatedTypeMirror)","url":"isUnknownInitialization(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"isUnknownInitialization(AnnotationMirror)","url":"isUnknownInitialization(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"isUnused(VariableTree, Collection<? extends AnnotationMirror>)","url":"isUnused(com.sun.source.tree.VariableTree,java.util.Collection)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isUseOfElement(ExpressionTree)","url":"isUseOfElement(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"isValid"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"isValid()"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"isValid()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"isValid(AnnotatedTypeMirror, Tree)","url":"isValid(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"TypeValidator","l":"isValid(AnnotatedTypeMirror, Tree)","url":"isValid(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"isValidArgument(ConversionCategory, TypeMirror)","url":"isValidArgument(org.checkerframework.checker.formatter.qual.ConversionCategory,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"isValidFormatForInvocation()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"isValidParameter(I18nConversionCategory, TypeMirror)","url":"isValidParameter(org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isValidReplacement(String, String, UBQualifier.LessThanLengthOf)","url":"isValidReplacement(java.lang.String,java.lang.String,org.checkerframework.checker.index.upperbound.UBQualifier.LessThanLengthOf)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"isValidStructurally(AnnotatedTypeMirror)","url":"isValidStructurally(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedArrayType, Tree)","url":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","url":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","url":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","url":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","url":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","url":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedPrimitiveType, Tree)","url":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedPrimitiveType, Tree)","url":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isValuePlusOffsetLessThanMinLen(String, long, int)","url":"isValuePlusOffsetLessThanMinLen(java.lang.String,long,int)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"isVarArgs()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isVarArgs(MethodInvocationTree)","url":"isVarArgs(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isVarArgs(NewClassTree)","url":"isVarArgs(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isVarArgs(Tree)","url":"isVarArgs(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isVariableTreeDeclaredUsingVar(VariableTree)","url":"isVariableTreeDeclaredUsingVar(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizeOptions","l":"isVerbose()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isVoidReturn(MethodTree)","url":"isVoidReturn(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.util","c":"FieldInvariants","l":"isWellFormed()"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"isWhitespaceOnly(InputStream, int)","url":"isWhitespaceOnly(java.io.InputStream,int)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isWideningBinary(BinaryTree)","url":"isWideningBinary(com.sun.source.tree.BinaryTree)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isWiderThan(long)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isWithin(long, long)","url":"isWithin(long,long)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isWithinConstructor(Tree)","url":"isWithinConstructor(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isWithinInteger()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"iterableExpression"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"iterableType"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"iterator()"},{"p":"org.checkerframework.framework.stub","c":"JarEntryAnnotationFileResource","l":"JarEntryAnnotationFileResource(JarFile, JarEntry)","url":"%3Cinit%3E(java.util.jar.JarFile,java.util.jar.JarEntry)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"JAVAC_PATH_OPT"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"javacErrored"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"javacJar"},{"p":"org.checkerframework.common.util.count","c":"JavaCodeStatistics","l":"JavaCodeStatistics()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"javacTypes"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"JavaExpression(TypeMirror)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"JavaExpressionConverter()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.value","c":"JavaExpressionOptimizer","l":"JavaExpressionOptimizer(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil.JavaExpressionParseException","l":"JavaExpressionParseException(String, Object...)","url":"%3Cinit%3E(java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil.JavaExpressionParseException","l":"JavaExpressionParseException(Throwable, String, Object...)","url":"%3Cinit%3E(java.lang.Throwable,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil","l":"JavaExpressionParseUtil()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"JavaExpressionScanner()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"JavaExpressionVisitor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"JavaParserUtil()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.stub","c":"JavaStubifier","l":"JavaStubifier()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"javaxGuardedBy"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"jcipGuardedBy"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"JDK_PATH_OPT"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"JDK_STUB"},{"p":"org.checkerframework.framework.util","c":"ExecUtil.Redirection","l":"join()"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"JointJavacJavaParserVisitor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"JointVisitorWithDefaultAction()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"jreVersion"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"JSpecify"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"JVM_OPTS_REGEX"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"K"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"KEYFOR_NAME"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnalysis","l":"KeyForAnalysis(BaseTypeChecker, KeyForAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.nullness.KeyForAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"KeyForAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"KEYFORBOTTOM"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagationTreeAnnotator","l":"KeyForPropagationTreeAnnotator(AnnotatedTypeFactory, KeyForPropagator)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.checker.nullness.KeyForPropagator)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator","l":"KeyForPropagator(AnnotationMirror)","url":"%3Cinit%3E(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForStore","l":"KeyForStore(CFAbstractAnalysis<KeyForValue, KeyForStore, ?>, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForStore","l":"KeyForStore(CFAbstractStore<KeyForValue, KeyForStore>)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForSubchecker","l":"KeyForSubchecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForTransfer","l":"KeyForTransfer(KeyForAnalysis)","url":"%3Cinit%3E(org.checkerframework.checker.nullness.KeyForAnalysis)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"keyForTypeFactory"},{"p":"org.checkerframework.checker.nullness","c":"KeyForValue","l":"KeyForValue(CFAbstractAnalysis<KeyForValue, ?, ?>, AnnotationMirrorSet, TypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"keyForValueElement"},{"p":"org.checkerframework.checker.nullness","c":"KeyForTransfer","l":"keyForValueElement"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory.KeyLookupTreeAnnotator","l":"KeyLookupTreeAnnotator(BaseAnnotatedTypeFactory, Class<? extends Annotation>)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseAnnotatedTypeFactory,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"keySet()"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"kg"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"kg"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"killBusyExpr(Node)","url":"killBusyExpr(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"killDef(Node)","url":"killDef(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"killLiveVar(LiveVarNode)","url":"killLiveVar(org.checkerframework.dataflow.livevariable.LiveVarNode)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"kilo"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST","l":"kind"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"kind"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"kinds"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"kindToAnnotationMirror"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"kindToElementlessQualifier"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"kindToTag(Tree.Kind)","url":"kindToTag(com.sun.source.tree.Tree.Kind)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"km"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"km"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"km2"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"km2"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"km3"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"km3"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"kmPERh"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"kmPERh"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"kN"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"kN"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"Label","l":"Label()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"Label","l":"Label(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.Kind","l":"LAMBDA"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"LambdaResultExpressionNode(ExpressionTree, Node)","url":"%3Cinit%3E(com.sun.source.tree.ExpressionTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"last()"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"leafToStringTruncated(TreePath, int)","url":"leafToStringTruncated(com.sun.source.util.TreePath,int)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationValue","l":"leastUpperBound(AccumulationValue)","url":"leastUpperBound(org.checkerframework.common.accumulation.AccumulationValue)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"leastUpperBound(AnnotatedTypeFactory, AnnotatedTypeMirror, AnnotatedTypeMirror, TypeMirror)","url":"leastUpperBound(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"leastUpperBound(AnnotatedTypeFactory, AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"leastUpperBound(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"leastUpperBound(AnnotatedTypeFactory, Iterable<AnnotatedTypeMirror>)","url":"leastUpperBound(org.checkerframework.framework.type.AnnotatedTypeFactory,java.lang.Iterable)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"leastUpperBound(BusyExprStore)","url":"leastUpperBound(org.checkerframework.dataflow.busyexpr.BusyExprStore)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"leastUpperBound(Constant)","url":"leastUpperBound(org.checkerframework.dataflow.constantpropagation.Constant)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"leastUpperBound(ConstantPropagationStore)","url":"leastUpperBound(org.checkerframework.dataflow.constantpropagation.ConstantPropagationStore)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"leastUpperBound(InitializationStore)","url":"leastUpperBound(org.checkerframework.checker.initialization.InitializationStore)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForValue","l":"leastUpperBound(KeyForValue)","url":"leastUpperBound(org.checkerframework.checker.nullness.KeyForValue)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"leastUpperBound(LiveVarStore)","url":"leastUpperBound(org.checkerframework.dataflow.livevariable.LiveVarStore)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"leastUpperBound(LockStore)","url":"leastUpperBound(org.checkerframework.checker.lock.LockStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitStore","l":"leastUpperBound(NullnessNoInitStore)","url":"leastUpperBound(org.checkerframework.checker.nullness.NullnessNoInitStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitValue","l":"leastUpperBound(NullnessNoInitValue)","url":"leastUpperBound(org.checkerframework.checker.nullness.NullnessNoInitValue)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"leastUpperBound(QualifierKind, QualifierKind)","url":"leastUpperBound(org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.util","c":"QualifierKindHierarchy","l":"leastUpperBound(QualifierKind, QualifierKind)","url":"leastUpperBound(org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"leastUpperBound(ReachingDefinitionStore)","url":"leastUpperBound(org.checkerframework.dataflow.reachingdef.ReachingDefinitionStore)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store","l":"leastUpperBound(S)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"leastUpperBound(S)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"leastUpperBound(TransferInput<V, S>)","url":"leastUpperBound(org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"leastUpperBound(TypeMirror, TypeMirror, ProcessingEnvironment)","url":"leastUpperBound(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"leastUpperBound(TypeVariable, AnnotatedTypeFactory, Map<AnnotatedTypeMirror, AnnotationMirrorSet>)","url":"leastUpperBound(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeFactory,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"UnusedAbstractValue","l":"leastUpperBound(UnusedAbstractValue)","url":"leastUpperBound(org.checkerframework.dataflow.analysis.UnusedAbstractValue)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractValue","l":"leastUpperBound(V)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"leastUpperBound(V)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundQualifierHierarchy","l":"leastUpperBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"leastUpperBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory.AccumulationQualifierHierarchy","l":"leastUpperBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"leastUpperBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory.ClassValQualifierHierarchy","l":"leastUpperBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"leastUpperBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory.MethodValQualifierHierarchy","l":"leastUpperBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"leastUpperBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"MostlyNoElementQualifierHierarchy","l":"leastUpperBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"leastUpperBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"leastUpperBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"leastUpperBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"leastUpperBoundQualifiers(AnnotationMirror, AnnotationMirror)","url":"leastUpperBoundQualifiers(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"leastUpperBoundQualifiersOnly(AnnotationMirror, AnnotationMirror)","url":"leastUpperBoundQualifiersOnly(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"leastUpperBoundShallow(AnnotationMirror, TypeMirror, AnnotationMirror, TypeMirror)","url":"leastUpperBoundShallow(javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror,javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"leastUpperBoundsShallow(Collection<? extends AnnotationMirror>, TypeMirror, Collection<? extends AnnotationMirror>, TypeMirror)","url":"leastUpperBoundsShallow(java.util.Collection,javax.lang.model.type.TypeMirror,java.util.Collection,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory.FenumQualifierHierarchy","l":"leastUpperBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"leastUpperBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory.InitializationQualifierHierarchy","l":"leastUpperBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"leastUpperBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierHierarchy","l":"leastUpperBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"leastUpperBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"MostlyNoElementQualifierHierarchy","l":"leastUpperBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"leastUpperBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSubsetQualifierHierarchy","l":"leastUpperBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"leastUpperBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSupersetQualifierHierarchy","l":"leastUpperBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","url":"leastUpperBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"left"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"left"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"left"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"leftAnno"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"leftJustifiedTerminator"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LeftShiftNode","l":"LeftShiftNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"LESS_THAN_UNKNOWN"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"lessThan(Number)","url":"lessThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"lessThan(Number)","url":"lessThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"lessThan(Number)","url":"lessThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"lessThan(Number)","url":"lessThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"lessThan(Number)","url":"lessThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"lessThan(Number)","url":"lessThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"lessThan(Number)","url":"lessThan(java.lang.Number)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"LessThanAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanChecker","l":"LessThanChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"lessThanEq(Number)","url":"lessThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"lessThanEq(Number)","url":"lessThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"lessThanEq(Number)","url":"lessThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"lessThanEq(Number)","url":"lessThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"lessThanEq(Number)","url":"lessThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"lessThanEq(Number)","url":"lessThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"lessThanEq(Number)","url":"lessThanEq(java.lang.Number)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanNode","l":"LessThanNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"lessThanOrEqual(OffsetEquation)","url":"lessThanOrEqual(org.checkerframework.checker.index.upperbound.OffsetEquation)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanOrEqualNode","l":"LessThanOrEqualNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"lessThanOrEqualTo(Effect, Effect)","url":"lessThanOrEqualTo(org.checkerframework.checker.guieffect.Effect,org.checkerframework.checker.guieffect.Effect)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanTransfer","l":"LessThanTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanVisitor","l":"LessThanVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"lhs"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"lineSeparator"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_DEFAULT_NOINITFORMONOTONICNONNULL"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_DEFAULT_PERMITCLEARPROPERTY"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_DEFAULT_REDUNDANTNULLCOMPARISON"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_DEFAULT_TRUSTARRAYLENZERO"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_NOINITFORMONOTONICNONNULL"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_PERMITCLEARPROPERTY"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_REDUNDANTNULLCOMPARISON"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_TRUSTARRAYLENZERO"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"listContainsSyntacticEqualJavaExpression(List<? extends JavaExpression>, JavaExpression)","url":"listContainsSyntacticEqualJavaExpression(java.util.List,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"listIsDeterministic(List<? extends JavaExpression>, AnnotationProvider)","url":"listIsDeterministic(java.util.List,org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"ListTreeAnnotator","l":"ListTreeAnnotator(List<TreeAnnotator>)","url":"%3Cinit%3E(java.util.List)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"ListTreeAnnotator","l":"ListTreeAnnotator(TreeAnnotator...)","url":"%3Cinit%3E(org.checkerframework.framework.type.treeannotator.TreeAnnotator...)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"ListTypeAnnotator","l":"ListTypeAnnotator(List<TypeAnnotator>)","url":"%3Cinit%3E(java.util.List)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"ListTypeAnnotator","l":"ListTypeAnnotator(TypeAnnotator...)","url":"%3Cinit%3E(org.checkerframework.framework.type.typeannotator.TypeAnnotator...)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"LiteralTreeAnnotator","l":"LiteralTreeAnnotator(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarNode","l":"liveVariable"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarNode","l":"LiveVarNode(Node)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"LiveVarStore()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"LiveVarStore(Set<LiveVarNode>)","url":"%3Cinit%3E(java.util.Set)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"LiveVarTransfer()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"loadAnnotationClass(String, boolean)","url":"loadAnnotationClass(java.lang.String,boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"loadAnnotationClasses(Set<String>)","url":"loadAnnotationClasses(java.util.Set)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"loader"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"loadExternalAnnotationClass(String)","url":"loadExternalAnnotationClass(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"loadExternalAnnotationClassesFromDirectory(String)","url":"loadExternalAnnotationClassesFromDirectory(java.lang.String)"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"LOCAL_VARIABLE"},{"p":"org.checkerframework.checker.i18n","c":"LocalizableKeyAnnotatedTypeFactory","l":"LocalizableKeyAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.i18n","c":"LocalizableKeyChecker","l":"LocalizableKeyChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"LocalVariable(LocalVariableNode)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.LocalVariableNode)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"LocalVariable(VariableElement)","url":"%3Cinit%3E(javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"LocalVariableNode(Tree, Node)","url":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"LocalVariableNode(Tree)","url":"%3Cinit%3E(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"localVariableValues"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.Result","l":"location"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"location"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"location"},{"p":"org.checkerframework.framework.qual","c":"DefaultQualifier","l":"locations()"},{"p":"org.checkerframework.checker.lock","c":"LockAnalysis","l":"LockAnalysis(BaseTypeChecker, LockAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.lock.LockAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"LockAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.lock","c":"LockChecker","l":"LockChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"LOCKHELD"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"LOCKPOSSIBLYHELD"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"LockStore(LockAnalysis, boolean)","url":"%3Cinit%3E(org.checkerframework.checker.lock.LockAnalysis,boolean)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"LockStore(LockAnalysis, CFAbstractStore<CFValue, LockStore>)","url":"%3Cinit%3E(org.checkerframework.checker.lock.LockAnalysis,org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"LockTransfer(LockAnalysis, LockChecker)","url":"%3Cinit%3E(org.checkerframework.checker.lock.LockAnalysis,org.checkerframework.checker.lock.LockChecker)"},{"p":"org.checkerframework.checker.lock","c":"LockTreeAnnotator","l":"LockTreeAnnotator(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"LockVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"TreeAnnotator","l":"log(String, Object...)","url":"log(java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"LombokSupport(CalledMethodsAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.checker.calledmethods.CalledMethodsAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"LONG"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"LONG"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"LONG_EVERYTHING"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"longFromDouble(double)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"longFromFloat(float)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LongLiteralNode","l":"LongLiteralNode(LiteralTree)","url":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"LongMath(long)","url":"%3Cinit%3E(long)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"loopOverBlockContents(Block, Analysis<V, S, T>, String)","url":"loopOverBlockContents(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis,java.lang.String)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.BoundType","l":"LOWER"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"LOWER_BOUND"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"lower(AnnotationMirror)","url":"lower(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"LowerBoundAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundChecker","l":"LowerBoundChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"lowerBoundTarget()"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"lowerBoundTarget()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"LowerBoundTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundVisitor","l":"LowerBoundVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"ltEqLengthOfValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"ltLengthOfOffsetElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"ltLengthOfOffsetElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"ltLengthOfValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"ltLengthOfValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"ltOMLengthOfValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"lub(UBQualifier)","url":"lub(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"lub(UBQualifier)","url":"lub(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"lub(UBQualifier)","url":"lub(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"lub(UBQualifier)","url":"lub(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"lubPrimaries(AnnotationMirrorMap<AnnotationMirror>, AnnotationMirrorMap<AnnotationMirrorSet>, AnnotationMirrorSet, QualifierHierarchy)","url":"lubPrimaries(org.checkerframework.javacutil.AnnotationMirrorMap,org.checkerframework.javacutil.AnnotationMirrorMap,org.checkerframework.javacutil.AnnotationMirrorSet,org.checkerframework.framework.type.QualifierHierarchy)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory.InitializationQualifierHierarchy","l":"lubTypeFrame(TypeMirror, TypeMirror)","url":"lubTypeFrame(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"lvalue"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"m"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"m"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"m2"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"m2"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"m3"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"m3"},{"p":"org.checkerframework.common.util.debug","c":"SignaturePrinter","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"org.checkerframework.common.util.debug","c":"TreePrinter","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"org.checkerframework.dataflow.cfg.playground","c":"BusyExpressionPlayground","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"org.checkerframework.dataflow.cfg.playground","c":"ConstantPropagationPlayground","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"org.checkerframework.dataflow.cfg.playground","c":"LiveVariablePlayground","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"org.checkerframework.dataflow.cfg.playground","c":"ReachingDefinitionPlayground","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizeLauncher","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"org.checkerframework.framework.ajava","c":"InsertAjavaAnnotations","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"org.checkerframework.framework.stub","c":"JavaStubifier","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"org.checkerframework.framework.stub","c":"RemoveAnnotationsForInference","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"makeCopy(T)"},{"p":"org.checkerframework.framework.type","c":"TypeVariableSubstitutor.Visitor","l":"makeCopy(T)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"makeFormatCallCategories(MethodInvocationNode, I18nFormatterAnnotatedTypeFactory)","url":"makeFormatCallCategories(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.checker.i18nformatter.I18nFormatterAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"makeLockHeld(LockStore, Node)","url":"makeLockHeld(org.checkerframework.checker.lock.LockStore,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"makeLockHeld(TransferResult<CFValue, LockStore>, Node)","url":"makeLockHeld(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"makeLockPossiblyHeld(LockStore, Node)","url":"makeLockPossiblyHeld(org.checkerframework.checker.lock.LockStore,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"makeLockPossiblyHeld(TransferResult<CFValue, LockStore>, Node)","url":"makeLockPossiblyHeld(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"makeNonNull(NullnessNoInitStore, Node)","url":"makeNonNull(org.checkerframework.checker.nullness.NullnessNoInitStore,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"makeNonNull(TransferResult<NullnessNoInitValue, NullnessNoInitStore>, Node)","url":"makeNonNull(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"makeOrReturnCopy(T, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","url":"makeOrReturnCopy(T,java.util.IdentityHashMap)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"maker"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"makeUnmodifiable()"},{"p":"org.checkerframework.taglet","c":"ManualTaglet","l":"ManualTaglet()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"MAP_TYPE"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresKeyFor","l":"map()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresKeyForIf","l":"map()"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"map(T, Function<? super T, ? extends U>)","url":"map(T,java.util.function.Function)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"mapList(Function<? super FROM, ? extends TO>, Iterable<FROM>)","url":"mapList(java.util.function.Function,java.lang.Iterable)"},{"p":"org.checkerframework.framework.util","c":"TypeArgumentMapper","l":"mapTypeArgumentIndices(TypeElement, TypeElement, Types)","url":"mapTypeArgumentIndices(javax.lang.model.element.TypeElement,javax.lang.model.element.TypeElement,javax.lang.model.util.Types)"},{"p":"org.checkerframework.framework.util","c":"TypeArgumentMapper","l":"mapTypeArguments(TypeElement, TypeElement, Types)","url":"mapTypeArguments(javax.lang.model.element.TypeElement,javax.lang.model.element.TypeElement,javax.lang.model.util.Types)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"MarkerNode(Tree, String, Types)","url":"%3Cinit%3E(com.sun.source.tree.Tree,java.lang.String,javax.lang.model.util.Types)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"markFieldsAsInitialized(List<VariableElement>, TypeElement)","url":"markFieldsAsInitialized(java.util.List,javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.Matcher","l":"match(TreePath)","url":"match(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.OfKind","l":"match(TreePath)","url":"match(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.OrMatcher","l":"match(TreePath)","url":"match(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.PreceededBy","l":"match(TreePath)","url":"match(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.Within","l":"match(TreePath)","url":"match(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.WithinTrueBranch","l":"match(TreePath)","url":"match(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.Matcher","l":"Matcher()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"MATCHES_REGEX_NAME"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"matchesCheckerOrSubcheckerFromList(String, List<String>)","url":"matchesCheckerOrSubcheckerFromList(java.lang.String,java.util.List)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"matchesElement(ExecutableElement, String, Class<?>...)","url":"matchesElement(javax.lang.model.element.ExecutableElement,java.lang.String,java.lang.Class...)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"matchesFullyQualifiedProcessor(String, List<String>, boolean)","url":"matchesFullyQualifiedProcessor(java.lang.String,java.util.List,boolean)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"matchesNoRegex(Collection<String>, Collection<String>)","url":"matchesNoRegex(java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"matchesRegexValueElement"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"matchesSomeRegex(Collection<String>, Collection<String>)","url":"matchesSomeRegex(java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.framework.util","c":"Heuristics","l":"matchParents(TreePath, Tree.Kind...)","url":"matchParents(com.sun.source.util.TreePath,com.sun.source.tree.Tree.Kind...)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect.EffectRange","l":"max"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"MAX_VALUES"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"max(Range)","url":"max(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"maxCountBeforeWidening"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"maxValue(TypeKind)","url":"maxValue(javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"mayAppearInSameLen(JavaExpression)","url":"mayAppearInSameLen(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"MAYBE_ALIASED"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"MAYBE_LEAKED"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"maybeCopyPrimaryAnnotations(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"maybeCopyPrimaryAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"maybeGetTypeMirror(Class<?>)","url":"maybeGetTypeMirror(java.lang.Class)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"maybeIntegral(AnnotatedTypeMirror)","url":"maybeIntegral(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"mega"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"mergeAnnotationFileAnnosIntoType(AnnotatedTypeMirror, Element, AnnotationFileElementTypes)","url":"mergeAnnotationFileAnnosIntoType(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.stub.AnnotationFileElementTypes)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"EqualitiesSolver","l":"mergeConstraints(TypeVariable, TargetConstraints.Equalities, InferenceResult, ConstraintMap, AnnotatedTypeFactory)","url":"mergeConstraints(javax.lang.model.type.TypeVariable,org.checkerframework.framework.util.typeinference.solver.TargetConstraints.Equalities,org.checkerframework.framework.util.typeinference.solver.InferenceResult,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"mergeInformation(Node, Constant)","url":"mergeInformation(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.constantpropagation.Constant)"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"mergeLists(List<DiagMessage>, List<DiagMessage>)","url":"mergeLists(java.util.List,java.util.List)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"mergeLubAnnosWithEqualities(TypeVariable, AnnotationMirrorMap<AnnotationMirror>, ConstraintMap, AnnotatedTypeFactory)","url":"mergeLubAnnosWithEqualities(javax.lang.model.type.TypeVariable,org.checkerframework.javacutil.AnnotationMirrorMap,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"mergeLubTypeWithEqualities(TypeVariable, AnnotatedTypeMirror, ConstraintMap, AnnotatedTypeFactory)","url":"mergeLubTypeWithEqualities(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferenceResult","l":"mergeSubordinate(InferenceResult)","url":"mergeSubordinate(org.checkerframework.framework.util.typeinference.solver.InferenceResult)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferenceResult","l":"mergeTarget(TypeVariable, InferenceResult)","url":"mergeTarget(javax.lang.model.type.TypeVariable,org.checkerframework.framework.util.typeinference.solver.InferenceResult)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"message"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"message(Diagnostic.Kind, String, Object...)","url":"message(javax.tools.Diagnostic.Kind,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"message(Diagnostic.Kind, String)","url":"message(javax.tools.Diagnostic.Kind,java.lang.String)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"messageKeyMatches(String, String)","url":"messageKeyMatches(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"messageKeyMatches(String, String)","url":"messageKeyMatches(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"messager"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"messagesProperties"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"metaAnnotation"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"method"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"method"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"method"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.Kind","l":"METHOD"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"MethodAccessNode(ExpressionTree, ExecutableElement, Node)","url":"%3Cinit%3E(com.sun.source.tree.ExpressionTree,javax.lang.model.element.ExecutableElement,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"MethodAccessNode(ExpressionTree, Node)","url":"%3Cinit%3E(com.sun.source.tree.ExpressionTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"MethodCall(TypeMirror, ExecutableElement, JavaExpression, List<JavaExpression>)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror,javax.lang.model.element.ExecutableElement,org.checkerframework.dataflow.expression.JavaExpression,java.util.List)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"methodFromUse(ExpressionTree, ExecutableElement, AnnotatedTypeMirror)","url":"methodFromUse(com.sun.source.tree.ExpressionTree,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"methodFromUse(ExpressionTree, ExecutableElement, AnnotatedTypeMirror)","url":"methodFromUse(com.sun.source.tree.ExpressionTree,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"methodFromUse(ExpressionTree, ExecutableElement, AnnotatedTypeMirror)","url":"methodFromUse(com.sun.source.tree.ExpressionTree,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"methodFromUse(MethodInvocationTree)","url":"methodFromUse(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"methodFromUse(MethodInvocationTree)","url":"methodFromUse(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"methodFromUse(MethodInvocationTree)","url":"methodFromUse(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"methodFromUsePreSubstitution(ExpressionTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"methodFromUsePreSubstitution(com.sun.source.tree.ExpressionTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"methodFromUsePreSubstitution(ExpressionTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"methodFromUsePreSubstitution(com.sun.source.tree.ExpressionTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"methodFromUsePreSubstitution(ExpressionTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"methodFromUsePreSubstitution(com.sun.source.tree.ExpressionTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"methodInvocationConvert(Node, TypeMirror)","url":"methodInvocationConvert(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"MethodInvocationNode(MethodAccessNode, List<Node>, TreePath)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.MethodAccessNode,java.util.List,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"MethodInvocationNode(MethodInvocationTree, MethodAccessNode, List<Node>, TreePath)","url":"%3Cinit%3E(com.sun.source.tree.MethodInvocationTree,org.checkerframework.dataflow.cfg.node.MethodAccessNode,java.util.List,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.common.reflection.qual","c":"MethodVal","l":"methodName()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"methodName(MethodInvocationTree)","url":"methodName(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"methodParameterTAPosition(int, int)","url":"methodParameterTAPosition(int,int)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"methodReceiverTAPosition(int)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"methodReturnTAPosition(int)"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethods","l":"methods()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethodsIf","l":"methods()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"RequiresCalledMethods","l":"methods()"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"methodThrowsTAPosition(int, int)","url":"methodThrowsTAPosition(int,int)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"methodTree"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"methodTypeParameterBoundTAPosition(int, int, int)","url":"methodTypeParameterBoundTAPosition(int,int,int)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"methodTypeParameterTAPosition(int, int)","url":"methodTypeParameterTAPosition(int,int)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"methodTypeToTargets(AnnotatedTypeMirror.AnnotatedExecutableType)","url":"methodTypeToTargets(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"MethodValAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.reflection","c":"MethodValChecker","l":"MethodValChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"methodValClassNameElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"methodValMethodNameElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"methodValParamsElement"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory.MethodValQualifierHierarchy","l":"MethodValQualifierHierarchy(Collection<Class<? extends Annotation>>, Elements)","url":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory.MethodValTreeAnnotator","l":"MethodValTreeAnnotator(MethodValAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.reflection.MethodValAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"methodValues"},{"p":"org.checkerframework.common.reflection","c":"MethodValVisitor","l":"MethodValVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"micro"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"milli"},{"p":"org.checkerframework.checker.guieffect","c":"Effect.EffectRange","l":"min"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"min"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"min(Effect, Effect)","url":"min(org.checkerframework.checker.guieffect.Effect,org.checkerframework.checker.guieffect.Effect)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"min(Range)","url":"min(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"MINLEN_NAME"},{"p":"org.checkerframework.common.value.qual","c":"MinLenFieldInvariant","l":"minLen()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"minLenFieldInvariantFieldElement"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"minLenFieldInvariantMinLenElement"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"minLenValueElement"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"minus(Number)","url":"minus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"minus(Number)","url":"minus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"minus(Number)","url":"minus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"minus(Number)","url":"minus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"minus(Number)","url":"minus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"minus(Number)","url":"minus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"minus(Number)","url":"minus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"minus(Range)","url":"minus(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"minusOffset(int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"minusOffset(int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"minusOffset(Node, UpperBoundAnnotatedTypeFactory)","url":"minusOffset(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.checker.index.upperbound.UpperBoundAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"minusOffset(Node, UpperBoundAnnotatedTypeFactory)","url":"minusOffset(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.checker.index.upperbound.UpperBoundAnnotatedTypeFactory)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"minValue(TypeKind)","url":"minValue(javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"mixedUnits"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"mm"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"mm"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"mm2"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"mm2"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"mm3"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"mm3"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"modelTypes"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"mol"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"MONOTONIC_NONNULL"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"moreSpecificValue(V, V)","url":"moreSpecificValue(V,V)"},{"p":"org.checkerframework.framework.type","c":"MostlyNoElementQualifierHierarchy","l":"MostlyNoElementQualifierHierarchy(Collection<Class<? extends Annotation>>, Elements, GenericAnnotatedTypeFactory<?, ?, ?, ?>)","url":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements,org.checkerframework.framework.type.GenericAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationValue","l":"mostSpecific(AccumulationValue, AccumulationValue)","url":"mostSpecific(org.checkerframework.common.accumulation.AccumulationValue,org.checkerframework.common.accumulation.AccumulationValue)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForValue","l":"mostSpecific(KeyForValue, KeyForValue)","url":"mostSpecific(org.checkerframework.checker.nullness.KeyForValue,org.checkerframework.checker.nullness.KeyForValue)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"mostSpecific(List<TypeMirror>, ProcessingEnvironment)","url":"mostSpecific(java.util.List,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"mostSpecific(V, V)","url":"mostSpecific(V,V)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"mPERs"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"mPERs"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"mPERs2"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"mPERs2"},{"p":"org.checkerframework.common.reflection","c":"DefaultReflectionResolver","l":"MSG_PREFEX_REFLECTION"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"MSGS_FILE"},{"p":"org.checkerframework.checker.units","c":"UnitsRelations","l":"multiplication(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"multiplication(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"multiplication(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"multiplication(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"MustCallAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallChecker","l":"MustCallChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallNoCreatesMustCallForChecker","l":"MustCallNoCreatesMustCallForChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"MustCallTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTypeAnnotator","l":"MustCallTypeAnnotator(MustCallAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.checker.mustcall.MustCallAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"MustCallVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"N"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"N"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"Label","l":"name"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"name"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"nameExpressionToString(ExpressionTree)","url":"nameExpressionToString(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"names"},{"p":"org.checkerframework.framework.qual","c":"DefaultFor","l":"names()"},{"p":"org.checkerframework.framework.qual","c":"DefaultFor","l":"namesExceptions()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"nameToQualifierKind"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"nano"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"narrow(Node, TypeMirror)","url":"narrow(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"narrowAndBox(Node, TypeMirror)","url":"narrowAndBox(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils.PrimitiveConversionKind","l":"NARROWING"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"NarrowingConversionNode(Tree, Node, TypeMirror)","url":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"NEG_1"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"negate()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"negateConstant(String)","url":"negateConstant(java.lang.String)"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"negateString(String)","url":"negateString(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"negativeArraySizeExceptionType"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"negativeIndexForValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"negativeIndexForValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"NEGATIVEONE"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"NEGATIVEONE"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DeconstructorPatternNode","l":"nestedPatterns"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"newArrayExceptionTypes"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"newFieldValueAfterMethodCall(FieldAccess, GenericAnnotatedTypeFactory<CFValue, InitializationStore, ?, ?>, CFValue)","url":"newFieldValueAfterMethodCall(org.checkerframework.dataflow.expression.FieldAccess,org.checkerframework.framework.type.GenericAnnotatedTypeFactory,org.checkerframework.framework.flow.CFValue)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitStore","l":"newFieldValueAfterMethodCall(FieldAccess, GenericAnnotatedTypeFactory<NullnessNoInitValue, NullnessNoInitStore, ?, ?>, NullnessNoInitValue)","url":"newFieldValueAfterMethodCall(org.checkerframework.dataflow.expression.FieldAccess,org.checkerframework.framework.type.GenericAnnotatedTypeFactory,org.checkerframework.checker.nullness.NullnessNoInitValue)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"newFieldValueAfterMethodCall(FieldAccess, GenericAnnotatedTypeFactory<V, S, ?, ?>, V)","url":"newFieldValueAfterMethodCall(org.checkerframework.dataflow.expression.FieldAccess,org.checkerframework.framework.type.GenericAnnotatedTypeFactory,V)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"newMonotonicFieldValueAfterMethodCall(FieldAccess, GenericAnnotatedTypeFactory<V, S, ?, ?>, V)","url":"newMonotonicFieldValueAfterMethodCall(org.checkerframework.dataflow.expression.FieldAccess,org.checkerframework.framework.type.GenericAnnotatedTypeFactory,V)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"NEWOBJECT"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"newResult"},{"p":"org.checkerframework.framework.test.diagnostics","c":"JavaDiagnosticReader","l":"next()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"NN"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"NN"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallChecker","l":"NO_CREATES_MUSTCALLFOR"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallChecker","l":"NO_LIGHTWEIGHT_OWNERSHIP"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallChecker","l":"NO_RESOURCE_ALIASES"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"noClassDefFoundErrorType"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"node"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"node"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode.ExtendedNodeType","l":"NODE"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"Node(TypeMirror)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"nodeCollectionToString(Collection<? extends Node>)","url":"nodeCollectionToString(java.util.Collection)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"PhaseOneResult","l":"nodeToString(ExtendedNode)","url":"nodeToString(org.checkerframework.dataflow.cfg.builder.ExtendedNode)"},{"p":"org.checkerframework.dataflow.util","c":"NodeUtils","l":"NodeUtils()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"nodeValues"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"nodeValues"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"nodeValuesToString(Map<Node, V>)","url":"nodeValuesToString(java.util.Map)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"NoElementQualifierHierarchy(Collection<Class<? extends Annotation>>, Elements, GenericAnnotatedTypeFactory<?, ?, ?, ?>)","url":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements,org.checkerframework.framework.type.GenericAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"noLightweightOwnership"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"NON_LEAKED"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"NON_NULL_STRINGS_CONCATENATION"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_WILDCARD"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"NONNULL"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"NONNULL"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"NONNULL_ANNOTATIONS"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"noQualifierParameterValueElement"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"noStringMatchesAnyRegex(Collection<String>, Collection<String>)","url":"noStringMatchesAnyRegex(java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"NOT_EFFECTIVELY_FINAL"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"NOT_ONLY_INITIALIZED"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"notBothReasons"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"notDetReasons"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NotEqualNode","l":"NotEqualNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"notEqualTo(Number)","url":"notEqualTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"notEqualTo(Number)","url":"notEqualTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"notEqualTo(Number)","url":"notEqualTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"notEqualTo(Number)","url":"notEqualTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"notEqualTo(Number)","url":"notEqualTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"notEqualTo(Number)","url":"notEqualTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"notEqualTo(Number)","url":"notEqualTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"NOTHING"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"notSEFreeReasons"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"NULL"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"NULL"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_WILDCARD"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"NULLABLE"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"NULLABLE"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.InvocationType","l":"NULLARRAY"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"NullChkNode(Tree, Node)","url":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullLiteralNode","l":"NullLiteralNode(LiteralTree)","url":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"nullnessAnnos"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"NullnessChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFormatter.NullnessFormattingVisitor","l":"NullnessFormattingVisitor(AnnotationFormatter, boolean, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.util.AnnotationFormatter,boolean,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnalysis","l":"NullnessNoInitAnalysis(BaseTypeChecker, NullnessNoInitAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.nullness.NullnessNoInitAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"NullnessNoInitAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFormatter","l":"NullnessNoInitAnnotatedTypeFormatter(boolean, boolean)","url":"%3Cinit%3E(boolean,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitStore","l":"NullnessNoInitStore(CFAbstractAnalysis<NullnessNoInitValue, NullnessNoInitStore, ?>, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitStore","l":"NullnessNoInitStore(NullnessNoInitStore)","url":"%3Cinit%3E(org.checkerframework.checker.nullness.NullnessNoInitStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitSubchecker","l":"NullnessNoInitSubchecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"NullnessNoInitTransfer(NullnessNoInitAnalysis)","url":"%3Cinit%3E(org.checkerframework.checker.nullness.NullnessNoInitAnalysis)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitValue","l":"NullnessNoInitValue(CFAbstractAnalysis<NullnessNoInitValue, ?, ?>, AnnotationMirrorSet, TypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"NullnessNoInitVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"NullnessPropagationTreeAnnotator(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"nullnessTypeFactory"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"nullPointerExceptionType"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"NUMBER"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"NumberMath()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundQualifierHierarchy","l":"numberOfIterationsBeforeWidening()"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"numberOfIterationsBeforeWidening()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalAdditionNode","l":"NumericalAdditionNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMinusNode","l":"NumericalMinusNode(UnaryTree, Node)","url":"%3Cinit%3E(com.sun.source.tree.UnaryTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMultiplicationNode","l":"NumericalMultiplicationNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalPlusNode","l":"NumericalPlusNode(UnaryTree, Node)","url":"%3Cinit%3E(com.sun.source.tree.UnaryTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalSubtractionNode","l":"NumericalSubtractionNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"ObjectCreationNode(NewClassTree, Node, Node, List<Node>, ClassDeclarationNode)","url":"%3Cinit%3E(com.sun.source.tree.NewClassTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,java.util.List,org.checkerframework.dataflow.cfg.node.ClassDeclarationNode)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"objectGetClass"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"objectTM"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"objectTypeMirror"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.FoundRequired","l":"of(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"of(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.FoundRequired","l":"of(AnnotatedTypeMirror, AnnotatedTypeParameterBounds)","url":"of(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeParameterBounds)"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"of(T1, T2)","url":"of(T1,T2)"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOf","l":"offset()"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOfIf","l":"offset()"},{"p":"org.checkerframework.checker.index.qual","c":"LTLengthOf","l":"offset()"},{"p":"org.checkerframework.checker.index.qual","c":"SubstringIndexFor","l":"offset()"},{"p":"org.checkerframework.checker.index","c":"OffsetDependentTypesHelper","l":"OffsetDependentTypesHelper(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"OffsetEquation(OffsetEquation)","url":"%3Cinit%3E(org.checkerframework.checker.index.upperbound.OffsetEquation)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.OfKind","l":"OfKind(Tree.Kind, Heuristics.Matcher)","url":"%3Cinit%3E(com.sun.source.tree.Tree.Kind,org.checkerframework.framework.util.Heuristics.Matcher)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"one"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"ONE"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"ONE"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"ONE"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"operand"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"operand"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"operand"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"operand"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"operand"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnaryOperationNode","l":"operand"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"operand"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"operand"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"operationKind"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"operationKind"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"optimize(JavaExpression, AnnotatedTypeFactory)","url":"optimize(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"OPTION_SEPARATOR"},{"p":"org.checkerframework.checker.optional","c":"OptionalChecker","l":"OptionalChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"OptionalVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"optionMapToList(Map<String, String>)","url":"optionMapToList(java.util.Map)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"order(Collection<AnnotatedTypeMirror.AnnotatedTypeVariable>)","url":"order(java.util.Collection)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"order(Collection<TypeVariable>, Types)","url":"order(java.util.Collection,javax.lang.model.util.Types)"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"orElse(T, T)","url":"orElse(T,T)"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"orElseGet(T, Supplier<? extends T>)","url":"orElseGet(T,java.util.function.Supplier)"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"orElseThrow(T, Supplier<? extends X>)","url":"orElseThrow(T,java.util.function.Supplier)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.OrMatcher","l":"OrMatcher(Heuristics.Matcher...)","url":"%3Cinit%3E(org.checkerframework.framework.util.Heuristics.Matcher...)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"Other"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"OTHER"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"OTHERWISE"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"out"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"outDir"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"outOfMemoryErrorType"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"outStores"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"overridden"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"overriddenMethods(Elements, AnnotatedTypeFactory, ExecutableElement)","url":"overriddenMethods(javax.lang.model.util.Elements,org.checkerframework.framework.type.AnnotatedTypeFactory,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"overriddenMethods(Elements, ExecutableElement, Collection<AnnotatedTypeMirror.AnnotatedDeclaredType>)","url":"overriddenMethods(javax.lang.model.util.Elements,javax.lang.model.element.ExecutableElement,java.util.Collection)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"overriddenReturnType"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"overriddenType"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"OverrideChecker(Tree, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror)","url":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"overrider"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"overriderReturnType"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"overriderTree"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"overriderType"},{"p":"org.checkerframework.checker.resourceleak","c":"MustCallInference","l":"OWNING"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"PACKAGE"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"PackageNameNode(IdentifierTree)","url":"%3Cinit%3E(com.sun.source.tree.IdentifierTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"PackageNameNode(MemberSelectTree, PackageNameNode)","url":"%3Cinit%3E(com.sun.source.tree.MemberSelectTree,org.checkerframework.dataflow.cfg.node.PackageNameNode)"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"PARAMETER"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil","l":"PARAMETER_REGEX"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil","l":"parameterIndex(String)","url":"parameterIndex(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory.ParameterizedExecutableType","l":"ParameterizedExecutableType(AnnotatedTypeMirror.AnnotatedExecutableType, List<AnnotatedTypeMirror>)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.List)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"ParameterizedTypeNode(ParameterizedTypeTree)","url":"%3Cinit%3E(com.sun.source.tree.ParameterizedTypeTree)"},{"p":"org.checkerframework.common.reflection.qual","c":"MethodVal","l":"params()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"parent"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"parent"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"parentChecker"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"parentPackage(PackageElement, Elements)","url":"parentPackage(javax.lang.model.element.PackageElement,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil","l":"parse(String, TypeMirror, ThisReference, List<FormalParameter>, TreePath, TreePath, ProcessingEnvironment)","url":"parse(java.lang.String,javax.lang.model.type.TypeMirror,org.checkerframework.dataflow.expression.ThisReference,java.util.List,com.sun.source.util.TreePath,com.sun.source.util.TreePath,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"parseAjavaFile(String, InputStream, CompilationUnitTree, AnnotatedTypeFactory, ProcessingEnvironment, AnnotationFileParser.AnnotationFileAnnotations, AnnotationFileElementTypes)","url":"parseAjavaFile(java.lang.String,java.io.InputStream,com.sun.source.tree.CompilationUnitTree,org.checkerframework.framework.type.AnnotatedTypeFactory,javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.stub.AnnotationFileParser.AnnotationFileAnnotations,org.checkerframework.framework.stub.AnnotationFileElementTypes)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"parseAjavaFiles()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"parseAjavaFileWithTree(String, CompilationUnitTree)","url":"parseAjavaFileWithTree(java.lang.String,com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"parseAnnotationFiles()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizeOptions","l":"parseArgs(String[])","url":"parseArgs(java.lang.String[])"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"parseCompilationUnit(File)","url":"parseCompilationUnit(java.io.File)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"parseCompilationUnit(InputStream)","url":"parseCompilationUnit(java.io.InputStream)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"parseCompilationUnit(String)","url":"parseCompilationUnit(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"parseExpression(String, ParserConfiguration.LanguageLevel)","url":"parseExpression(java.lang.String,com.github.javaparser.ParserConfiguration.LanguageLevel)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"parseExpression(String)","url":"parseExpression(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"parseJavaExpressionString(String, TreePath)","url":"parseJavaExpressionString(java.lang.String,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"parseJdkFileAsStub(String, InputStream, AnnotatedTypeFactory, ProcessingEnvironment, AnnotationFileParser.AnnotationFileAnnotations, AnnotationFileElementTypes)","url":"parseJdkFileAsStub(java.lang.String,java.io.InputStream,org.checkerframework.framework.type.AnnotatedTypeFactory,javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.stub.AnnotationFileParser.AnnotationFileAnnotations,org.checkerframework.framework.stub.AnnotationFileElementTypes)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"parseString"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"parseStubFile(String, InputStream, AnnotatedTypeFactory, ProcessingEnvironment, AnnotationFileParser.AnnotationFileAnnotations, AnnotationFileUtil.AnnotationFileType, AnnotationFileElementTypes)","url":"parseStubFile(java.lang.String,java.io.InputStream,org.checkerframework.framework.type.AnnotatedTypeFactory,javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.stub.AnnotationFileParser.AnnotationFileAnnotations,org.checkerframework.framework.stub.AnnotationFileUtil.AnnotationFileType,org.checkerframework.framework.stub.AnnotationFileElementTypes)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"parseStubFiles()"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"parseStubUnit(InputStream)","url":"parseStubUnit(java.io.InputStream)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeParser","l":"parseTree(String)","url":"parseTree(java.lang.String)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"PARTIALREGEX"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil","l":"partitionQualifiedName(String)","url":"partitionQualifiedName(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"PATH_SEPARATOR_SPLITTER"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"pathTillClass(TreePath)","url":"pathTillClass(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"pathTillMethod(TreePath)","url":"pathTillMethod(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"pathTillOfKind(TreePath, Set<Tree.Kind>)","url":"pathTillOfKind(com.sun.source.util.TreePath,java.util.Set)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"pathTillOfKind(TreePath, Tree.Kind)","url":"pathTillOfKind(com.sun.source.util.TreePath,com.sun.source.tree.Tree.Kind)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"patternNode"},{"p":"org.checkerframework.framework.test","c":"PerDirectorySuite","l":"PerDirectorySuite(Class<?>)","url":"%3Cinit%3E(java.lang.Class)"},{"p":"org.checkerframework.framework.test","c":"PerFileSuite","l":"PerFileSuite(Class<?>)","url":"%3Cinit%3E(java.lang.Class)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizeLauncher","l":"performAnalysis(CFGVisualizeOptions, Analysis<V, S, T>)","url":"performAnalysis(org.checkerframework.dataflow.cfg.visualize.CFGVisualizeOptions,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"performAnalysis(ControlFlowGraph, List<CFAbstractAnalysis.FieldInitialValue<V>>)","url":"performAnalysis(org.checkerframework.dataflow.cfg.ControlFlowGraph,java.util.List)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"performAnalysis(ControlFlowGraph)","url":"performAnalysis(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"performAnalysis(ControlFlowGraph)","url":"performAnalysis(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"performAnalysis(ControlFlowGraph)","url":"performAnalysis(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"performAnalysisBlock(Block)","url":"performAnalysisBlock(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"performAnalysisBlock(Block)","url":"performAnalysisBlock(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"performAnalysisBlock(Block)","url":"performAnalysisBlock(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"performFlowAnalysis(ClassTree)","url":"performFlowAnalysis(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationFieldAccessAnnotatedTypeFactory","l":"performFlowAnalysis(ClassTree)","url":"performFlowAnalysis(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"performFlowAnalysis(ClassTree)","url":"performFlowAnalysis(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"peta"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"PhaseOneResult","l":"PhaseOneResult(UnderlyingAST, IdentityHashMap<Tree, Set<Node>>, IdentityHashMap<Tree, Set<Node>>, IdentityHashMap<UnaryTree, BinaryTree>, List<ExtendedNode>, Map<Label, Integer>, Set<Integer>, List<ReturnNode>, Label, Label, List<ClassTree>, List<LambdaExpressionTree>, Types)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.List,java.util.Map,java.util.Set,java.util.List,org.checkerframework.dataflow.cfg.builder.Label,org.checkerframework.dataflow.cfg.builder.Label,java.util.List,java.util.List,javax.lang.model.util.Types)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"pico"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"plus(Number)","url":"plus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"plus(Number)","url":"plus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"plus(Number)","url":"plus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"plus(Number)","url":"plus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"plus(Number)","url":"plus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"plus(Number)","url":"plus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"plus(Number)","url":"plus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"plus(Range)","url":"plus(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"plusOffset(int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"plusOffset(int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"plusOffset(Node, UpperBoundAnnotatedTypeFactory)","url":"plusOffset(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.checker.index.upperbound.UpperBoundAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"plusOffset(Node, UpperBoundAnnotatedTypeFactory)","url":"plusOffset(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.checker.index.upperbound.UpperBoundAnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"poll()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"pollFirst()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"pollLast()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"poly"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"poly"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"POLY"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"POLY"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"POLY"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"POLY"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"POLY_INITIALIZED"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"POLY_NAME"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"POLY_SIGNED"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"polyInstantiationForQualifierParameter"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"POLYNULL"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"POLYNULL"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"polyQuals"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"POLYREGEX"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"polyScanner"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"POLYUI"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"POS"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"POS"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"positions"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"postAnalyze(ControlFlowGraph)","url":"postAnalyze(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"postAnalyze(ControlFlowGraph)","url":"postAnalyze(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"postAsMemberOf(AnnotatedTypeMirror, AnnotatedTypeMirror, Element)","url":"postAsMemberOf(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"postAsMemberOf(AnnotatedTypeMirror, AnnotatedTypeMirror, Element)","url":"postAsMemberOf(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"postAsMemberOf(AnnotatedTypeMirror, AnnotatedTypeMirror, Element)","url":"postAsMemberOf(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"POSTCONDITION"},{"p":"org.checkerframework.framework.util","c":"Contract.Postcondition","l":"Postcondition(String, AnnotationMirror, AnnotationMirror)","url":"%3Cinit%3E(java.lang.String,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"postDirectSuperTypes(AnnotatedTypeMirror, List<? extends AnnotatedTypeMirror>)","url":"postDirectSuperTypes(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"postDirectSuperTypes(AnnotatedTypeMirror, List<? extends AnnotatedTypeMirror>)","url":"postDirectSuperTypes(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.List)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"postfixLookup"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"postfixNodeLookup"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"postInit()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"postInit()"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.GeneralAnnotatedTypeFactory","l":"postProcessClassTree(ClassTree)","url":"postProcessClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"postProcessClassTree(ClassTree)","url":"postProcessClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.PreceededBy","l":"PreceededBy(Heuristics.Matcher)","url":"%3Cinit%3E(org.checkerframework.framework.util.Heuristics.Matcher)"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"PRECONDITION"},{"p":"org.checkerframework.framework.util","c":"Contract.Precondition","l":"Precondition(String, AnnotationMirror, AnnotationMirror)","url":"%3Cinit%3E(java.lang.String,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"predecessors"},{"p":"org.checkerframework.checker.nullness","c":"SystemGetPropertyHandler","l":"predefinedSystemProperties"},{"p":"org.checkerframework.checker.units.qual","c":"UnitsMultiple","l":"prefix()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"preProcessClassTree(ClassTree)","url":"preProcessClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"preProcessClassTree(ClassTree)","url":"preProcessClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"prevCaptureConversionId"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Equalities","l":"primaries"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Subtypes","l":"primaries"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Supertypes","l":"primaries"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"primaryAnnotations"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_PRIMITIVE"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"PRIMITIVE_TYPE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_WILDCARD"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"primitiveLiteralKinds()"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"primitiveOrBoxedToTypeKind(TypeMirror)","url":"primitiveOrBoxedToTypeKind(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"PrimitiveTypeNode(PrimitiveTypeTree, Types)","url":"%3Cinit%3E(com.sun.source.tree.PrimitiveTypeTree,javax.lang.model.util.Types)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGBuilder","l":"printBlocks(Set<Block>)","url":"printBlocks(java.util.Set)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"printBound(String, AnnotatedTypeMirror, Set<AnnotatedTypeMirror>, StringBuilder)","url":"printBound(java.lang.String,org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.Set,java.lang.StringBuilder)"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker","l":"printClassType(TypeElement, AnnotatedTypeFactory)","url":"printClassType(javax.lang.model.element.TypeElement,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"printOrStoreMessage(Diagnostic.Kind, String, Tree, CompilationUnitTree, StackTraceElement[])","url":"printOrStoreMessage(javax.tools.Diagnostic.Kind,java.lang.String,com.sun.source.tree.Tree,com.sun.source.tree.CompilationUnitTree,java.lang.StackTraceElement[])"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"printOrStoreMessage(Diagnostic.Kind, String, Tree, CompilationUnitTree)","url":"printOrStoreMessage(javax.tools.Diagnostic.Kind,java.lang.String,com.sun.source.tree.Tree,com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"printOrStoreMessage(Diagnostic.Kind, String, Tree, CompilationUnitTree)","url":"printOrStoreMessage(javax.tools.Diagnostic.Kind,java.lang.String,com.sun.source.tree.Tree,com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"printPaths()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"printStats()"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"printTypevarToDotIfMatches(AnnotatedTypeMirror.AnnotatedTypeVariable, List<String>, String)","url":"printTypevarToDotIfMatches(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.util.List,java.lang.String)"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"printTypevarToPngIfMatches(AnnotatedTypeMirror.AnnotatedTypeVariable, List<String>, String)","url":"printTypevarToPngIfMatches(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.util.List,java.lang.String)"},{"p":"org.checkerframework.common.util.debug","c":"SignaturePrinter","l":"printUsage()"},{"p":"org.checkerframework.framework.util","c":"TypeInformationPresenter","l":"process(ClassTree)","url":"process(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"process(CompilationUnitTree, UnderlyingAST)","url":"process(com.sun.source.tree.CompilationUnitTree,org.checkerframework.dataflow.cfg.UnderlyingAST)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"process(ConstantPropagationStore, Node, Node)","url":"process(org.checkerframework.dataflow.constantpropagation.ConstantPropagationStore,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"process(ControlFlowGraph)","url":"process(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree","l":"process(ControlFlowGraph)","url":"process(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseTwo","l":"process(PhaseOneResult)","url":"process(org.checkerframework.dataflow.cfg.builder.PhaseOneResult)"},{"p":"org.checkerframework.common.util.debug","c":"EmptyProcessor","l":"process(Set<? extends TypeElement>, RoundEnvironment)","url":"process(java.util.Set,javax.annotation.processing.RoundEnvironment)"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug","l":"process(Set<? extends TypeElement>, RoundEnvironment)","url":"process(java.util.Set,javax.annotation.processing.RoundEnvironment)"},{"p":"org.checkerframework.common.util.report","c":"DoNothingChecker","l":"process(Set<? extends TypeElement>, RoundEnvironment)","url":"process(java.util.Set,javax.annotation.processing.RoundEnvironment)"},{"p":"org.checkerframework.javacutil","c":"AbstractTypeProcessor","l":"process(Set<? extends TypeElement>, RoundEnvironment)","url":"process(java.util.Set,javax.annotation.processing.RoundEnvironment)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"process(TreePath, UnderlyingAST)","url":"process(com.sun.source.util.TreePath,org.checkerframework.dataflow.cfg.UnderlyingAST)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processAnnotatedType(AnnotatedTypeTree, Node)","url":"processAnnotatedType(com.sun.source.tree.AnnotatedTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processAnnotatedType(AnnotatedTypeTree, Node)","url":"processAnnotatedType(com.sun.source.tree.AnnotatedTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processAnnotatedType(AnnotatedTypeTree, Node)","url":"processAnnotatedType(com.sun.source.tree.AnnotatedTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processAnnotation(AnnotationTree, MarkerAnnotationExpr)","url":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.MarkerAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processAnnotation(AnnotationTree, MarkerAnnotationExpr)","url":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.MarkerAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processAnnotation(AnnotationTree, MarkerAnnotationExpr)","url":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.MarkerAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processAnnotation(AnnotationTree, NormalAnnotationExpr)","url":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.NormalAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processAnnotation(AnnotationTree, NormalAnnotationExpr)","url":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.NormalAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processAnnotation(AnnotationTree, NormalAnnotationExpr)","url":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.NormalAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processAnnotation(AnnotationTree, SingleMemberAnnotationExpr)","url":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.SingleMemberAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processAnnotation(AnnotationTree, SingleMemberAnnotationExpr)","url":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.SingleMemberAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processAnnotation(AnnotationTree, SingleMemberAnnotationExpr)","url":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.SingleMemberAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processArrayAccess(ArrayAccessTree, ArrayAccessExpr)","url":"processArrayAccess(com.sun.source.tree.ArrayAccessTree,com.github.javaparser.ast.expr.ArrayAccessExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processArrayAccess(ArrayAccessTree, ArrayAccessExpr)","url":"processArrayAccess(com.sun.source.tree.ArrayAccessTree,com.github.javaparser.ast.expr.ArrayAccessExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processArrayAccess(ArrayAccessTree, ArrayAccessExpr)","url":"processArrayAccess(com.sun.source.tree.ArrayAccessTree,com.github.javaparser.ast.expr.ArrayAccessExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processArrayType(ArrayTypeTree, ArrayType)","url":"processArrayType(com.sun.source.tree.ArrayTypeTree,com.github.javaparser.ast.type.ArrayType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processArrayType(ArrayTypeTree, ArrayType)","url":"processArrayType(com.sun.source.tree.ArrayTypeTree,com.github.javaparser.ast.type.ArrayType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processArrayType(ArrayTypeTree, ArrayType)","url":"processArrayType(com.sun.source.tree.ArrayTypeTree,com.github.javaparser.ast.type.ArrayType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processAssert(AssertTree, AssertStmt)","url":"processAssert(com.sun.source.tree.AssertTree,com.github.javaparser.ast.stmt.AssertStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processAssert(AssertTree, AssertStmt)","url":"processAssert(com.sun.source.tree.AssertTree,com.github.javaparser.ast.stmt.AssertStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processAssert(AssertTree, AssertStmt)","url":"processAssert(com.sun.source.tree.AssertTree,com.github.javaparser.ast.stmt.AssertStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processAssignment(AssignmentTree, AssignExpr)","url":"processAssignment(com.sun.source.tree.AssignmentTree,com.github.javaparser.ast.expr.AssignExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processAssignment(AssignmentTree, AssignExpr)","url":"processAssignment(com.sun.source.tree.AssignmentTree,com.github.javaparser.ast.expr.AssignExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processAssignment(AssignmentTree, AssignExpr)","url":"processAssignment(com.sun.source.tree.AssignmentTree,com.github.javaparser.ast.expr.AssignExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processBinary(BinaryTree, BinaryExpr)","url":"processBinary(com.sun.source.tree.BinaryTree,com.github.javaparser.ast.expr.BinaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processBinary(BinaryTree, BinaryExpr)","url":"processBinary(com.sun.source.tree.BinaryTree,com.github.javaparser.ast.expr.BinaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processBinary(BinaryTree, BinaryExpr)","url":"processBinary(com.sun.source.tree.BinaryTree,com.github.javaparser.ast.expr.BinaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processBindingPattern(Tree, PatternExpr)","url":"processBindingPattern(com.sun.source.tree.Tree,com.github.javaparser.ast.expr.PatternExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processBindingPattern(Tree, PatternExpr)","url":"processBindingPattern(com.sun.source.tree.Tree,com.github.javaparser.ast.expr.PatternExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processBindingPattern(Tree, PatternExpr)","url":"processBindingPattern(com.sun.source.tree.Tree,com.github.javaparser.ast.expr.PatternExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processBlock(BlockTree, BlockStmt)","url":"processBlock(com.sun.source.tree.BlockTree,com.github.javaparser.ast.stmt.BlockStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processBlock(BlockTree, BlockStmt)","url":"processBlock(com.sun.source.tree.BlockTree,com.github.javaparser.ast.stmt.BlockStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processBlock(BlockTree, BlockStmt)","url":"processBlock(com.sun.source.tree.BlockTree,com.github.javaparser.ast.stmt.BlockStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processBreak(BreakTree, BreakStmt)","url":"processBreak(com.sun.source.tree.BreakTree,com.github.javaparser.ast.stmt.BreakStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processBreak(BreakTree, BreakStmt)","url":"processBreak(com.sun.source.tree.BreakTree,com.github.javaparser.ast.stmt.BreakStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processBreak(BreakTree, BreakStmt)","url":"processBreak(com.sun.source.tree.BreakTree,com.github.javaparser.ast.stmt.BreakStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processCase(CaseTree, SwitchEntry)","url":"processCase(com.sun.source.tree.CaseTree,com.github.javaparser.ast.stmt.SwitchEntry)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processCase(CaseTree, SwitchEntry)","url":"processCase(com.sun.source.tree.CaseTree,com.github.javaparser.ast.stmt.SwitchEntry)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processCase(CaseTree, SwitchEntry)","url":"processCase(com.sun.source.tree.CaseTree,com.github.javaparser.ast.stmt.SwitchEntry)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processCatch(CatchTree, CatchClause)","url":"processCatch(com.sun.source.tree.CatchTree,com.github.javaparser.ast.stmt.CatchClause)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processCatch(CatchTree, CatchClause)","url":"processCatch(com.sun.source.tree.CatchTree,com.github.javaparser.ast.stmt.CatchClause)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processCatch(CatchTree, CatchClause)","url":"processCatch(com.sun.source.tree.CatchTree,com.github.javaparser.ast.stmt.CatchClause)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processClass(ClassTree, AnnotationDeclaration)","url":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.AnnotationDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processClass(ClassTree, AnnotationDeclaration)","url":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.AnnotationDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processClass(ClassTree, AnnotationDeclaration)","url":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.AnnotationDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processClass(ClassTree, ClassOrInterfaceDeclaration)","url":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.ClassOrInterfaceDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processClass(ClassTree, ClassOrInterfaceDeclaration)","url":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.ClassOrInterfaceDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processClass(ClassTree, ClassOrInterfaceDeclaration)","url":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.ClassOrInterfaceDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processClass(ClassTree, EnumDeclaration)","url":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.EnumDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processClass(ClassTree, EnumDeclaration)","url":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.EnumDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processClass(ClassTree, EnumDeclaration)","url":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.EnumDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processClass(ClassTree, RecordDeclaration)","url":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.RecordDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processClass(ClassTree, RecordDeclaration)","url":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.RecordDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processClass(ClassTree, RecordDeclaration)","url":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.RecordDeclaration)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"processClassTree(ClassTree)","url":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationFieldAccessVisitor","l":"processClassTree(ClassTree)","url":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"processClassTree(ClassTree)","url":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"processClassTree(ClassTree)","url":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"processClassTree(ClassTree)","url":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"processClassTree(ClassTree)","url":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.Visitor","l":"processClassTree(ClassTree)","url":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"processClassTree(ClassTree)","url":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"processCommonAssignment(TransferInput<V, S>, Node, Node, S, V)","url":"processCommonAssignment(org.checkerframework.dataflow.analysis.TransferInput,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,S,V)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processCompilationUnit(CompilationUnitTree, CompilationUnit)","url":"processCompilationUnit(com.sun.source.tree.CompilationUnitTree,com.github.javaparser.ast.CompilationUnit)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processCompilationUnit(CompilationUnitTree, CompilationUnit)","url":"processCompilationUnit(com.sun.source.tree.CompilationUnitTree,com.github.javaparser.ast.CompilationUnit)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processCompilationUnit(CompilationUnitTree, CompilationUnit)","url":"processCompilationUnit(com.sun.source.tree.CompilationUnitTree,com.github.javaparser.ast.CompilationUnit)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processCompoundAssignment(CompoundAssignmentTree, AssignExpr)","url":"processCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,com.github.javaparser.ast.expr.AssignExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processCompoundAssignment(CompoundAssignmentTree, AssignExpr)","url":"processCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,com.github.javaparser.ast.expr.AssignExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processCompoundAssignment(CompoundAssignmentTree, AssignExpr)","url":"processCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,com.github.javaparser.ast.expr.AssignExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processConditionalExpression(ConditionalExpressionTree, ConditionalExpr)","url":"processConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,com.github.javaparser.ast.expr.ConditionalExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processConditionalExpression(ConditionalExpressionTree, ConditionalExpr)","url":"processConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,com.github.javaparser.ast.expr.ConditionalExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processConditionalExpression(ConditionalExpressionTree, ConditionalExpr)","url":"processConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,com.github.javaparser.ast.expr.ConditionalExpr)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"processConditionalPostconditions(MethodInvocationNode, ExecutableElement, ExpressionTree, CFStore, CFStore)","url":"processConditionalPostconditions(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,javax.lang.model.element.ExecutableElement,com.sun.source.tree.ExpressionTree,org.checkerframework.framework.flow.CFStore,org.checkerframework.framework.flow.CFStore)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"processConditionalPostconditions(MethodInvocationNode, ExecutableElement, ExpressionTree, S, S)","url":"processConditionalPostconditions(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,javax.lang.model.element.ExecutableElement,com.sun.source.tree.ExpressionTree,S,S)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processContinue(ContinueTree, ContinueStmt)","url":"processContinue(com.sun.source.tree.ContinueTree,com.github.javaparser.ast.stmt.ContinueStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processContinue(ContinueTree, ContinueStmt)","url":"processContinue(com.sun.source.tree.ContinueTree,com.github.javaparser.ast.stmt.ContinueStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processContinue(ContinueTree, ContinueStmt)","url":"processContinue(com.sun.source.tree.ContinueTree,com.github.javaparser.ast.stmt.ContinueStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processDoWhileLoop(DoWhileLoopTree, DoStmt)","url":"processDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,com.github.javaparser.ast.stmt.DoStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processDoWhileLoop(DoWhileLoopTree, DoStmt)","url":"processDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,com.github.javaparser.ast.stmt.DoStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processDoWhileLoop(DoWhileLoopTree, DoStmt)","url":"processDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,com.github.javaparser.ast.stmt.DoStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processEmptyStatement(EmptyStatementTree, EmptyStmt)","url":"processEmptyStatement(com.sun.source.tree.EmptyStatementTree,com.github.javaparser.ast.stmt.EmptyStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processEmptyStatement(EmptyStatementTree, EmptyStmt)","url":"processEmptyStatement(com.sun.source.tree.EmptyStatementTree,com.github.javaparser.ast.stmt.EmptyStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processEmptyStatement(EmptyStatementTree, EmptyStmt)","url":"processEmptyStatement(com.sun.source.tree.EmptyStatementTree,com.github.javaparser.ast.stmt.EmptyStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processEnhancedForLoop(EnhancedForLoopTree, ForEachStmt)","url":"processEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,com.github.javaparser.ast.stmt.ForEachStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processEnhancedForLoop(EnhancedForLoopTree, ForEachStmt)","url":"processEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,com.github.javaparser.ast.stmt.ForEachStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processEnhancedForLoop(EnhancedForLoopTree, ForEachStmt)","url":"processEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,com.github.javaparser.ast.stmt.ForEachStmt)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"processErrorMessageArg(Object)","url":"processErrorMessageArg(java.lang.Object)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"processErrorMessageArg(Object)","url":"processErrorMessageArg(java.lang.Object)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processExports(ExportsTree, ModuleExportsDirective)","url":"processExports(com.sun.source.tree.ExportsTree,com.github.javaparser.ast.modules.ModuleExportsDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processExports(ExportsTree, ModuleExportsDirective)","url":"processExports(com.sun.source.tree.ExportsTree,com.github.javaparser.ast.modules.ModuleExportsDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processExports(ExportsTree, ModuleExportsDirective)","url":"processExports(com.sun.source.tree.ExportsTree,com.github.javaparser.ast.modules.ModuleExportsDirective)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processExpressionStatemen(ExpressionStatementTree, ExpressionStmt)","url":"processExpressionStatemen(com.sun.source.tree.ExpressionStatementTree,com.github.javaparser.ast.stmt.ExpressionStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processExpressionStatemen(ExpressionStatementTree, ExpressionStmt)","url":"processExpressionStatemen(com.sun.source.tree.ExpressionStatementTree,com.github.javaparser.ast.stmt.ExpressionStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processExpressionStatemen(ExpressionStatementTree, ExpressionStmt)","url":"processExpressionStatemen(com.sun.source.tree.ExpressionStatementTree,com.github.javaparser.ast.stmt.ExpressionStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processForLoop(ForLoopTree, ForStmt)","url":"processForLoop(com.sun.source.tree.ForLoopTree,com.github.javaparser.ast.stmt.ForStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processForLoop(ForLoopTree, ForStmt)","url":"processForLoop(com.sun.source.tree.ForLoopTree,com.github.javaparser.ast.stmt.ForStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processForLoop(ForLoopTree, ForStmt)","url":"processForLoop(com.sun.source.tree.ForLoopTree,com.github.javaparser.ast.stmt.ForStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIdentifier(IdentifierTree, ClassOrInterfaceType)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIdentifier(IdentifierTree, ClassOrInterfaceType)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIdentifier(IdentifierTree, ClassOrInterfaceType)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIdentifier(IdentifierTree, Name)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.Name)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIdentifier(IdentifierTree, Name)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.Name)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIdentifier(IdentifierTree, Name)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.Name)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIdentifier(IdentifierTree, NameExpr)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.NameExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIdentifier(IdentifierTree, NameExpr)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.NameExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIdentifier(IdentifierTree, NameExpr)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.NameExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIdentifier(IdentifierTree, SimpleName)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.SimpleName)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIdentifier(IdentifierTree, SimpleName)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.SimpleName)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIdentifier(IdentifierTree, SimpleName)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.SimpleName)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIdentifier(IdentifierTree, SuperExpr)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.SuperExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIdentifier(IdentifierTree, SuperExpr)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.SuperExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIdentifier(IdentifierTree, SuperExpr)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.SuperExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIdentifier(IdentifierTree, ThisExpr)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.ThisExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIdentifier(IdentifierTree, ThisExpr)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.ThisExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIdentifier(IdentifierTree, ThisExpr)","url":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.ThisExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIf(IfTree, IfStmt)","url":"processIf(com.sun.source.tree.IfTree,com.github.javaparser.ast.stmt.IfStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIf(IfTree, IfStmt)","url":"processIf(com.sun.source.tree.IfTree,com.github.javaparser.ast.stmt.IfStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIf(IfTree, IfStmt)","url":"processIf(com.sun.source.tree.IfTree,com.github.javaparser.ast.stmt.IfStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processImport(ImportTree, ImportDeclaration)","url":"processImport(com.sun.source.tree.ImportTree,com.github.javaparser.ast.ImportDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processImport(ImportTree, ImportDeclaration)","url":"processImport(com.sun.source.tree.ImportTree,com.github.javaparser.ast.ImportDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processImport(ImportTree, ImportDeclaration)","url":"processImport(com.sun.source.tree.ImportTree,com.github.javaparser.ast.ImportDeclaration)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"processingEnv"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"processingEnv"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"processingEnv"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"processingEnv"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processInstanceOf(InstanceOfTree, InstanceOfExpr)","url":"processInstanceOf(com.sun.source.tree.InstanceOfTree,com.github.javaparser.ast.expr.InstanceOfExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processInstanceOf(InstanceOfTree, InstanceOfExpr)","url":"processInstanceOf(com.sun.source.tree.InstanceOfTree,com.github.javaparser.ast.expr.InstanceOfExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processInstanceOf(InstanceOfTree, InstanceOfExpr)","url":"processInstanceOf(com.sun.source.tree.InstanceOfTree,com.github.javaparser.ast.expr.InstanceOfExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIntersectionType(IntersectionTypeTree, IntersectionType)","url":"processIntersectionType(com.sun.source.tree.IntersectionTypeTree,com.github.javaparser.ast.type.IntersectionType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIntersectionType(IntersectionTypeTree, IntersectionType)","url":"processIntersectionType(com.sun.source.tree.IntersectionTypeTree,com.github.javaparser.ast.type.IntersectionType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIntersectionType(IntersectionTypeTree, IntersectionType)","url":"processIntersectionType(com.sun.source.tree.IntersectionTypeTree,com.github.javaparser.ast.type.IntersectionType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processLabeledStatement(LabeledStatementTree, LabeledStmt)","url":"processLabeledStatement(com.sun.source.tree.LabeledStatementTree,com.github.javaparser.ast.stmt.LabeledStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processLabeledStatement(LabeledStatementTree, LabeledStmt)","url":"processLabeledStatement(com.sun.source.tree.LabeledStatementTree,com.github.javaparser.ast.stmt.LabeledStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processLabeledStatement(LabeledStatementTree, LabeledStmt)","url":"processLabeledStatement(com.sun.source.tree.LabeledStatementTree,com.github.javaparser.ast.stmt.LabeledStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processLambdaExpression(LambdaExpressionTree, LambdaExpr)","url":"processLambdaExpression(com.sun.source.tree.LambdaExpressionTree,com.github.javaparser.ast.expr.LambdaExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processLambdaExpression(LambdaExpressionTree, LambdaExpr)","url":"processLambdaExpression(com.sun.source.tree.LambdaExpressionTree,com.github.javaparser.ast.expr.LambdaExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processLambdaExpression(LambdaExpressionTree, LambdaExpr)","url":"processLambdaExpression(com.sun.source.tree.LambdaExpressionTree,com.github.javaparser.ast.expr.LambdaExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processLiteral(LiteralTree, BinaryExpr)","url":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.BinaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processLiteral(LiteralTree, BinaryExpr)","url":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.BinaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processLiteral(LiteralTree, BinaryExpr)","url":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.BinaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processLiteral(LiteralTree, LiteralExpr)","url":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.LiteralExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processLiteral(LiteralTree, LiteralExpr)","url":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.LiteralExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processLiteral(LiteralTree, LiteralExpr)","url":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.LiteralExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processLiteral(LiteralTree, UnaryExpr)","url":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.UnaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processLiteral(LiteralTree, UnaryExpr)","url":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.UnaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processLiteral(LiteralTree, UnaryExpr)","url":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.UnaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMemberReference(MemberReferenceTree, MethodReferenceExpr)","url":"processMemberReference(com.sun.source.tree.MemberReferenceTree,com.github.javaparser.ast.expr.MethodReferenceExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMemberReference(MemberReferenceTree, MethodReferenceExpr)","url":"processMemberReference(com.sun.source.tree.MemberReferenceTree,com.github.javaparser.ast.expr.MethodReferenceExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMemberReference(MemberReferenceTree, MethodReferenceExpr)","url":"processMemberReference(com.sun.source.tree.MemberReferenceTree,com.github.javaparser.ast.expr.MethodReferenceExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMemberSelect(MemberSelectTree, ClassExpr)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.ClassExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMemberSelect(MemberSelectTree, ClassExpr)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.ClassExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMemberSelect(MemberSelectTree, ClassExpr)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.ClassExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMemberSelect(MemberSelectTree, ClassOrInterfaceType)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMemberSelect(MemberSelectTree, ClassOrInterfaceType)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMemberSelect(MemberSelectTree, ClassOrInterfaceType)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMemberSelect(MemberSelectTree, FieldAccessExpr)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.FieldAccessExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMemberSelect(MemberSelectTree, FieldAccessExpr)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.FieldAccessExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMemberSelect(MemberSelectTree, FieldAccessExpr)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.FieldAccessExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMemberSelect(MemberSelectTree, Name)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.Name)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMemberSelect(MemberSelectTree, Name)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.Name)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMemberSelect(MemberSelectTree, Name)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.Name)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMemberSelect(MemberSelectTree, SuperExpr)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.SuperExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMemberSelect(MemberSelectTree, SuperExpr)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.SuperExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMemberSelect(MemberSelectTree, SuperExpr)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.SuperExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMemberSelect(MemberSelectTree, ThisExpr)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.ThisExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMemberSelect(MemberSelectTree, ThisExpr)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.ThisExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMemberSelect(MemberSelectTree, ThisExpr)","url":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.ThisExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMethod(MethodTree, AnnotationMemberDeclaration)","url":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.AnnotationMemberDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMethod(MethodTree, AnnotationMemberDeclaration)","url":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.AnnotationMemberDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMethod(MethodTree, AnnotationMemberDeclaration)","url":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.AnnotationMemberDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMethod(MethodTree, CompactConstructorDeclaration)","url":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.CompactConstructorDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMethod(MethodTree, CompactConstructorDeclaration)","url":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.CompactConstructorDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMethod(MethodTree, CompactConstructorDeclaration)","url":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.CompactConstructorDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMethod(MethodTree, ConstructorDeclaration)","url":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.ConstructorDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMethod(MethodTree, ConstructorDeclaration)","url":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.ConstructorDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMethod(MethodTree, ConstructorDeclaration)","url":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.ConstructorDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMethod(MethodTree, MethodDeclaration)","url":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.MethodDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMethod(MethodTree, MethodDeclaration)","url":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.MethodDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMethod(MethodTree, MethodDeclaration)","url":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.MethodDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMethodInvocation(MethodInvocationTree, ExplicitConstructorInvocationStmt)","url":"processMethodInvocation(com.sun.source.tree.MethodInvocationTree,com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMethodInvocation(MethodInvocationTree, ExplicitConstructorInvocationStmt)","url":"processMethodInvocation(com.sun.source.tree.MethodInvocationTree,com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMethodInvocation(MethodInvocationTree, ExplicitConstructorInvocationStmt)","url":"processMethodInvocation(com.sun.source.tree.MethodInvocationTree,com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMethodInvocation(MethodInvocationTree, MethodCallExpr)","url":"processMethodInvocation(com.sun.source.tree.MethodInvocationTree,com.github.javaparser.ast.expr.MethodCallExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMethodInvocation(MethodInvocationTree, MethodCallExpr)","url":"processMethodInvocation(com.sun.source.tree.MethodInvocationTree,com.github.javaparser.ast.expr.MethodCallExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMethodInvocation(MethodInvocationTree, MethodCallExpr)","url":"processMethodInvocation(com.sun.source.tree.MethodInvocationTree,com.github.javaparser.ast.expr.MethodCallExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processModule(ModuleTree, ModuleDeclaration)","url":"processModule(com.sun.source.tree.ModuleTree,com.github.javaparser.ast.modules.ModuleDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processModule(ModuleTree, ModuleDeclaration)","url":"processModule(com.sun.source.tree.ModuleTree,com.github.javaparser.ast.modules.ModuleDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processModule(ModuleTree, ModuleDeclaration)","url":"processModule(com.sun.source.tree.ModuleTree,com.github.javaparser.ast.modules.ModuleDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processNewClass(NewClassTree, ObjectCreationExpr)","url":"processNewClass(com.sun.source.tree.NewClassTree,com.github.javaparser.ast.expr.ObjectCreationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processNewClass(NewClassTree, ObjectCreationExpr)","url":"processNewClass(com.sun.source.tree.NewClassTree,com.github.javaparser.ast.expr.ObjectCreationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processNewClass(NewClassTree, ObjectCreationExpr)","url":"processNewClass(com.sun.source.tree.NewClassTree,com.github.javaparser.ast.expr.ObjectCreationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processOpens(OpensTree, ModuleOpensDirective)","url":"processOpens(com.sun.source.tree.OpensTree,com.github.javaparser.ast.modules.ModuleOpensDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processOpens(OpensTree, ModuleOpensDirective)","url":"processOpens(com.sun.source.tree.OpensTree,com.github.javaparser.ast.modules.ModuleOpensDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processOpens(OpensTree, ModuleOpensDirective)","url":"processOpens(com.sun.source.tree.OpensTree,com.github.javaparser.ast.modules.ModuleOpensDirective)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processOther(Tree, Node)","url":"processOther(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processOther(Tree, Node)","url":"processOther(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processOther(Tree, Node)","url":"processOther(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processPackage(PackageTree, PackageDeclaration)","url":"processPackage(com.sun.source.tree.PackageTree,com.github.javaparser.ast.PackageDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processPackage(PackageTree, PackageDeclaration)","url":"processPackage(com.sun.source.tree.PackageTree,com.github.javaparser.ast.PackageDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processPackage(PackageTree, PackageDeclaration)","url":"processPackage(com.sun.source.tree.PackageTree,com.github.javaparser.ast.PackageDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processParameterizedType(ParameterizedTypeTree, ClassOrInterfaceType)","url":"processParameterizedType(com.sun.source.tree.ParameterizedTypeTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processParameterizedType(ParameterizedTypeTree, ClassOrInterfaceType)","url":"processParameterizedType(com.sun.source.tree.ParameterizedTypeTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processParameterizedType(ParameterizedTypeTree, ClassOrInterfaceType)","url":"processParameterizedType(com.sun.source.tree.ParameterizedTypeTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processParenthesized(ParenthesizedTree, EnclosedExpr)","url":"processParenthesized(com.sun.source.tree.ParenthesizedTree,com.github.javaparser.ast.expr.EnclosedExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processParenthesized(ParenthesizedTree, EnclosedExpr)","url":"processParenthesized(com.sun.source.tree.ParenthesizedTree,com.github.javaparser.ast.expr.EnclosedExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processParenthesized(ParenthesizedTree, EnclosedExpr)","url":"processParenthesized(com.sun.source.tree.ParenthesizedTree,com.github.javaparser.ast.expr.EnclosedExpr)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingTransfer","l":"processPostconditions(Node, CFStore, ExecutableElement, ExpressionTree)","url":"processPostconditions(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.framework.flow.CFStore,javax.lang.model.element.ExecutableElement,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"processPostconditions(Node, S, ExecutableElement, ExpressionTree)","url":"processPostconditions(org.checkerframework.dataflow.cfg.node.Node,S,javax.lang.model.element.ExecutableElement,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processPrimitiveType(PrimitiveTypeTree, PrimitiveType)","url":"processPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,com.github.javaparser.ast.type.PrimitiveType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processPrimitiveType(PrimitiveTypeTree, PrimitiveType)","url":"processPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,com.github.javaparser.ast.type.PrimitiveType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processPrimitiveType(PrimitiveTypeTree, PrimitiveType)","url":"processPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,com.github.javaparser.ast.type.PrimitiveType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processPrimitiveType(PrimitiveTypeTree, VoidType)","url":"processPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,com.github.javaparser.ast.type.VoidType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processPrimitiveType(PrimitiveTypeTree, VoidType)","url":"processPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,com.github.javaparser.ast.type.VoidType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processPrimitiveType(PrimitiveTypeTree, VoidType)","url":"processPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,com.github.javaparser.ast.type.VoidType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processProvides(ProvidesTree, ModuleProvidesDirective)","url":"processProvides(com.sun.source.tree.ProvidesTree,com.github.javaparser.ast.modules.ModuleProvidesDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processProvides(ProvidesTree, ModuleProvidesDirective)","url":"processProvides(com.sun.source.tree.ProvidesTree,com.github.javaparser.ast.modules.ModuleProvidesDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processProvides(ProvidesTree, ModuleProvidesDirective)","url":"processProvides(com.sun.source.tree.ProvidesTree,com.github.javaparser.ast.modules.ModuleProvidesDirective)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processRequires(RequiresTree, ModuleRequiresDirective)","url":"processRequires(com.sun.source.tree.RequiresTree,com.github.javaparser.ast.modules.ModuleRequiresDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processRequires(RequiresTree, ModuleRequiresDirective)","url":"processRequires(com.sun.source.tree.RequiresTree,com.github.javaparser.ast.modules.ModuleRequiresDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processRequires(RequiresTree, ModuleRequiresDirective)","url":"processRequires(com.sun.source.tree.RequiresTree,com.github.javaparser.ast.modules.ModuleRequiresDirective)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processReturn(ReturnTree, ReturnStmt)","url":"processReturn(com.sun.source.tree.ReturnTree,com.github.javaparser.ast.stmt.ReturnStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processReturn(ReturnTree, ReturnStmt)","url":"processReturn(com.sun.source.tree.ReturnTree,com.github.javaparser.ast.stmt.ReturnStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processReturn(ReturnTree, ReturnStmt)","url":"processReturn(com.sun.source.tree.ReturnTree,com.github.javaparser.ast.stmt.ReturnStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processSwitch(SwitchTree, SwitchStmt)","url":"processSwitch(com.sun.source.tree.SwitchTree,com.github.javaparser.ast.stmt.SwitchStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processSwitch(SwitchTree, SwitchStmt)","url":"processSwitch(com.sun.source.tree.SwitchTree,com.github.javaparser.ast.stmt.SwitchStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processSwitch(SwitchTree, SwitchStmt)","url":"processSwitch(com.sun.source.tree.SwitchTree,com.github.javaparser.ast.stmt.SwitchStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processSwitchExpression(Tree, SwitchExpr)","url":"processSwitchExpression(com.sun.source.tree.Tree,com.github.javaparser.ast.expr.SwitchExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processSwitchExpression(Tree, SwitchExpr)","url":"processSwitchExpression(com.sun.source.tree.Tree,com.github.javaparser.ast.expr.SwitchExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processSwitchExpression(Tree, SwitchExpr)","url":"processSwitchExpression(com.sun.source.tree.Tree,com.github.javaparser.ast.expr.SwitchExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processSynchronized(SynchronizedTree, SynchronizedStmt)","url":"processSynchronized(com.sun.source.tree.SynchronizedTree,com.github.javaparser.ast.stmt.SynchronizedStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processSynchronized(SynchronizedTree, SynchronizedStmt)","url":"processSynchronized(com.sun.source.tree.SynchronizedTree,com.github.javaparser.ast.stmt.SynchronizedStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processSynchronized(SynchronizedTree, SynchronizedStmt)","url":"processSynchronized(com.sun.source.tree.SynchronizedTree,com.github.javaparser.ast.stmt.SynchronizedStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processThrow(ThrowTree, ThrowStmt)","url":"processThrow(com.sun.source.tree.ThrowTree,com.github.javaparser.ast.stmt.ThrowStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processThrow(ThrowTree, ThrowStmt)","url":"processThrow(com.sun.source.tree.ThrowTree,com.github.javaparser.ast.stmt.ThrowStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processThrow(ThrowTree, ThrowStmt)","url":"processThrow(com.sun.source.tree.ThrowTree,com.github.javaparser.ast.stmt.ThrowStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processTry(TryTree, TryStmt)","url":"processTry(com.sun.source.tree.TryTree,com.github.javaparser.ast.stmt.TryStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processTry(TryTree, TryStmt)","url":"processTry(com.sun.source.tree.TryTree,com.github.javaparser.ast.stmt.TryStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processTry(TryTree, TryStmt)","url":"processTry(com.sun.source.tree.TryTree,com.github.javaparser.ast.stmt.TryStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processTypeCast(TypeCastTree, CastExpr)","url":"processTypeCast(com.sun.source.tree.TypeCastTree,com.github.javaparser.ast.expr.CastExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processTypeCast(TypeCastTree, CastExpr)","url":"processTypeCast(com.sun.source.tree.TypeCastTree,com.github.javaparser.ast.expr.CastExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processTypeCast(TypeCastTree, CastExpr)","url":"processTypeCast(com.sun.source.tree.TypeCastTree,com.github.javaparser.ast.expr.CastExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processTypeParameter(TypeParameterTree, TypeParameter)","url":"processTypeParameter(com.sun.source.tree.TypeParameterTree,com.github.javaparser.ast.type.TypeParameter)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processTypeParameter(TypeParameterTree, TypeParameter)","url":"processTypeParameter(com.sun.source.tree.TypeParameterTree,com.github.javaparser.ast.type.TypeParameter)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processTypeParameter(TypeParameterTree, TypeParameter)","url":"processTypeParameter(com.sun.source.tree.TypeParameterTree,com.github.javaparser.ast.type.TypeParameter)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processUnary(UnaryTree, UnaryExpr)","url":"processUnary(com.sun.source.tree.UnaryTree,com.github.javaparser.ast.expr.UnaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processUnary(UnaryTree, UnaryExpr)","url":"processUnary(com.sun.source.tree.UnaryTree,com.github.javaparser.ast.expr.UnaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processUnary(UnaryTree, UnaryExpr)","url":"processUnary(com.sun.source.tree.UnaryTree,com.github.javaparser.ast.expr.UnaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processUnionType(UnionTypeTree, UnionType)","url":"processUnionType(com.sun.source.tree.UnionTypeTree,com.github.javaparser.ast.type.UnionType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processUnionType(UnionTypeTree, UnionType)","url":"processUnionType(com.sun.source.tree.UnionTypeTree,com.github.javaparser.ast.type.UnionType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processUnionType(UnionTypeTree, UnionType)","url":"processUnionType(com.sun.source.tree.UnionTypeTree,com.github.javaparser.ast.type.UnionType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processUses(UsesTree, ModuleUsesDirective)","url":"processUses(com.sun.source.tree.UsesTree,com.github.javaparser.ast.modules.ModuleUsesDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processUses(UsesTree, ModuleUsesDirective)","url":"processUses(com.sun.source.tree.UsesTree,com.github.javaparser.ast.modules.ModuleUsesDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processUses(UsesTree, ModuleUsesDirective)","url":"processUses(com.sun.source.tree.UsesTree,com.github.javaparser.ast.modules.ModuleUsesDirective)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processVariable(VariableTree, EnumConstantDeclaration)","url":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.EnumConstantDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processVariable(VariableTree, EnumConstantDeclaration)","url":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.EnumConstantDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processVariable(VariableTree, EnumConstantDeclaration)","url":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.EnumConstantDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processVariable(VariableTree, Parameter)","url":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.Parameter)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processVariable(VariableTree, Parameter)","url":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.Parameter)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processVariable(VariableTree, Parameter)","url":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.Parameter)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processVariable(VariableTree, ReceiverParameter)","url":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.ReceiverParameter)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processVariable(VariableTree, ReceiverParameter)","url":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.ReceiverParameter)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processVariable(VariableTree, ReceiverParameter)","url":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.ReceiverParameter)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processVariable(VariableTree, VariableDeclarator)","url":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.VariableDeclarator)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processVariable(VariableTree, VariableDeclarator)","url":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.VariableDeclarator)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processVariable(VariableTree, VariableDeclarator)","url":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.VariableDeclarator)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processWhileLoop(WhileLoopTree, WhileStmt)","url":"processWhileLoop(com.sun.source.tree.WhileLoopTree,com.github.javaparser.ast.stmt.WhileStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processWhileLoop(WhileLoopTree, WhileStmt)","url":"processWhileLoop(com.sun.source.tree.WhileLoopTree,com.github.javaparser.ast.stmt.WhileStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processWhileLoop(WhileLoopTree, WhileStmt)","url":"processWhileLoop(com.sun.source.tree.WhileLoopTree,com.github.javaparser.ast.stmt.WhileStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processWildcard(WildcardTree, WildcardType)","url":"processWildcard(com.sun.source.tree.WildcardTree,com.github.javaparser.ast.type.WildcardType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processWildcard(WildcardTree, WildcardType)","url":"processWildcard(com.sun.source.tree.WildcardTree,com.github.javaparser.ast.type.WildcardType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processWildcard(WildcardTree, WildcardType)","url":"processWildcard(com.sun.source.tree.WildcardTree,com.github.javaparser.ast.type.WildcardType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processYield(Tree, YieldStmt)","url":"processYield(com.sun.source.tree.Tree,com.github.javaparser.ast.stmt.YieldStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processYield(Tree, YieldStmt)","url":"processYield(com.sun.source.tree.Tree,com.github.javaparser.ast.stmt.YieldStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processYield(Tree, YieldStmt)","url":"processYield(com.sun.source.tree.Tree,com.github.javaparser.ast.stmt.YieldStmt)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator","l":"propagate(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, KeyForPropagator.PropagationDirection, AnnotatedTypeFactory)","url":"propagate(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.checker.nullness.KeyForPropagator.PropagationDirection,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator","l":"propagateNewClassTree(NewClassTree, AnnotatedTypeMirror, KeyForAnnotatedTypeFactory)","url":"propagateNewClassTree(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.checker.nullness.KeyForAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SubtypesSolver","l":"propagatePreviousGlbs(TargetConstraints.Subtypes, InferenceResult, Map<AnnotatedTypeMirror, AnnotationMirrorSet>)","url":"propagatePreviousGlbs(org.checkerframework.framework.util.typeinference.solver.TargetConstraints.Subtypes,org.checkerframework.framework.util.typeinference.solver.InferenceResult,java.util.Map)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"propagatePreviousLubs(TargetConstraints, SupertypesSolver.Lubs, Map<AnnotatedTypeMirror, AnnotationMirrorSet>)","url":"propagatePreviousLubs(org.checkerframework.framework.util.typeinference.solver.TargetConstraints,org.checkerframework.framework.util.typeinference.solver.SupertypesSolver.Lubs,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"propagateStoresTo(Block, Node, TransferInput<V, S>, Store.FlowRule, boolean)","url":"propagateStoresTo(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput,org.checkerframework.dataflow.analysis.Store.FlowRule,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"propagateStoresTo(Block, Node, TransferInput<V, S>, Store.FlowRule, boolean)","url":"propagateStoresTo(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput,org.checkerframework.dataflow.analysis.Store.FlowRule,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"propagateStoresTo(Block, Node, TransferInput<V, S>, Store.FlowRule, boolean)","url":"propagateStoresTo(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput,org.checkerframework.dataflow.analysis.Store.FlowRule,boolean)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"PropagationTreeAnnotator","l":"PropagationTreeAnnotator(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"PropagationTypeAnnotator","l":"PropagationTypeAnnotator(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory","l":"PropertyKeyAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyChecker","l":"PropertyKeyChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"PURE"},{"p":"org.checkerframework.framework.util","c":"PurityAnnotatedTypeFactory","l":"PurityAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker","l":"PurityChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util","c":"PurityChecker","l":"PurityChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"PurityCheckerHelper(AnnotationProvider, boolean, boolean)","url":"%3Cinit%3E(org.checkerframework.javacutil.AnnotationProvider,boolean,boolean)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"PurityResult()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"PurityUtils()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityVisitHistory","l":"put(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror, boolean)","url":"put(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"SubtypeVisitHistory","l":"put(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror, boolean)","url":"put(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"put(AnnotationMirror, V)","url":"put(javax.lang.model.element.AnnotationMirror,V)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"putAll(Map<? extends AnnotationMirror, ? extends V>)","url":"putAll(java.util.Map)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"putAllNew(Map<K, V>, Map<K, V>)","url":"putAllNew(java.util.Map,java.util.Map)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"putBusyExpr(BusyExprValue)","url":"putBusyExpr(org.checkerframework.dataflow.busyexpr.BusyExprValue)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"putDef(ReachingDefinitionNode)","url":"putDef(org.checkerframework.dataflow.reachingdef.ReachingDefinitionNode)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"putIfAbsent(Map<K, V>, K, V)","url":"putIfAbsent(java.util.Map,K,V)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"putLiveVar(LiveVarNode)","url":"putLiveVar(org.checkerframework.dataflow.livevariable.LiveVarNode)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsigned(ByteBuffer, @org.checkerframework.checker.signedness.qual.Unsigned byte)","url":"putUnsigned(java.nio.ByteBuffer,@org.checkerframework.checker.signedness.qual.Unsignedbyte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsigned(ByteBuffer, int, @org.checkerframework.checker.signedness.qual.Unsigned byte)","url":"putUnsigned(java.nio.ByteBuffer,int,@org.checkerframework.checker.signedness.qual.Unsignedbyte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsigned(IntBuffer, @org.checkerframework.checker.signedness.qual.Unsigned int)","url":"putUnsigned(java.nio.IntBuffer,@org.checkerframework.checker.signedness.qual.Unsignedint)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsigned(IntBuffer, @org.checkerframework.checker.signedness.qual.Unsigned int[], int, int)","url":"putUnsigned(java.nio.IntBuffer,@org.checkerframework.checker.signedness.qual.Unsignedint[],int,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsigned(IntBuffer, @org.checkerframework.checker.signedness.qual.Unsigned int[])","url":"putUnsigned(java.nio.IntBuffer,@org.checkerframework.checker.signedness.qual.Unsignedint[])"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsigned(IntBuffer, int, @org.checkerframework.checker.signedness.qual.Unsigned int)","url":"putUnsigned(java.nio.IntBuffer,int,@org.checkerframework.checker.signedness.qual.Unsignedint)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsignedInt(ByteBuffer, @org.checkerframework.checker.signedness.qual.Unsigned int)","url":"putUnsignedInt(java.nio.ByteBuffer,@org.checkerframework.checker.signedness.qual.Unsignedint)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsignedInt(ByteBuffer, int, @org.checkerframework.checker.signedness.qual.Unsigned int)","url":"putUnsignedInt(java.nio.ByteBuffer,int,@org.checkerframework.checker.signedness.qual.Unsignedint)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsignedLong(ByteBuffer, int, @org.checkerframework.checker.signedness.qual.Unsigned long)","url":"putUnsignedLong(java.nio.ByteBuffer,int,@org.checkerframework.checker.signedness.qual.Unsignedlong)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsignedShort(ByteBuffer, @org.checkerframework.checker.signedness.qual.Unsigned short)","url":"putUnsignedShort(java.nio.ByteBuffer,@org.checkerframework.checker.signedness.qual.Unsignedshort)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsignedShort(ByteBuffer, int, @org.checkerframework.checker.signedness.qual.Unsigned short)","url":"putUnsignedShort(java.nio.ByteBuffer,int,@org.checkerframework.checker.signedness.qual.Unsignedshort)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"qualAllowedLocations"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"qualHierarchy"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"qualHierarchy"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"qualHierarchy"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"qualHierarchy"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"qualHierarchy"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"qualHierarchy"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"qualHierarchy"},{"p":"org.checkerframework.framework.type.treeannotator","c":"LiteralTreeAnnotator","l":"qualHierarchy"},{"p":"org.checkerframework.framework.qual","c":"ConditionalPostconditionAnnotation","l":"qualifier()"},{"p":"org.checkerframework.framework.qual","c":"EnsuresQualifier","l":"qualifier()"},{"p":"org.checkerframework.framework.qual","c":"EnsuresQualifierIf","l":"qualifier()"},{"p":"org.checkerframework.framework.qual","c":"FieldInvariant","l":"qualifier()"},{"p":"org.checkerframework.framework.qual","c":"PostconditionAnnotation","l":"qualifier()"},{"p":"org.checkerframework.framework.qual","c":"PreconditionAnnotation","l":"qualifier()"},{"p":"org.checkerframework.framework.qual","c":"RequiresQualifier","l":"qualifier()"},{"p":"org.checkerframework.framework.util","c":"ContractsFromMethod","l":"qualifierArgumentValueElement"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"QualifierDefaults(Elements, AnnotatedTypeFactory)","url":"%3Cinit%3E(javax.lang.model.util.Elements,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"QualifierHierarchy(GenericAnnotatedTypeFactory<?, ?, ?, ?>)","url":"%3Cinit%3E(org.checkerframework.framework.type.GenericAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"qualifierKindHierarchy"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"qualifierKindHierarchy"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"qualifierKinds"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"qualifiers"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"qualifierUpperBounds"},{"p":"org.checkerframework.framework.type","c":"QualifierUpperBounds","l":"QualifierUpperBounds(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.units.qual","c":"UnitsMultiple","l":"quantity()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"queue"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"rad"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionNode","l":"ReachingDefinitionNode(AssignmentNode)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.AssignmentNode)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"ReachingDefinitionStore()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"ReachingDefinitionStore(Set<ReachingDefinitionNode>)","url":"%3Cinit%3E(java.util.Set)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionTransfer","l":"ReachingDefinitionTransfer()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"readCodePoint(InputStream)","url":"readCodePoint(java.io.InputStream)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"JavaDiagnosticReader","l":"readDiagnosticFiles(Iterable<? extends File>)","url":"readDiagnosticFiles(java.lang.Iterable)"},{"p":"org.checkerframework.framework.test","c":"TypecheckExecutor","l":"readDiagnostics(TestConfiguration, CompilationResult)","url":"readDiagnostics(org.checkerframework.framework.test.TestConfiguration,org.checkerframework.framework.test.CompilationResult)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"readFromStore(Map<Block, S>, Block)","url":"readFromStore(java.util.Map,org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"readFullyUnsigned(RandomAccessFile, @org.checkerframework.checker.signedness.qual.Unsigned byte[])","url":"readFullyUnsigned(java.io.RandomAccessFile,@org.checkerframework.checker.signedness.qual.Unsignedbyte[])"},{"p":"org.checkerframework.framework.test.diagnostics","c":"JavaDiagnosticReader","l":"readJavaSourceFiles(Iterable<? extends Object>)","url":"readJavaSourceFiles(java.lang.Iterable)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"readUnsigned(RandomAccessFile, @org.checkerframework.checker.signedness.qual.Unsigned byte[], int, int)","url":"readUnsigned(java.io.RandomAccessFile,@org.checkerframework.checker.signedness.qual.Unsignedbyte[],int,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"readUnsignedChar(RandomAccessFile)","url":"readUnsignedChar(java.io.RandomAccessFile)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"readUnsignedInt(RandomAccessFile)","url":"readUnsignedInt(java.io.RandomAccessFile)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"readUnsignedLong(RandomAccessFile)","url":"readUnsignedLong(java.io.RandomAccessFile)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"receiver"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"receiver"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"receiver"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"receiver"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"receiver"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"RECEIVER"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"RECEIVER_PARAM_INDEX"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordComponentStub","l":"RecordComponentStub(AnnotatedTypeMirror, AnnotationMirrorSet)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.AnnotationFileAnnotations","l":"records"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordStub","l":"RecordStub(Map<String, AnnotationFileParser.RecordComponentStub>)","url":"%3Cinit%3E(java.util.Map)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"recreateTransferResult(V, TransferResult<V, S>)","url":"recreateTransferResult(V,org.checkerframework.dataflow.analysis.TransferResult)"},{"p":"org.checkerframework.framework.util","c":"ExecUtil.Redirection","l":"redirect(InputStream)","url":"redirect(java.io.InputStream)"},{"p":"org.checkerframework.framework.util","c":"ExecUtil.Redirection","l":"Redirection(OutputStream, int)","url":"%3Cinit%3E(java.io.OutputStream,int)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"A2FReducer","l":"reduce(AFConstraint, Set<AFConstraint>)","url":"reduce(org.checkerframework.framework.util.typeinference.constraint.AFConstraint,java.util.Set)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFReducer","l":"reduce(AFConstraint, Set<AFConstraint>)","url":"reduce(org.checkerframework.framework.util.typeinference.constraint.AFConstraint,java.util.Set)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"F2AReducer","l":"reduce(AFConstraint, Set<AFConstraint>)","url":"reduce(org.checkerframework.framework.util.typeinference.constraint.AFConstraint,java.util.Set)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"FIsAReducer","l":"reduce(AFConstraint, Set<AFConstraint>)","url":"reduce(org.checkerframework.framework.util.typeinference.constraint.AFConstraint,java.util.Set)"},{"p":"org.checkerframework.framework.type","c":"EqualityAtmComparer","l":"reduce(Boolean, Boolean)","url":"reduce(java.lang.Boolean,java.lang.Boolean)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"reduce(R, R)","url":"reduce(R,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner.Reduce","l":"reduce(R, R)","url":"reduce(R,R)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner.YieldVisitor","l":"reduce(R, R)","url":"reduce(R,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"reduce(RETURN_TYPE, RETURN_TYPE)","url":"reduce(RETURN_TYPE,RETURN_TYPE)"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"reduceAfConstraints(AnnotatedTypeFactory, Set<AFConstraint>, Queue<AFConstraint>, Set<TypeVariable>)","url":"reduceAfConstraints(org.checkerframework.framework.type.AnnotatedTypeFactory,java.util.Set,java.util.Queue,java.util.Set)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"reduceFunction"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"refineEqualTo(Range)","url":"refineEqualTo(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"refineGreaterThan(Range)","url":"refineGreaterThan(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"refineGreaterThanEq(Range)","url":"refineGreaterThanEq(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"refineGT(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGT(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanTransfer","l":"refineGT(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGT(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"refineGT(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGT(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexTransfer","l":"refineGT(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGT(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"refineGT(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGT(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"refineGTE(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGTE(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanTransfer","l":"refineGTE(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGTE(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"refineGTE(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGTE(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexTransfer","l":"refineGTE(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGTE(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"refineGTE(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","url":"refineGTE(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"refineLessThan(Range)","url":"refineLessThan(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"refineLessThanEq(Range)","url":"refineLessThanEq(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"refineNotEqualTo(Range)","url":"refineNotEqualTo(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"refineToNonNull(TransferResult<NullnessNoInitValue, NullnessNoInitStore>)","url":"refineToNonNull(org.checkerframework.dataflow.analysis.TransferResult)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"reflectionResolver"},{"p":"org.checkerframework.common.value","c":"ReflectiveEvaluator","l":"ReflectiveEvaluator(BaseTypeChecker, ValueAnnotatedTypeFactory, boolean)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.common.value.ValueAnnotatedTypeFactory,boolean)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"refType"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"REGEX"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"RegexAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"REGEXBOTTOM"},{"p":"org.checkerframework.checker.regex","c":"RegexChecker","l":"RegexChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"regexError(String, int)","url":"regexError(java.lang.String,int)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"regexError(String)","url":"regexError(java.lang.String)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"regexException(String, int)","url":"regexException(java.lang.String,int)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"regexException(String)","url":"regexException(java.lang.String)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"RegexTransfer(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"regexValueElement"},{"p":"org.checkerframework.checker.regex","c":"RegexVisitor","l":"RegexVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block.BlockType","l":"REGULAR_BLOCK"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"RegularBlockImpl()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"regularExitBlock"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"regularExitStores"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"RegularTransferResult(V, S, boolean)","url":"%3Cinit%3E(V,S,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"RegularTransferResult(V, S, Map<TypeMirror, S>, boolean)","url":"%3Cinit%3E(V,S,java.util.Map,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"RegularTransferResult(V, S, Map<TypeMirror, S>)","url":"%3Cinit%3E(V,S,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"RegularTransferResult(V, S)","url":"%3Cinit%3E(V,S)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TUConstraint","l":"relatedType"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"relevantJavaTypes"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"remainder(Number)","url":"remainder(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"remainder(Number)","url":"remainder(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"remainder(Number)","url":"remainder(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"remainder(Number)","url":"remainder(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"remainder(Number)","url":"remainder(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"remainder(Number)","url":"remainder(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"remainder(Number)","url":"remainder(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"remainder(Range)","url":"remainder(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"JavaDiagnosticReader","l":"remove()"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityVisitHistory","l":"remove(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","url":"remove(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"SubtypeVisitHistory","l":"remove(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","url":"remove(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"remove(Object)","url":"remove(java.lang.Object)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"remove(Object)","url":"remove(java.lang.Object)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"removeAll(Collection<?>)","url":"removeAll(java.util.Collection)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"removeAnnotation(AnnotationMirror)","url":"removeAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"removeAnnotation(AnnotationMirror)","url":"removeAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"removeAnnotation(AnnotationMirror)","url":"removeAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"removeAnnotation(AnnotationMirror)","url":"removeAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"removeAnnotationByClass(Class<? extends Annotation>)","url":"removeAnnotationByClass(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"removeAnnotationInHierarchy(AnnotationMirror)","url":"removeAnnotationInHierarchy(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"removeAnnotations(Iterable<? extends AnnotationMirror>)","url":"removeAnnotations(java.lang.Iterable)"},{"p":"org.checkerframework.dataflow.util","c":"NodeUtils","l":"removeCasts(Node)","url":"removeCasts(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"removeConflicting(ArrayAccess, V)","url":"removeConflicting(org.checkerframework.dataflow.expression.ArrayAccess,V)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"removeConflicting(FieldAccess, V)","url":"removeConflicting(org.checkerframework.dataflow.expression.FieldAccess,V)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"removeConflicting(LocalVariable)","url":"removeConflicting(org.checkerframework.dataflow.expression.LocalVariable)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"removeConflicts()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"removeDiagnosticsOfKind(DiagnosticKind, List<TestDiagnostic>)","url":"removeDiagnosticsOfKind(org.checkerframework.framework.test.diagnostics.DiagnosticKind,java.util.List)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"removeElement(CharSequence)","url":"removeElement(java.lang.CharSequence)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"removeNonTopAnnotationInHierarchy(AnnotationMirror)","url":"removeNonTopAnnotationInHierarchy(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"removeOffset(String, int)","url":"removeOffset(java.lang.String,int)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"removeOption(String)","url":"removeOption(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"removePredecessor(BlockImpl)","url":"removePredecessor(org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"removePrefix(Elements, AnnotatedTypeMirror)","url":"removePrefix(javax.lang.model.util.Elements,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"removePrefix(Elements, AnnotationMirror)","url":"removePrefix(javax.lang.model.util.Elements,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"removeSequenceLengthAccess(List<String>)","url":"removeSequenceLengthAccess(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"removeSequenceLengthAccessAndNeg1(List<String>)","url":"removeSequenceLengthAccessAndNeg1(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"removeSequenceLengths(List<String>)","url":"removeSequenceLengths(java.util.List)"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"replace(AnnotatedTypeMirror, AnnotationMirrorMap<AnnotationMirror>)","url":"replace(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.javacutil.AnnotationMirrorMap)"},{"p":"org.checkerframework.framework.type.poly","c":"DefaultQualifierPolymorphism","l":"replace(AnnotatedTypeMirror, AnnotationMirrorMap<AnnotationMirror>)","url":"replace(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.javacutil.AnnotationMirrorMap)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopierWithReplacement","l":"replace(AnnotatedTypeMirror, IdentityHashMap<? extends AnnotatedTypeMirror, ? extends AnnotatedTypeMirror>)","url":"replace(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"replaceAnnotation(AnnotationMirror)","url":"replaceAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"replaceAnnotations(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","url":"replaceAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"replaceAnnotations(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"replaceAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"replaceAnnotations(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"replaceAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"replaceAnnotations(Iterable<? extends AnnotationMirror>)","url":"replaceAnnotations(java.lang.Iterable)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"replacePolyQualifier(AnnotatedTypeMirror, Tree)","url":"replacePolyQualifier(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"SyntheticArrays","l":"replaceReturnType(Element, AnnotatedTypeMirror.AnnotatedArrayType)","url":"replaceReturnType(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"replaceShorthandProcessor(List<String>)","url":"replaceShorthandProcessor(java.util.List)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"replaceValue(JavaExpression, V)","url":"replaceValue(org.checkerframework.dataflow.expression.JavaExpression,V)"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"REPORT_EVAL_WARNS"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"report(Object, DiagMessage)","url":"report(java.lang.Object,org.checkerframework.framework.source.DiagMessage)"},{"p":"org.checkerframework.common.util.report","c":"ReportChecker","l":"ReportChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"reportCommonAssignmentError(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"reportCommonAssignmentError(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"reportCommonAssignmentError(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","url":"reportCommonAssignmentError(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationFieldAccessSubchecker","l":"reportError(Object, String, Object...)","url":"reportError(java.lang.Object,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"reportError(Object, String, Object...)","url":"reportError(java.lang.Object,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"reportError(Object, String, Object...)","url":"reportError(java.lang.Object,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"reportErrors(Tree, List<DependentTypesError>)","url":"reportErrors(com.sun.source.tree.Tree,java.util.List)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"reportInvalidAnnotationsOnUse(AnnotatedTypeMirror, Tree)","url":"reportInvalidAnnotationsOnUse(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"reportInvalidBounds(AnnotatedTypeMirror, Tree)","url":"reportInvalidBounds(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"reportInvalidType(AnnotatedTypeMirror, Tree)","url":"reportInvalidType(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"reportMethodInvocabilityError(MethodInvocationTree, AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"reportMethodInvocabilityError(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"reportMethodInvocabilityError(MethodInvocationTree, AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"reportMethodInvocabilityError(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"reportMethodInvocabilityError(MethodInvocationTree, AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"reportMethodInvocabilityError(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"reportPurityErrors(PurityChecker.PurityResult, MethodTree, EnumSet<Pure.Kind>)","url":"reportPurityErrors(org.checkerframework.dataflow.util.PurityChecker.PurityResult,com.sun.source.tree.MethodTree,java.util.EnumSet)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor.ReportTypeValidator","l":"ReportTypeValidator(BaseTypeChecker, BaseTypeVisitor<?>, AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.common.basetype.BaseTypeVisitor,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"reportValidityResult(String, AnnotatedTypeMirror, Tree)","url":"reportValidityResult(java.lang.String,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"reportValidityResultOnUnannotatedType(String, AnnotatedTypeMirror, Tree)","url":"reportValidityResultOnUnannotatedType(java.lang.String,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"ReportVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationFieldAccessSubchecker","l":"reportWarning(Object, String, Object...)","url":"reportWarning(java.lang.Object,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"reportWarning(Object, String, Object...)","url":"reportWarning(java.lang.Object,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"repr()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.FoundRequired","l":"required"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"requiresQualifierExpressionElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"requiresQualifierListTM"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"requiresQualifierListValueElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"requiresQualifierTM"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"reset()"},{"p":"org.checkerframework.framework.type.typeannotator","c":"PropagationTypeAnnotator","l":"reset()"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"reset()"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElementImpl","l":"reset()"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"resetPrintVerboseSettings()"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"resolve(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"resolve(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type.poly","c":"QualifierPolymorphism","l":"resolve(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"resolve(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"resolve(MethodInvocationTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"resolve(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type.poly","c":"QualifierPolymorphism","l":"resolve(MethodInvocationTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"resolve(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"resolve(NewClassTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"resolve(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type.poly","c":"QualifierPolymorphism","l":"resolve(NewClassTree, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"resolve(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"resolve(VariableElement, AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"resolve(javax.lang.model.element.VariableElement,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.poly","c":"QualifierPolymorphism","l":"resolve(VariableElement, AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"resolve(javax.lang.model.element.VariableElement,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferenceResult","l":"resolveChainedTargets()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"resolvePrimaries(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"resolvePrimaries(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"Resolver(ProcessingEnvironment)","url":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.common.reflection","c":"DefaultReflectionResolver","l":"resolveReflectiveCall(AnnotatedTypeFactory, MethodInvocationTree, AnnotatedTypeFactory.ParameterizedExecutableType)","url":"resolveReflectiveCall(org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeFactory.ParameterizedExecutableType)"},{"p":"org.checkerframework.common.reflection","c":"ReflectionResolver","l":"resolveReflectiveCall(AnnotatedTypeFactory, MethodInvocationTree, AnnotatedTypeFactory.ParameterizedExecutableType)","url":"resolveReflectiveCall(org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeFactory.ParameterizedExecutableType)"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"RESOURCE_VARIABLE"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnalysis","l":"ResourceLeakAnalysis(BaseTypeChecker, CalledMethodsAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.calledmethods.CalledMethodsAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"ResourceLeakAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"ResourceLeakChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"ResourceLeakTransfer(ResourceLeakAnalysis)","url":"%3Cinit%3E(org.checkerframework.checker.resourceleak.ResourceLeakAnalysis)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"ResourceLeakVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"result"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"result"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethodsIf","l":"result()"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOfIf","l":"result()"},{"p":"org.checkerframework.checker.lock.qual","c":"EnsuresLockHeldIf","l":"result()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresKeyForIf","l":"result()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresNonNullIf","l":"result()"},{"p":"org.checkerframework.common.value.qual","c":"EnsuresMinLenIf","l":"result()"},{"p":"org.checkerframework.framework.qual","c":"EnsuresQualifierIf","l":"result()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.Result","l":"Result(E, ExpressionTree)","url":"%3Cinit%3E(E,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"resultValue"},{"p":"org.checkerframework.framework.util","c":"Contract.ConditionalPostcondition","l":"resultValue"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"retainAll(Collection<?>)","url":"retainAll(java.util.Collection)"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"RETURN"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"ReturnNode(ReturnTree, Node, Types)","url":"%3Cinit%3E(com.sun.source.tree.ReturnTree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.util.Types)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"returnNodes"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationChecker.AliasAnalysis","l":"RETURNS_RECEIVER"},{"p":"org.checkerframework.common.returnsreceiver","c":"ReturnsReceiverAnnotatedTypeFactory","l":"ReturnsReceiverAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.returnsreceiver","c":"ReturnsReceiverChecker","l":"ReturnsReceiverChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.returnsreceiver","c":"ReturnsReceiverVisitor","l":"ReturnsReceiverVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"returnStatementStores"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"returnsThis(MethodInvocationTree)","url":"returnsThis(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"returnsThis(MethodInvocationTree)","url":"returnsThis(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"returnTree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"rhs"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"right"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"right"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"right"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"rightAnno"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"root"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"root"},{"p":"org.checkerframework.framework.test","c":"AinferValidatePerDirectoryTest","l":"run()"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"run()"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerFileTest","l":"run()"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker","l":"run(String[])","url":"run(java.lang.String[])"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"runAnalysisFor(Node, Analysis.BeforeOrAfter, TransferInput<V, S>, IdentityHashMap<Node, V>, Map<TransferInput<V, S>, IdentityHashMap<Node, TransferResult<V, S>>>)","url":"runAnalysisFor(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter,org.checkerframework.dataflow.analysis.TransferInput,java.util.IdentityHashMap,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"runAnalysisFor(Node, Analysis.BeforeOrAfter, TransferInput<V, S>, IdentityHashMap<Node, V>, Map<TransferInput<V, S>, IdentityHashMap<Node, TransferResult<V, S>>>)","url":"runAnalysisFor(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter,org.checkerframework.dataflow.analysis.TransferInput,java.util.IdentityHashMap,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"runAnalysisFor(Node, Analysis.BeforeOrAfter, TransferInput<V, S>, IdentityHashMap<Node, V>, Map<TransferInput<V, S>, IdentityHashMap<Node, TransferResult<V, S>>>)","url":"runAnalysisFor(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter,org.checkerframework.dataflow.analysis.TransferInput,java.util.IdentityHashMap,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"runAnalysisFor(Node, Analysis.BeforeOrAfter, TransferInput<V, S>, IdentityHashMap<Node, V>, Map<TransferInput<V, S>, IdentityHashMap<Node, TransferResult<V, S>>>)","url":"runAnalysisFor(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter,org.checkerframework.dataflow.analysis.TransferInput,java.util.IdentityHashMap,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"runAnalysisFor(Node, Analysis.BeforeOrAfter)","url":"runAnalysisFor(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter)"},{"p":"org.checkerframework.framework.test","c":"TypecheckExecutor","l":"runTest(TestConfiguration)","url":"runTest(org.checkerframework.framework.test.TestConfiguration)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"s"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"s"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils.PrimitiveConversionKind","l":"SAME"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"sameAnnotatedTypeFactory(AnnotatedTypeFactory)","url":"sameAnnotatedTypeFactory(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"sameAnnotationValue(AnnotationValue, AnnotationValue)","url":"sameAnnotationValue(javax.lang.model.element.AnnotationValue,javax.lang.model.element.AnnotationValue)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"sameElement(VariableElement, VariableElement)","url":"sameElement(javax.lang.model.element.VariableElement,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"sameElementValues(AnnotationMirror, AnnotationMirror)","url":"sameElementValues(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"SameLenAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"sameLenAnnotationFromTree(Tree)","url":"sameLenAnnotationFromTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenChecker","l":"SameLenChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenTransfer","l":"SameLenTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory.SameLenTreeAnnotator","l":"SameLenTreeAnnotator(SameLenAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.checker.index.samelen.SameLenAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"sameLenValueElement"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenVisitor","l":"SameLenVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"sameTree(ExpressionTree, ExpressionTree)","url":"sameTree(com.sun.source.tree.ExpressionTree,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"scan(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM)","url":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM)"},{"p":"org.checkerframework.framework.type","c":"EqualityAtmComparer","l":"scan(AnnotatedTypeMirror, AnnotatedTypeMirror, Void)","url":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"scan(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElementImpl","l":"scan(AnnotatedTypeMirror, AnnotationMirror)","url":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"scan(AnnotatedTypeMirror, P)","url":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,P)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"scan(AnnotatedTypeMirror, Void)","url":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"IrrelevantTypeAnnotator","l":"scan(AnnotatedTypeMirror, Void)","url":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"ListTypeAnnotator","l":"scan(AnnotatedTypeMirror, Void)","url":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"PropagationTypeAnnotator","l":"scan(AnnotatedTypeMirror, Void)","url":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"scan(Iterable<? extends AnnotatedTypeMirror>, Iterable<? extends AnnotatedTypeMirror>, PARAM)","url":"scan(java.lang.Iterable,java.lang.Iterable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"scan(Iterable<? extends AnnotatedTypeMirror>, Iterable<? extends AnnotatedTypeMirror>)","url":"scan(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"scan(Iterable<? extends AnnotatedTypeMirror>, P)","url":"scan(java.lang.Iterable,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"scan(JavaExpression, P)","url":"scan(org.checkerframework.dataflow.expression.JavaExpression,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"scan(List<? extends JavaExpression>, P)","url":"scan(java.util.List,P)"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"scan(Tree, P)","url":"scan(com.sun.source.tree.Tree,P)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner.YieldVisitor","l":"scan(Tree, P)","url":"scan(com.sun.source.tree.Tree,P)"},{"p":"org.checkerframework.framework.util","c":"TreePathCacher","l":"scan(Tree, Tree)","url":"scan(com.sun.source.tree.Tree,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"scan(Tree, Void)","url":"scan(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug.Visitor","l":"scan(Tree, Void)","url":"scan(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"scan(Tree, Void)","url":"scan(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"scan(Tree, Void)","url":"scan(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"scan(Tree, Void)","url":"scan(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"scanAndReduce(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM, RETURN_TYPE)","url":"scanAndReduce(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM,RETURN_TYPE)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"scanAndReduce(AnnotatedTypeMirror, P, R)","url":"scanAndReduce(org.checkerframework.framework.type.AnnotatedTypeMirror,P,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"scanAndReduce(Iterable<? extends AnnotatedTypeMirror>, AnnotatedTypeMirror, R)","url":"scanAndReduce(java.lang.Iterable,org.checkerframework.framework.type.AnnotatedTypeMirror,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"scanAndReduce(Iterable<? extends AnnotatedTypeMirror>, Iterable<? extends AnnotatedTypeMirror>, PARAM, RETURN_TYPE)","url":"scanAndReduce(java.lang.Iterable,java.lang.Iterable,PARAM,RETURN_TYPE)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"scanAndReduce(Iterable<? extends AnnotatedTypeMirror>, Iterable<? extends AnnotatedTypeMirror>, R)","url":"scanAndReduce(java.lang.Iterable,java.lang.Iterable,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"scanAndReduce(Iterable<? extends AnnotatedTypeMirror>, P, R)","url":"scanAndReduce(java.lang.Iterable,P,R)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"scannedClasses"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner","l":"scanSwitchExpression(Tree, P)","url":"scanSwitchExpression(com.sun.source.tree.Tree,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"scanWithNull(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM)","url":"scanWithNull(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM)"},{"p":"org.checkerframework.framework.type","c":"EqualityAtmComparer","l":"scanWithNull(AnnotatedTypeMirror, AnnotatedTypeMirror, Void)","url":"scanWithNull(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"scope"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"SearchIndexAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexChecker","l":"SearchIndexChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"searchIndexForValueElement"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexTransfer","l":"SearchIndexTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"second"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"Select(TreeMaker, Tree, Name)","url":"Select(com.sun.tools.javac.tree.TreeMaker,com.sun.source.tree.Tree,com.sun.tools.javac.util.Name)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"Select(TreeMaker, Tree, Symbol)","url":"Select(com.sun.tools.javac.tree.TreeMaker,com.sun.source.tree.Tree,com.sun.tools.javac.code.Symbol)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"selectorExprAssignment"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"SELF_RECEIVER_PATTERN"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"sequentialSemantics"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"sequentialSemantics"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"setArrayExpression(ExpressionTree)","url":"setArrayExpression(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"setBlock(Block)","url":"setBlock(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"setBlock(BlockImpl)","url":"setBlock(org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"setBounds(List<AnnotatedTypeMirror>)","url":"setBounds(java.util.List)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"setComponentType(AnnotatedTypeMirror)","url":"setComponentType(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"setCurrentNode(Node)","url":"setCurrentNode(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"setCurrentTree(Tree)","url":"setCurrentTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"setDeclaration(boolean)"},{"p":"org.checkerframework.javacutil.trees","c":"DetachedVarSymbol","l":"setDeclaration(VariableTree)","url":"setDeclaration(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"setDiagnosticFiles(List<File>)","url":"setDiagnosticFiles(java.util.List)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"setElement(ExecutableElement)","url":"setElement(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlock","l":"setElseFlowRule(Store.FlowRule)","url":"setElseFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"setElseFlowRule(Store.FlowRule)","url":"setElseFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"setElseSuccessor(BlockImpl)","url":"setElseSuccessor(org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"setEnclosingType(AnnotatedTypeMirror.AnnotatedDeclaredType)","url":"setEnclosingType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"setFalseFlowRule(Store.FlowRule)","url":"setFalseFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"setFixedInitialStore(S)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlock","l":"setFlowRule(Store.FlowRule)","url":"setFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"setFlowRule(Store.FlowRule)","url":"setFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"setInConstructorOrInitializer()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"setInformation(Node, Constant)","url":"setInformation(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.constantpropagation.Constant)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"setInSource(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"setIsUnderlyingTypeRaw()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"setIterableExpression(ExpressionTree)","url":"setIterableExpression(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"setLintOption(String, boolean)","url":"setLintOption(java.lang.String,boolean)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"setLValue()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"setNode(Node)","url":"setNode(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"setOptions(Map<String, String>)","url":"setOptions(java.util.Map)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"setOptions(Map<String, String>)","url":"setOptions(java.util.Map)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"setParentChecker(SourceChecker)","url":"setParentChecker(org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"setPathForArtificialTree(Tree, TreePath)","url":"setPathForArtificialTree(com.sun.source.tree.Tree,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitStore","l":"setPolyNullNonNull(boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitStore","l":"setPolyNullNull(boolean)"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"setProcessingEnvironment(ProcessingEnvironment)","url":"setProcessingEnvironment(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"setProcessingEnvironment(ProcessingEnvironment)","url":"setProcessingEnvironment(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"setProcessors(Iterable<String>)","url":"setProcessors(java.lang.Iterable)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"setResultValue(V)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"setRoot(CompilationUnitTree)","url":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"setRoot(CompilationUnitTree)","url":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"setRoot(CompilationUnitTree)","url":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"setRoot(CompilationUnitTree)","url":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"setRoot(CompilationUnitTree)","url":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"setRoot(CompilationUnitTree)","url":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"setRoot(CompilationUnitTree)","url":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"setRoot(CompilationUnitTree)","url":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"setSelfTypeInInitializationCode(Tree, AnnotatedTypeMirror.AnnotatedDeclaredType, TreePath)","url":"setSelfTypeInInitializationCode(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"setShouldEmitDebugInfo(boolean)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"setSourceFiles(List<File>)","url":"setSourceFiles(java.util.List)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"setSuccessor(BlockImpl)","url":"setSuccessor(org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree.PredecessorHolder","l":"setSuccessor(BlockImpl)","url":"setSuccessor(org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"setSupportedLintOptions(Set<String>)","url":"setSupportedLintOptions(java.util.Set)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"setTerminatesExecution(boolean)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlock","l":"setThenFlowRule(Store.FlowRule)","url":"setThenFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"setThenFlowRule(Store.FlowRule)","url":"setThenFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"setThenSuccessor(BlockImpl)","url":"setThenSuccessor(org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"setTop(AnnotationMirror)","url":"setTop(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"setTrueFlowRule(Store.FlowRule)","url":"setTrueFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"setTypeArguments(List<? extends AnnotatedTypeMirror>)","url":"setTypeArguments(java.util.List)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"setUninferredTypeArgument()"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtilExtra","l":"setUnsignedRGB(BufferedImage, int, int, int, int, @org.checkerframework.checker.signedness.qual.Unsigned int[], int, int)","url":"setUnsignedRGB(java.awt.image.BufferedImage,int,int,int,int,@org.checkerframework.checker.signedness.qual.Unsignedint[],int,int)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, AnnotationMirror)","url":"setValue(java.lang.CharSequence,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Boolean)","url":"setValue(java.lang.CharSequence,java.lang.Boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Character)","url":"setValue(java.lang.CharSequence,java.lang.Character)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Class<?>)","url":"setValue(java.lang.CharSequence,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Double)","url":"setValue(java.lang.CharSequence,java.lang.Double)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Enum<?>)","url":"setValue(java.lang.CharSequence,java.lang.Enum)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Enum<?>[])","url":"setValue(java.lang.CharSequence,java.lang.Enum[])"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Float)","url":"setValue(java.lang.CharSequence,java.lang.Float)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Integer)","url":"setValue(java.lang.CharSequence,java.lang.Integer)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, List<? extends Object>)","url":"setValue(java.lang.CharSequence,java.util.List)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Long)","url":"setValue(java.lang.CharSequence,java.lang.Long)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Object[])","url":"setValue(java.lang.CharSequence,java.lang.Object[])"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Short)","url":"setValue(java.lang.CharSequence,java.lang.Short)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, String)","url":"setValue(java.lang.CharSequence,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, TypeMirror)","url":"setValue(java.lang.CharSequence,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, VariableElement)","url":"setValue(java.lang.CharSequence,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, VariableElement[])","url":"setValue(java.lang.CharSequence,javax.lang.model.element.VariableElement[])"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(ExecutableElement, List<? extends Object>)","url":"setValue(javax.lang.model.element.ExecutableElement,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"setVerboseSettings(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"setVisitorTreePath(TreePath)","url":"setVisitorTreePath(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"setWasRaw()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNoType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNullType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedPrimitiveType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedUnionType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNoType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNullType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedPrimitiveType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedUnionType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"shiftLeft(Number)","url":"shiftLeft(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"shiftLeft(Number)","url":"shiftLeft(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"shiftLeft(Number)","url":"shiftLeft(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"shiftLeft(Number)","url":"shiftLeft(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"shiftLeft(Number)","url":"shiftLeft(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"shiftLeft(Number)","url":"shiftLeft(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"shiftLeft(Number)","url":"shiftLeft(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"shiftLeft(Range)","url":"shiftLeft(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"SHORT"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"SHORT_EVERYTHING"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"shortFromDouble(double)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"shortFromFloat(float)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ShortLiteralNode","l":"ShortLiteralNode(LiteralTree)","url":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"ShortMath(int)","url":"%3Cinit%3E(int)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"shortRange()"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"shouldAdaptMember(AnnotatedTypeMirror, Element)","url":"shouldAdaptMember(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"shouldAdaptMethod(ExecutableElement)","url":"shouldAdaptMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"shouldAddShutdownHook()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldAddShutdownHook()"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"shouldBeAnnotated(AnnotatedTypeMirror, boolean)","url":"shouldBeAnnotated(org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"shouldCache"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"shouldCheckTopLevelDeclaredOrPrimitiveType(AnnotatedTypeMirror, Tree)","url":"shouldCheckTopLevelDeclaredOrPrimitiveType(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"shouldClearSubcheckerSharedCFGs"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"shouldEmitDebugInfo()"},{"p":"org.checkerframework.framework.test","c":"TestConfiguration","l":"shouldEmitDebugInfo()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"shouldHaveNoMustCallObligation(TypeMirror)","url":"shouldHaveNoMustCallObligation(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"shouldInsert(JavaExpression, V, boolean)","url":"shouldInsert(org.checkerframework.dataflow.expression.JavaExpression,V,boolean)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"shouldOmitParentheses()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"shouldPassThroughExpression(String)","url":"shouldPassThroughExpression(java.lang.String)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"shouldResolveReflection()"},{"p":"org.checkerframework.common.reflection","c":"ClassValChecker","l":"shouldResolveReflection()"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"shouldResolveReflection()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitSubchecker","l":"shouldSkipDefs(ClassTree, MethodTree)","url":"shouldSkipDefs(com.sun.source.tree.ClassTree,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldSkipDefs(ClassTree, MethodTree)","url":"shouldSkipDefs(com.sun.source.tree.ClassTree,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitSubchecker","l":"shouldSkipDefs(ClassTree)","url":"shouldSkipDefs(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldSkipDefs(ClassTree)","url":"shouldSkipDefs(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldSkipUses(Element)","url":"shouldSkipUses(javax.lang.model.element.Element)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"shouldSkipUses(ExpressionTree)","url":"shouldSkipUses(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundChecker","l":"shouldSkipUses(String)","url":"shouldSkipUses(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"shouldSkipUses(String)","url":"shouldSkipUses(java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldSkipUses(String)","url":"shouldSkipUses(java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldSuppressWarnings(Element, String)","url":"shouldSuppressWarnings(javax.lang.model.element.Element,java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldSuppressWarnings(Tree, String)","url":"shouldSuppressWarnings(com.sun.source.tree.Tree,java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldSuppressWarnings(TreePath, String)","url":"shouldSuppressWarnings(com.sun.source.util.TreePath,java.lang.String)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"shouldWarnAboutIrrelevantJavaTypes()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"shouldWarnIfStubRedundantWithBytecode()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"shouldWarnIfStubRedundantWithBytecode()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"shouldWarnIfStubRedundantWithBytecode()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"showchecks"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"shutdown()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"shutdown()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"shutdown()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"shutdownHook()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shutdownHook()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"SIDE_EFFECT_FREE"},{"p":"org.checkerframework.dataflow.qual","c":"Pure.Kind","l":"SIDE_EFFECT_FREE"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"SIDEEFFECTFREE"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"sideEffectsUnrefineAliases"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"sift(Iterable<Attribute.TypeCompound>)","url":"sift(java.lang.Iterable)"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"SIGNATURE_UNKNOWN"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"SignatureAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.signature","c":"SignatureChecker","l":"SignatureChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.util.debug","c":"SignaturePrinter","l":"SignaturePrinter()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.signature","c":"SignatureTransfer","l":"SignatureTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"SIGNED"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"SIGNED_POSITIVE"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"SIGNEDNESS_BOTTOM"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"SIGNEDNESS_GLB"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"SignednessAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessChecker","l":"SignednessChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"SignednessVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SignedRightShiftNode","l":"SignedRightShiftNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"signedShiftRight(Number)","url":"signedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"signedShiftRight(Number)","url":"signedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"signedShiftRight(Number)","url":"signedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"signedShiftRight(Number)","url":"signedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"signedShiftRight(Number)","url":"signedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"signedShiftRight(Number)","url":"signedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"signedShiftRight(Number)","url":"signedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"signedShiftRight(Range)","url":"signedShiftRight(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"SimpleAnnotatedTypeScanner()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"SimpleAnnotatedTypeScanner(AnnotatedTypeScanner.Reduce<R>, R)","url":"%3Cinit%3E(org.checkerframework.framework.type.visitor.AnnotatedTypeScanner.Reduce,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"SimpleAnnotatedTypeScanner(SimpleAnnotatedTypeScanner.DefaultAction<R, P>, AnnotatedTypeScanner.Reduce<R>, R)","url":"%3Cinit%3E(org.checkerframework.framework.type.visitor.SimpleAnnotatedTypeScanner.DefaultAction,org.checkerframework.framework.type.visitor.AnnotatedTypeScanner.Reduce,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"SimpleAnnotatedTypeScanner(SimpleAnnotatedTypeScanner.DefaultAction<R, P>)","url":"%3Cinit%3E(org.checkerframework.framework.type.visitor.SimpleAnnotatedTypeScanner.DefaultAction)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"SimpleAnnotatedTypeVisitor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"SimpleAnnotatedTypeVisitor(R)","url":"%3Cinit%3E(R)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"SimpleOptionMap()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"simpleTypeName(TypeMirror)","url":"simpleTypeName(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"SingleSuccessorBlockImpl(Block.BlockType)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.block.Block.BlockType)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree","l":"singleSuccessorHolder(SingleSuccessorBlockImpl, BlockImpl)","url":"singleSuccessorHolder(org.checkerframework.dataflow.cfg.block.SingleSuccessorBlockImpl,org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"singleton(AnnotationMirror)","url":"singleton(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"size()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"size()"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"skipBlocks(StatementTree)","url":"skipBlocks(com.sun.source.tree.StatementTree)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"skipReceiverSubtypeCheck(MethodInvocationTree, AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"skipReceiverSubtypeCheck(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"skipReceiverSubtypeCheck(MethodInvocationTree, AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"skipReceiverSubtypeCheck(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"skipReceiverSubtypeCheck(MethodInvocationTree, AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"skipReceiverSubtypeCheck(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"EqualitiesSolver","l":"solveEqualities(Set<TypeVariable>, ConstraintMap, AnnotatedTypeFactory)","url":"solveEqualities(java.util.Set,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SubtypesSolver","l":"solveFromSubtypes(Set<TypeVariable>, ConstraintMap, AnnotatedTypeFactory)","url":"solveFromSubtypes(java.util.Set,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"solveFromSupertypes(Set<TypeVariable>, ConstraintMap, AnnotatedTypeFactory)","url":"solveFromSupertypes(java.util.Set,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference","c":"GlbUtil","l":"sortForGlb(List<? extends AnnotatedTypeMirror>, AnnotatedTypeFactory)","url":"sortForGlb(java.util.List,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"SourceChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"SourceVisitor(SourceChecker)","url":"%3Cinit%3E(org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block.BlockType","l":"SPECIAL_BLOCK"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlockImpl","l":"SpecialBlockImpl(SpecialBlock.SpecialBlockType)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.block.SpecialBlock.SpecialBlockType)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlockImpl","l":"specialType"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"splitAssignments(Node)","url":"splitAssignments(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"STANDARD_CLIMB_DEFAULTS_BOTTOM"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"STANDARD_CLIMB_DEFAULTS_TOP"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"STANDARD_UNCHECKED_DEFAULTS_BOTTOM"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"STANDARD_UNCHECKED_DEFAULTS_TOP"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"startOfBlock"},{"p":"org.checkerframework.javacutil","c":"TreeUtils.MemberReferenceKind","l":"STATIC"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"store"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"store"},{"p":"org.checkerframework.framework.type","c":"DeclarationsIntoElements","l":"store(ProcessingEnvironment, AnnotatedTypeFactory, ClassTree)","url":"store(javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.type","c":"TypesIntoElements","l":"store(ProcessingEnvironment, AnnotatedTypeFactory, ClassTree)","url":"store(javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"storeAtEntry"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"storeChanged()"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"storeChanged()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"storeChanged()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"storeEntryIndent"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"stores"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"storesAtReturnStatements"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<CFValue, CFStore>, Node, Node, CFValue, CFValue, boolean)","url":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.framework.flow.CFValue,org.checkerframework.framework.flow.CFValue,boolean)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<CFValue, CFStore>, Node, Node, CFValue, CFValue, boolean)","url":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.framework.flow.CFValue,org.checkerframework.framework.flow.CFValue,boolean)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<CFValue, CFStore>, Node, Node, CFValue, CFValue, boolean)","url":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.framework.flow.CFValue,org.checkerframework.framework.flow.CFValue,boolean)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<CFValue, CFStore>, Node, Node, CFValue, CFValue, boolean)","url":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.framework.flow.CFValue,org.checkerframework.framework.flow.CFValue,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<NullnessNoInitValue, NullnessNoInitStore>, Node, Node, NullnessNoInitValue, NullnessNoInitValue, boolean)","url":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.checker.nullness.NullnessNoInitValue,org.checkerframework.checker.nullness.NullnessNoInitValue,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<V, S>, Node, Node, V, V, boolean)","url":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,V,V,boolean)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"strictEnclosingTypeElement(Element)","url":"strictEnclosingTypeElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"strictSuperTypes"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"STRING"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"StringCFGVisualizer()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateNode","l":"StringConcatenateNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"stringConcatenation(Node, Node, TransferInput<CFValue, CFStore>, TransferResult<CFValue, CFStore>)","url":"stringConcatenation(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput,org.checkerframework.dataflow.analysis.TransferResult)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"stringConversion(Node)","url":"stringConversion(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"StringConversionNode(Tree, Node, TypeMirror)","url":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil.StringLiteralConcatenateVisitor","l":"StringLiteralConcatenateVisitor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringLiteralNode","l":"StringLiteralNode(LiteralTree)","url":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.framework.qual","c":"QualifierForLiterals","l":"stringPatterns()"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"strings"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"stringToI18nConversionCategory(String)","url":"stringToI18nConversionCategory(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"stringType"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"STRINGVAL_NAME"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"stringValValueElement"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"stringValValueElement"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"StructuralEqualityComparer(StructuralEqualityVisitHistory)","url":"%3Cinit%3E(org.checkerframework.framework.type.StructuralEqualityVisitHistory)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityVisitHistory","l":"StructuralEqualityVisitHistory()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"stubFromField(Element)","url":"stubFromField(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"stubFromMethod(ExecutableElement)","url":"stubFromMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"stubFromPackage(PackageElement)","url":"stubFromPackage(javax.lang.model.element.PackageElement)"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"stubFromType(TypeElement)","url":"stubFromType(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"StubGenerator()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"StubGenerator(OutputStream)","url":"%3Cinit%3E(java.io.OutputStream)"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"StubGenerator(PrintStream)","url":"%3Cinit%3E(java.io.PrintStream)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"stubTypes"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"subcheckerSharedCFG"},{"p":"org.checkerframework.checker.index.qual","c":"HasSubsequence","l":"subsequence()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"subSet(AnnotationMirror, AnnotationMirror)","url":"subSet(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"subSet(AnnotationMirror, boolean, AnnotationMirror, boolean)","url":"subSet(javax.lang.model.element.AnnotationMirror,boolean,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"TypeVariableSubstitutor","l":"substitute(Map<TypeVariable, AnnotatedTypeMirror>, AnnotatedTypeMirror)","url":"substitute(java.util.Map,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"substitute(Map<TypeVariable, AnnotatedTypeMirror>, AnnotatedTypeMirror)","url":"substitute(java.util.Map,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"substitute(Map<TypeVariable, AnnotatedTypeMirror>)","url":"substitute(java.util.Map)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"substitute(TypeMirror, List<? extends TypeMirror>, List<? extends TypeMirror>, ProcessingEnvironment)","url":"substitute(javax.lang.model.type.TypeMirror,java.util.List,java.util.List,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"substitute(TypeVariable, AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"substitute(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"substituteMethodReturnType(Element, TypeMirror, ProcessingEnvironment)","url":"substituteMethodReturnType(javax.lang.model.element.Element,javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.type","c":"TypeVariableSubstitutor","l":"substituteTypeVariable(AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedTypeVariable)","url":"substituteTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable)"},{"p":"org.checkerframework.framework.type","c":"TypeVariableSubstitutor","l":"substituteWithoutCopyingTypeArguments(Map<TypeVariable, AnnotatedTypeMirror>, AnnotatedTypeMirror)","url":"substituteWithoutCopyingTypeArguments(java.util.Map,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"SubstringIndexAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexChecker","l":"SubstringIndexChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"substringIndexForOffsetElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"substringIndexForValueElement"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSubsetQualifierHierarchy","l":"SubtypeIsSubsetQualifierHierarchy(Collection<Class<? extends Annotation>>, ProcessingEnvironment, GenericAnnotatedTypeFactory<?, ?, ?, ?>)","url":"%3Cinit%3E(java.util.Collection,javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.type.GenericAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSupersetQualifierHierarchy","l":"SubtypeIsSupersetQualifierHierarchy(Collection<Class<? extends Annotation>>, ProcessingEnvironment, GenericAnnotatedTypeFactory<?, ?, ?, ?>)","url":"%3Cinit%3E(java.util.Collection,javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.type.GenericAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints","l":"subtypes"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Subtypes","l":"Subtypes()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SubtypesSolver","l":"SubtypesSolver()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"SubtypeVisitHistory","l":"SubtypeVisitHistory()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingAnnotatedTypeFactory","l":"SubtypingAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingAnnotationClassLoader","l":"SubtypingAnnotationClassLoader(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingChecker","l":"SubtypingChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"successor"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"summarize()"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"summarizeSourceFiles(List<File>)","url":"summarizeSourceFiles(java.util.List)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils.MemberReferenceKind","l":"SUPER"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"SUPERCLASS_INDEX"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"SuperNode(IdentifierTree)","url":"%3Cinit%3E(com.sun.source.tree.IdentifierTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"supersetOf(CFAbstractStore<CFValue, InitializationStore>)","url":"supersetOf(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitStore","l":"supersetOf(CFAbstractStore<NullnessNoInitValue, NullnessNoInitStore>)","url":"supersetOf(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"supersetOf(CFAbstractStore<V, S>)","url":"supersetOf(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints","l":"supertypes"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Supertypes","l":"Supertypes()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"SupertypesSolver()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"supportedAnnosFromAnnotationMirror(List<Name>)","url":"supportedAnnosFromAnnotationMirror(java.util.List)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"SUPPRESS_ALL_MESSAGE_KEY"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"SUPPRESS_ALL_PREFIX"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"SwitchExpressionNode(TypeMirror, Tree, LocalVariableNode)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror,com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.LocalVariableNode)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner","l":"SwitchExpressionScanner()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"switchExpressionTreeGetCases(Tree)","url":"switchExpressionTreeGetCases(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"switchExpressionTreeGetExpression(Tree)","url":"switchExpressionTreeGetExpression(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"symtab"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"SynchronizedNode(SynchronizedTree, Node, boolean, Types)","url":"%3Cinit%3E(com.sun.source.tree.SynchronizedTree,org.checkerframework.dataflow.cfg.node.Node,boolean,javax.lang.model.util.Types)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"syntacticEquals(JavaExpression)","url":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"syntacticEquals(JavaExpression)","url":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"syntacticEquals(JavaExpression)","url":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"syntacticEquals(JavaExpression)","url":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"syntacticEquals(JavaExpression)","url":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"syntacticEquals(JavaExpression)","url":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"syntacticEquals(JavaExpression)","url":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"syntacticEquals(JavaExpression)","url":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"syntacticEquals(JavaExpression)","url":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"syntacticEquals(JavaExpression)","url":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"syntacticEquals(JavaExpression)","url":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"syntacticEquals(JavaExpression)","url":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"syntacticEquals(JavaExpression)","url":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"syntacticEqualsList(List<? extends JavaExpression>, List<? extends JavaExpression>)","url":"syntacticEqualsList(java.util.List,java.util.List)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"synthetic"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory","l":"systemGetPropertyHandler"},{"p":"org.checkerframework.checker.nullness","c":"SystemGetPropertyHandler","l":"SystemGetPropertyHandler(ProcessingEnvironment, NullnessNoInitAnnotatedTypeFactory, boolean)","url":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment,org.checkerframework.checker.nullness.NullnessNoInitAnnotatedTypeFactory,boolean)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"t"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"t"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"tailSet(AnnotationMirror, boolean)","url":"tailSet(javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"tailSet(AnnotationMirror)","url":"tailSet(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.tainting","c":"TaintingAnnotatedTypeFactory","l":"TaintingAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.tainting","c":"TaintingChecker","l":"TaintingChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.tainting","c":"TaintingVisitor","l":"TaintingVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"target"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferredValue.InferredTarget","l":"target"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints","l":"target"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"TARGET"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints","l":"TargetConstraints(TypeVariable)","url":"%3Cinit%3E(javax.lang.model.type.TypeVariable)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Equalities","l":"targets"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Subtypes","l":"targets"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Supertypes","l":"targets"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOf","l":"targetValue()"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOfIf","l":"targetValue()"},{"p":"org.checkerframework.common.value.qual","c":"EnsuresMinLenIf","l":"targetValue()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"targetValueElement"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"tera"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"terminatesExecution"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"TernaryExpressionNode(ConditionalExpressionTree, Node, Node, Node, LocalVariableNode)","url":"%3Cinit%3E(com.sun.source.tree.ConditionalExpressionTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.LocalVariableNode)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"testAnnotationInsertion()"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"TestConfigurationBuilder()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"TestConfigurationBuilder(TestConfiguration)","url":"%3Cinit%3E(org.checkerframework.framework.test.TestConfiguration)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"TestDiagnostic(String, long, DiagnosticKind, String, boolean, boolean)","url":"%3Cinit%3E(java.lang.String,long,org.checkerframework.framework.test.diagnostics.DiagnosticKind,java.lang.String,boolean,boolean)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticLine","l":"TestDiagnosticLine(String, long, String, List<TestDiagnostic>)","url":"%3Cinit%3E(java.lang.String,long,java.lang.String,java.util.List)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"TestDiagnosticUtils()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"testDir"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerFileTest","l":"testDir"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerFileTest","l":"testFile"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"testFiles"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"testJointJavacJavaParserVisitor()"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"TESTS_OUTPUTDIR"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"testTypevarContainment(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"testTypevarContainment(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"TestUtilities()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.Kind","l":"THEN"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.FlowRule","l":"THEN_TO_BOTH"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.FlowRule","l":"THEN_TO_THEN"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"thenFlowRule"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"thenOperand"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"thenStore"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"thenStore"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"thenStore"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"thenStores"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"thenSuccessor"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThisNode","l":"ThisNode(TypeMirror)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"ThisReference(TypeMirror)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"thisValue"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"throwableType"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"ThrowNode(ThrowTree, Node, Types)","url":"%3Cinit%3E(com.sun.source.tree.ThrowTree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.util.Types)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"TIME"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"times(Number)","url":"times(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"times(Number)","url":"times(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"times(Number)","url":"times(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"times(Number)","url":"times(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"times(Number)","url":"times(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"times(Number)","url":"times(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"times(Number)","url":"times(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"times(Range)","url":"times(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TIsU","l":"TIsU(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TIsU","l":"TIsU(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"to"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"to"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator.PropagationDirection","l":"TO_SUBTYPE"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator.PropagationDirection","l":"TO_SUPERTYPE"},{"p":"org.checkerframework.checker.index.qual","c":"HasSubsequence","l":"to()"},{"p":"org.checkerframework.common.value.qual","c":"ArrayLenRange","l":"to()"},{"p":"org.checkerframework.common.value.qual","c":"IntRange","l":"to()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"toAnnotatedType(TypeMirror, boolean)","url":"toAnnotatedType(javax.lang.model.type.TypeMirror,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"toArray()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"toArray(T[])"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferenceResult","l":"toAtmMap()"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"toDegrees(@org.checkerframework.checker.units.qual.radians double)","url":"toDegrees(@org.checkerframework.checker.units.qual.radiansdouble)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toDouble(@org.checkerframework.checker.signedness.qual.Unsigned byte)","url":"toDouble(@org.checkerframework.checker.signedness.qual.Unsignedbyte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toDouble(@org.checkerframework.checker.signedness.qual.Unsigned int)","url":"toDouble(@org.checkerframework.checker.signedness.qual.Unsignedint)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toDouble(@org.checkerframework.checker.signedness.qual.Unsigned long)","url":"toDouble(@org.checkerframework.checker.signedness.qual.Unsignedlong)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toDouble(@org.checkerframework.checker.signedness.qual.Unsigned short)","url":"toDouble(@org.checkerframework.checker.signedness.qual.Unsignedshort)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toFloat(@org.checkerframework.checker.signedness.qual.Unsigned byte)","url":"toFloat(@org.checkerframework.checker.signedness.qual.Unsignedbyte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toFloat(@org.checkerframework.checker.signedness.qual.Unsigned int)","url":"toFloat(@org.checkerframework.checker.signedness.qual.Unsignedint)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toFloat(@org.checkerframework.checker.signedness.qual.Unsigned long)","url":"toFloat(@org.checkerframework.checker.signedness.qual.Unsignedlong)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toFloat(@org.checkerframework.checker.signedness.qual.Unsigned short)","url":"toFloat(@org.checkerframework.checker.signedness.qual.Unsignedshort)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"toJavaExpression(String)","url":"toJavaExpression(java.lang.String)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"top"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"top"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"TOP"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"TOP"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant.Type","l":"TOP"},{"p":"org.checkerframework.javacutil","c":"TreeUtils.MemberReferenceKind","l":"TOPLEVEL"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"toplevelEnclosingTypeElement(Element)","url":"toplevelEnclosingTypeElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"topQuals"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"tops"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"tops"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"topsMap"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"toRadians(@org.checkerframework.checker.units.qual.degrees double)","url":"toRadians(@org.checkerframework.checker.units.qual.degreesdouble)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"toString()"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"toString()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"toString()"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"toString()"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"toString()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"toString()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"toString()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"toString()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"toString()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationValue","l":"toString()"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"toString()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"toString()"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"toString()"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"toString()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"toString()"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"toString()"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprValue","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGStatement","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlockImpl","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"Label","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"PhaseOneResult","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseAndNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseComplementNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseOrNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseXorNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalAndNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalNotNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalOrNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"EqualToNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExplicitThisNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingDivisionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingRemainderNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanOrEqualNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ImplicitThisNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerDivisionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerRemainderNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LeftShiftNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanOrEqualNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NotEqualNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalAdditionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMinusNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMultiplicationNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalPlusNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalSubtractionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SignedRightShiftNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringLiteralNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnsignedRightShiftNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"toString()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"toString()"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarNode","l":"toString()"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"toString()"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"toString()"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"toString()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"toString()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"toString()"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"toString()"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"toString()"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"toString()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"toString()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"toString()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory.ParameterizedExecutableType","l":"toString()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"toString()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeParameterBounds","l":"toString()"},{"p":"org.checkerframework.framework.type","c":"SubtypeVisitHistory","l":"toString()"},{"p":"org.checkerframework.framework.type.treeannotator","c":"ListTreeAnnotator","l":"toString()"},{"p":"org.checkerframework.framework.type.typeannotator","c":"ListTypeAnnotator","l":"toString()"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"toString()"},{"p":"org.checkerframework.framework.util","c":"Contract.ConditionalPostcondition","l":"toString()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"toString()"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"toString()"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"toString()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"toString()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"A2F","l":"toString()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"F2A","l":"toString()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"FIsA","l":"toString()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TIsU","l":"toString()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TSubU","l":"toString()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TSuperU","l":"toString()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"toString()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"toString()"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"toString()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"toString(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeParameterBounds","l":"toString(boolean)"},{"p":"org.checkerframework.taglet","c":"ManualTaglet","l":"toString(List<? extends DocTree>, Element)","url":"toString(java.util.List,javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"toString(TreePath)","url":"toString(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"PhaseOneResult","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"toStringDebug()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"toStringFullyQualified()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"toStringOneLine(Tree)","url":"toStringOneLine(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitValue","l":"toStringSimple()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"toStringSimple()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"toStringSimple(AnnotationMirror, StringBuilder)","url":"toStringSimple(javax.lang.model.element.AnnotationMirror,java.lang.StringBuilder)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"toStringSimple(AnnotationMirror)","url":"toStringSimple(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"toStringSimple(AnnotationMirrorSet)","url":"toStringSimple(org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"toStringTruncated(Tree, int)","url":"toStringTruncated(com.sun.source.tree.Tree,int)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"A2F","l":"toTUConstraint()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"toTUConstraint()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"F2A","l":"toTUConstraint()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"FIsA","l":"toTUConstraint()"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedInt(@org.checkerframework.checker.signedness.qual.Unsigned char)","url":"toUnsignedInt(@org.checkerframework.checker.signedness.qual.Unsignedchar)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedLong(@org.checkerframework.checker.signedness.qual.Unsigned char)","url":"toUnsignedLong(@org.checkerframework.checker.signedness.qual.Unsignedchar)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedShort(@org.checkerframework.checker.signedness.qual.Unsigned byte)","url":"toUnsignedShort(@org.checkerframework.checker.signedness.qual.Unsignedbyte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedShort(@org.checkerframework.checker.signedness.qual.Unsigned char)","url":"toUnsignedShort(@org.checkerframework.checker.signedness.qual.Unsignedchar)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedString(@org.checkerframework.checker.signedness.qual.Unsigned byte, int)","url":"toUnsignedString(@org.checkerframework.checker.signedness.qual.Unsignedbyte,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedString(@org.checkerframework.checker.signedness.qual.Unsigned byte)","url":"toUnsignedString(@org.checkerframework.checker.signedness.qual.Unsignedbyte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedString(@org.checkerframework.checker.signedness.qual.Unsigned short, int)","url":"toUnsignedString(@org.checkerframework.checker.signedness.qual.Unsignedshort,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedString(@org.checkerframework.checker.signedness.qual.Unsigned short)","url":"toUnsignedString(@org.checkerframework.checker.signedness.qual.Unsignedshort)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"transfer"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"transferFunction"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"TransferInput(Node, Analysis<V, S, ?>, S, S)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis,S,S)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"TransferInput(Node, Analysis<V, S, ?>, S)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis,S)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"TransferInput(Node, Analysis<V, S, ?>, TransferResult<V, S>)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis,org.checkerframework.dataflow.analysis.TransferResult)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"TransferInput(TransferInput<V, S>)","url":"%3Cinit%3E(org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"TransferResult(V, Map<TypeMirror, S>)","url":"%3Cinit%3E(V,java.util.Map)"},{"p":"org.checkerframework.checker.index","c":"OffsetDependentTypesHelper","l":"transform(JavaExpression)","url":"transform(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"transform(JavaExpression)","url":"transform(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"translateAssertWithAssertionsEnabled(AssertTree)","url":"translateAssertWithAssertionsEnabled(com.sun.source.tree.AssertTree)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"translateAssignment(Tree, Node, ExpressionTree)","url":"translateAssignment(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"translateAssignment(Tree, Node, Node)","url":"translateAssignment(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"translations"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExplicitThisNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnaryOperationNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"tree"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"treeAnnotator"},{"p":"org.checkerframework.framework.type.treeannotator","c":"TreeAnnotator","l":"TreeAnnotator(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"treeBuilder"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"TreeBuilder(ProcessingEnvironment)","url":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug","l":"TreeDebug()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"treeLookup"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"treeLookup"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"treeLookupToString(Map<Tree, Set<Node>>)","url":"treeLookupToString(java.util.Map)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeParser","l":"TreeParser(ProcessingEnvironment)","url":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"treePath"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"treePathCacher"},{"p":"org.checkerframework.framework.util","c":"TreePathCacher","l":"TreePathCacher()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.util.debug","c":"TreePrinter","l":"TreePrinter()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"trees"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"trees"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"trees"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"trees"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"TreeScannerWithDefaults()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"treesWithSuppressWarnings"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"treeUids"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"treeUtil"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"treeUtil"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"trueFlowRule"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"trueSucc"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil","l":"tryFormatSatisfiability(String)","url":"tryFormatSatisfiability(java.lang.String)"},{"p":"org.checkerframework.checker.i18nformatter.util","c":"I18nFormatUtil","l":"tryFormatSatisfiability(String)","url":"tryFormatSatisfiability(java.lang.String)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TSubU","l":"TSubU(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TSubU","l":"TSubU(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TSuperU","l":"TSuperU(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TSuperU","l":"TSuperU(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TUConstraint","l":"TUConstraint(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror, boolean)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"type"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"type"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"type"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"type"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"type"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordComponentStub","l":"type"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"type"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferredValue.InferredType","l":"type"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"type(Tree)","url":"type(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"type1Kind"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"type2Kind"},{"p":"org.checkerframework.framework.ajava","c":"TypeAnnotationMover","l":"TypeAnnotationMover(Map<String, TypeElement>, Elements)","url":"%3Cinit%3E(java.util.Map,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"typeAnnotator"},{"p":"org.checkerframework.framework.type.typeannotator","c":"TypeAnnotator","l":"TypeAnnotator(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"TypeArgInferenceUtil()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory.ParameterizedExecutableType","l":"typeArgs"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"typeArgs"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"typeArgumentInference"},{"p":"org.checkerframework.framework.util","c":"TypeArgumentMapper","l":"TypeArgumentMapper()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"TypeCastNode(TypeCastTree, Node, TypeMirror, Types)","url":"%3Cinit%3E(com.sun.source.tree.TypeCastTree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.framework.test","c":"TypecheckExecutor","l":"TypecheckExecutor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"TypecheckResult(TestConfiguration, CompilationResult, List<TestDiagnostic>, List<TestDiagnostic>, List<TestDiagnostic>)","url":"%3Cinit%3E(org.checkerframework.framework.test.TestConfiguration,org.checkerframework.framework.test.CompilationResult,java.util.List,java.util.List,java.util.List)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"typeCheckVectorCopyIntoArgument(MethodInvocationTree, List<? extends AnnotatedTypeMirror>)","url":"typeCheckVectorCopyIntoArgument(com.sun.source.tree.MethodInvocationTree,java.util.List)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"typeElementKinds()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"typeFormatter"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"typeFromClass(Class<?>, Types, Elements)","url":"typeFromClass(java.lang.Class,javax.lang.model.util.Types,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"typeFromUse(MethodInvocationTree)","url":"typeFromUse(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"typeFromUse(NewClassTree)","url":"typeFromUse(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"typeHierarchy"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"typeHierarchy"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"typeHierarchy"},{"p":"org.checkerframework.framework.util","c":"TypeInformationPresenter","l":"TypeInformationPresenter(AnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.qual","c":"DefaultFor","l":"typeKinds()"},{"p":"org.checkerframework.framework.qual","c":"UpperBoundFor","l":"typeKinds()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"typeOf(Tree)","url":"typeOf(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker","l":"TypeOutputtingChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"typeParameterBoundTAPosition(int, int, int)","url":"typeParameterBoundTAPosition(int,int,int)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"typeParameterTAPosition(int, int)","url":"typeParameterTAPosition(int,int)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"typeProcess(TypeElement, TreePath)","url":"typeProcess(javax.lang.model.element.TypeElement,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.common.util.debug","c":"SignaturePrinter","l":"typeProcess(TypeElement, TreePath)","url":"typeProcess(javax.lang.model.element.TypeElement,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.common.util.debug","c":"TreePrinter","l":"typeProcess(TypeElement, TreePath)","url":"typeProcess(javax.lang.model.element.TypeElement,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"typeProcess(TypeElement, TreePath)","url":"typeProcess(javax.lang.model.element.TypeElement,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"typeProcess(TypeElement, TreePath)","url":"typeProcess(javax.lang.model.element.TypeElement,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"AbstractTypeProcessor","l":"typeProcess(TypeElement, TreePath)","url":"typeProcess(javax.lang.model.element.TypeElement,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"BasicTypeProcessor","l":"typeProcess(TypeElement, TreePath)","url":"typeProcess(javax.lang.model.element.TypeElement,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"typeProcessingOver()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"typeProcessingOver()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"typeProcessingOver()"},{"p":"org.checkerframework.common.util.count","c":"AnnotationStatistics","l":"typeProcessingOver()"},{"p":"org.checkerframework.common.util.count","c":"JavaCodeStatistics","l":"typeProcessingOver()"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"typeProcessingOver()"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor","l":"typeProcessingOver()"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"typeProcessingOver()"},{"p":"org.checkerframework.javacutil","c":"AbstractTypeProcessor","l":"typeProcessingOver()"},{"p":"org.checkerframework.common.util.debug","c":"SignaturePrinter","l":"typeProcessingStart()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"typeProcessingStart()"},{"p":"org.checkerframework.javacutil","c":"AbstractTypeProcessor","l":"typeProcessingStart()"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"types"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"types"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"types"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"types"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"types"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"types"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"types"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"types"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"types"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"types"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"types"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Equalities","l":"types"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Subtypes","l":"types"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Supertypes","l":"types"},{"p":"org.checkerframework.framework.qual","c":"DefaultFor","l":"types()"},{"p":"org.checkerframework.framework.qual","c":"UpperBoundFor","l":"types()"},{"p":"org.checkerframework.javacutil","c":"TypeSystemError","l":"TypeSystemError(String, Object...)","url":"%3Cinit%3E(java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.javacutil","c":"TypeSystemError","l":"TypeSystemError(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"typeToInstantiate"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"typeTreeKinds()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"typeValidator"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_WILDCARD"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TUConstraint","l":"typeVariable"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"typeVariablesFromUse(AnnotatedTypeMirror.AnnotatedDeclaredType, TypeElement)","url":"typeVariablesFromUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"typeVariablesFromUse(AnnotatedTypeMirror.AnnotatedDeclaredType, TypeElement)","url":"typeVariablesFromUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.type","c":"TypeVariableSubstitutor","l":"TypeVariableSubstitutor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"typeVarSubstitutor"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"TypeVisualizer()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"UBQualifier()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"UI"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"uiAnonClasses"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"uid"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"uid"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"uiLambdas"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TUConstraint","l":"uIsArg"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil","l":"UNANCHORED_PARAMETER_PATTERN"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"unannotatedType(TypeMirror)","url":"unannotatedType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"unaryMinus()"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"unaryMinus()"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"unaryMinus()"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"unaryMinus()"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"unaryMinus()"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"unaryMinus()"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"unaryMinus()"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"unaryMinus()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"unaryNumericPromotion(Node)","url":"unaryNumericPromotion(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"UnaryOperation(TypeMirror, Tree.Kind, JavaExpression)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror,com.sun.source.tree.Tree.Kind,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"UnaryOperation(UnaryOperationNode, JavaExpression)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.UnaryOperationNode,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnaryOperationNode","l":"UnaryOperationNode(UnaryTree, Node)","url":"%3Cinit%3E(com.sun.source.tree.UnaryTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"unaryPlus()"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"unaryPlus()"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"unaryPlus()"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"unaryPlus()"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"unaryPlus()"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"unaryPlus()"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"unaryPlus()"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"unaryPlus()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils.MemberReferenceKind","l":"UNBOUND"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.BoundType","l":"UNBOUNDED"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"unbox(Node)","url":"unbox(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"uncheckedExceptionTypes"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode.ExtendedNodeType","l":"UNCONDITIONAL_JUMP"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"UNDER_INITALIZATION"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"underInitializationValueElement"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"underlyingAST"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST","l":"UnderlyingAST(UnderlyingAST.Kind)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.UnderlyingAST.Kind)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"underlyingType"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"underlyingType"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_WILDCARD"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"union(ConversionCategory, ConversionCategory)","url":"union(org.checkerframework.checker.formatter.qual.ConversionCategory,org.checkerframework.checker.formatter.qual.ConversionCategory)"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"union(I18nConversionCategory, I18nConversionCategory)","url":"union(org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory,org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"union(Range)","url":"union(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"UNIQUE"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"uniqueName(String)","url":"uniqueName(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"uniqueName(String)","url":"uniqueName(java.lang.String)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"UnitsAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter","l":"UnitsAnnotatedTypeFormatter(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotationClassLoader","l":"UnitsAnnotationClassLoader(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsAnnotationFormatter","l":"UnitsAnnotationFormatter(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsChecker","l":"UnitsChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsFormattingVisitor","l":"UnitsFormattingVisitor(BaseTypeChecker, AnnotationFormatter, boolean, boolean)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.framework.util.AnnotationFormatter,boolean,boolean)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierHierarchy","l":"UnitsQualifierHierarchy()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierKindHierarchy","l":"UnitsQualifierKindHierarchy(Collection<Class<? extends Annotation>>, Elements)","url":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"UnitsRelationsDefault()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"UnitsRelationsTools()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"UnitsTools()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units","c":"UnitsVisitor","l":"UnitsVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"UNKNOWN"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"UNKNOWN_INITIALIZATION"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"UNKNOWN_NAME"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"Unknown(Node)","url":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"Unknown(Tree)","url":"%3Cinit%3E(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"Unknown(TypeMirror, String)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror,java.lang.String)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"Unknown(TypeMirror)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"UNKNOWNFORMAT"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"unknownInitializationValueElement"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"UNKNOWNKEYFOR"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"UNKNOWNREGEX"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"UNKNOWNREGEX_SET"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"unknownTAPosition()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"UNKNOWNVAL"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"unmodifiableSet(Collection<? extends AnnotationMirror>)","url":"unmodifiableSet(java.util.Collection)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"UNNEEDED_SUPPRESSION_KEY"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"unparse(String)","url":"unparse(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"unshorthandProcessorNames(String, List<String>, boolean)","url":"unshorthandProcessorNames(java.lang.String,java.util.List,boolean)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"UNSIGNED"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnsignedRightShiftNode","l":"UnsignedRightShiftNode(BinaryTree, Node, Node)","url":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"unsignedShiftRight(Number)","url":"unsignedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"unsignedShiftRight(Number)","url":"unsignedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"unsignedShiftRight(Number)","url":"unsignedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"unsignedShiftRight(Number)","url":"unsignedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"unsignedShiftRight(Number)","url":"unsignedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"unsignedShiftRight(Number)","url":"unsignedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"unsignedShiftRight(Number)","url":"unsignedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"unsignedShiftRight(Range)","url":"unsignedShiftRight(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"UNUSED"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"UNUSED"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory","l":"unusedWhenElement"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"unusedWhenElement"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"updateForArrayAssignment(ArrayAccess, V)","url":"updateForArrayAssignment(org.checkerframework.dataflow.expression.ArrayAccess,V)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"updateForAssignment(Node, V)","url":"updateForAssignment(org.checkerframework.dataflow.cfg.node.Node,V)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"updateForFieldAccessAssignment(FieldAccess, V)","url":"updateForFieldAccessAssignment(org.checkerframework.dataflow.expression.FieldAccess,V)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"updateForLocalVariableAssignment(LocalVariable, V)","url":"updateForLocalVariableAssignment(org.checkerframework.dataflow.expression.LocalVariable,V)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"updateForMethodCall(MethodInvocationNode, GenericAnnotatedTypeFactory<CFValue, LockStore, ?, ?>, CFValue)","url":"updateForMethodCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.GenericAnnotatedTypeFactory,org.checkerframework.framework.flow.CFValue)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"updateForMethodCall(MethodInvocationNode, GenericAnnotatedTypeFactory<V, S, ?, ?>, V)","url":"updateForMethodCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.GenericAnnotatedTypeFactory,V)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"updateMappingToImmutableSet(Map<T, AnnotationMirrorSet>, T, AnnotationMirrorSet)","url":"updateMappingToImmutableSet(java.util.Map,T,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"updateMappingToMutableSet(Map<T, AnnotationMirrorSet>, T, AnnotationMirror)","url":"updateMappingToMutableSet(java.util.Map,T,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"updateNodeValues(Node, TransferResult<V, S>)","url":"updateNodeValues(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferResult)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"updateStoreWithTempVar(TransferResult<AccumulationValue, AccumulationStore>, Node)","url":"updateStoreWithTempVar(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"updateStoreWithTempVar(TransferResult<CFValue, CFStore>, Node)","url":"updateStoreWithTempVar(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"EqualitiesSolver","l":"updateTargetsWithPartiallyInferredType(TargetConstraints.Equalities, ConstraintMap, AnnotatedTypeFactory)","url":"updateTargetsWithPartiallyInferredType(org.checkerframework.framework.util.typeinference.solver.TargetConstraints.Equalities,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.BoundType","l":"UPPER"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"UPPER_BOUND"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"upperBound(TypeMirror)","url":"upperBound(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"UpperBoundAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"UpperBoundChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"upperBoundLiteralValueElement"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"upperBoundTarget()"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"upperBoundTarget()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"UpperBoundTransfer(CFAnalysis)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"UpperBoundTreeAnnotator(UpperBoundAnnotatedTypeFactory)","url":"%3Cinit%3E(org.checkerframework.checker.index.upperbound.UpperBoundAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundVisitor","l":"UpperBoundVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"upstreamCheckerNames"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"USE_VALUE_CHECKER"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"useAllcheckersPrefix"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"useConservativeDefault(String)","url":"useConservativeDefault(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"UserError","l":"UserError(String, Object...)","url":"%3Cinit%3E(java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.javacutil","c":"UserError","l":"UserError(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"usesSequentialSemantics()"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"validate(boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"validateSet(AnnotationMirrorSet, TypeMirror, AnnotatedTypeFactory)","url":"validateSet(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"validateTargetLocation(Tree, AnnotatedTypeMirror, TypeUseLocation)","url":"validateTargetLocation(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.qual.TypeUseLocation)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"validateThenBuild(boolean)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"validateType(Tree, AnnotatedTypeMirror)","url":"validateType(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"validateType(Tree, AnnotatedTypeMirror)","url":"validateType(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"validateType(Tree, AnnotatedTypeMirror)","url":"validateType(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"validateTypeOf(Tree)","url":"validateTypeOf(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"validateTypeOf(Tree)","url":"validateTypeOf(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"validateVariablesTargetLocation(Tree, AnnotatedTypeMirror)","url":"validateVariablesTargetLocation(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"validateWildCardTargetLocation(AnnotatedTypeMirror.AnnotatedWildcardType, Tree)","url":"validateWildCardTargetLocation(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"validLocationsForUncheckedCodeDefaults()"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"validTargets()"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"validTargets()"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"validTargets()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"validTargets()"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"validTargets()"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"validTargets()"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"validTargets()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"value"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"value"},{"p":"org.checkerframework.checker.builder.qual","c":"CalledMethods","l":"value()"},{"p":"org.checkerframework.checker.builder.qual","c":"NotCalledMethods","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"CalledMethods","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"CalledMethodsPredicate","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethods","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethods.List","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethodsIf.List","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethodsVarArgs","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"RequiresCalledMethods","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"RequiresCalledMethods.List","l":"value()"},{"p":"org.checkerframework.checker.fenum.qual","c":"Fenum","l":"value()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.Result","l":"value()"},{"p":"org.checkerframework.checker.formatter.qual","c":"Format","l":"value()"},{"p":"org.checkerframework.checker.formatter.qual","c":"InvalidFormat","l":"value()"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nFormat","l":"value()"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nFormatFor","l":"value()"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nInvalidFormat","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOf","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOf.List","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOfIf.List","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"IndexFor","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"IndexOrHigh","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"IndexOrLow","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"LTEqLengthOf","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"LTLengthOf","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"LTOMLengthOf","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"LengthOf","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"LessThan","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"NegativeIndexFor","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"SameLen","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"SearchIndexFor","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"SubstringIndexFor","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"UpperBoundLiteral","l":"value()"},{"p":"org.checkerframework.checker.initialization.qual","c":"UnderInitialization","l":"value()"},{"p":"org.checkerframework.checker.initialization.qual","c":"UnknownInitialization","l":"value()"},{"p":"org.checkerframework.checker.lock.qual","c":"EnsuresLockHeld","l":"value()"},{"p":"org.checkerframework.checker.lock.qual","c":"EnsuresLockHeld.List","l":"value()"},{"p":"org.checkerframework.checker.lock.qual","c":"EnsuresLockHeldIf.List","l":"value()"},{"p":"org.checkerframework.checker.lock.qual","c":"GuardSatisfied","l":"value()"},{"p":"org.checkerframework.checker.lock.qual","c":"GuardedBy","l":"value()"},{"p":"org.checkerframework.checker.lock.qual","c":"Holding","l":"value()"},{"p":"org.checkerframework.checker.mustcall.qual","c":"CreatesMustCallFor","l":"value()"},{"p":"org.checkerframework.checker.mustcall.qual","c":"CreatesMustCallFor.List","l":"value()"},{"p":"org.checkerframework.checker.mustcall.qual","c":"InheritableMustCall","l":"value()"},{"p":"org.checkerframework.checker.mustcall.qual","c":"MustCall","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"AssertNonNullIfNonNull","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresKeyFor","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresKeyFor.List","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresKeyForIf.List","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresNonNull","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresNonNull.List","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresNonNullIf.List","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"KeyFor","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"RequiresNonNull","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"RequiresNonNull.List","l":"value()"},{"p":"org.checkerframework.checker.regex.qual","c":"PartialRegex","l":"value()"},{"p":"org.checkerframework.checker.regex.qual","c":"Regex","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"A","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"K","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"N","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"UnitsRelations","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"cd","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"g","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"m","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"m2","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"mPERs","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"mPERs2","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"mol","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"radians","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"s","l":"value()"},{"p":"org.checkerframework.common.initializedfields.qual","c":"EnsuresInitializedFields","l":"value()"},{"p":"org.checkerframework.common.initializedfields.qual","c":"EnsuresInitializedFields.List","l":"value()"},{"p":"org.checkerframework.common.initializedfields.qual","c":"InitializedFields","l":"value()"},{"p":"org.checkerframework.common.reflection.qual","c":"ClassBound","l":"value()"},{"p":"org.checkerframework.common.reflection.qual","c":"ClassVal","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"ArrayLen","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"BoolVal","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"DoesNotMatchRegex","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"DoubleVal","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"EnsuresMinLenIf.List","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"EnumVal","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"IntVal","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"MatchesRegex","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"MinLen","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"StringVal","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"AnnotatedFor","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"CFComment","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"Covariant","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"DefaultFor","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"DefaultQualifier","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"DefaultQualifier.List","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"DefaultQualifierForUse","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"EnsuresQualifier.List","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"EnsuresQualifierIf.List","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"HasQualifierParameter","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"MonotonicQualifier","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"NoDefaultQualifierForUse","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"NoQualifierParameter","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"PolymorphicQualifier","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"QualifierArgument","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"QualifierForLiterals","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"RelevantJavaTypes","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"RequiresQualifier.List","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"StubFiles","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"SubtypeOf","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"TargetLocations","l":"value()"},{"p":"org.checkerframework.framework.source","c":"SupportedLintOptions","l":"value()"},{"p":"org.checkerframework.framework.source","c":"SupportedOptions","l":"value()"},{"p":"org.checkerframework.framework.source","c":"SuppressWarningsPrefix","l":"value()"},{"p":"org.checkerframework.framework.test","c":"TestRootDirectory","l":"value()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"ValueAnnotatedTypeFactory(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"ValueChecker()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueGlb","l":"ValueGlb()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"ValueLiteral(TypeMirror, Object)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror,java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"ValueLiteral(TypeMirror, ValueLiteralNode)","url":"%3Cinit%3E(javax.lang.model.type.TypeMirror,org.checkerframework.dataflow.cfg.node.ValueLiteralNode)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"ValueLiteralNode(LiteralTree)","url":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueLub","l":"ValueLub(boolean)","url":"%3Cinit%3E(boolean)"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"valueOf(AnnotatedTypeMirror, AnnotatedTypeMirror)","url":"valueOf(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"valueOf(AtmKind, AtmKind)","url":"valueOf(org.checkerframework.framework.util.AtmKind,org.checkerframework.framework.util.AtmKind)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.InvocationType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.FormatType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator.PropagationDirection","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationChecker.AliasAnalysis","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.BeforeOrAfter","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.Direction","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.FlowRule","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.Kind","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.Kind","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block.BlockType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlock.SpecialBlockType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode.ExtendedNodeType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer.VisualizeWhere","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant.Type","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.qual","c":"Pure.Kind","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory.ScanState","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.BoundType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils.MemberReferenceKind","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils.PrimitiveConversionKind","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.InvocationType","l":"values()"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"values()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.FormatType","l":"values()"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"values()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator.PropagationDirection","l":"values()"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"values()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationChecker.AliasAnalysis","l":"values()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.BeforeOrAfter","l":"values()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.Direction","l":"values()"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.FlowRule","l":"values()"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.Kind","l":"values()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.Kind","l":"values()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block.BlockType","l":"values()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlock.SpecialBlockType","l":"values()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode.ExtendedNodeType","l":"values()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer.VisualizeWhere","l":"values()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant.Type","l":"values()"},{"p":"org.checkerframework.dataflow.qual","c":"Pure.Kind","l":"values()"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"values()"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"values()"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"values()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"values()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"values()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory.ScanState","l":"values()"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"values()"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"values()"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.BoundType","l":"values()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"values()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils.MemberReferenceKind","l":"values()"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils.PrimitiveConversionKind","l":"values()"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"ValueTransfer(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","url":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"ValueVisitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.InvocationType","l":"VARARG"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"VariableDeclarationNode(VariableTree)","url":"%3Cinit%3E(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"variableElementFromTree(Tree)","url":"variableElementFromTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"variableElementFromUse(ExpressionTree)","url":"variableElementFromUse(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"verbose"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"verifyHierarchy(Map<DefaultQualifierKindHierarchy.DefaultQualifierKind, Set<DefaultQualifierKindHierarchy.DefaultQualifierKind>>)","url":"verifyHierarchy(java.util.Map)"},{"p":"org.checkerframework.dataflow.expression","c":"ViewpointAdaptJavaExpression","l":"viewpointAdapt(JavaExpression, JavaExpression, List<JavaExpression>)","url":"viewpointAdapt(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression,java.util.List)"},{"p":"org.checkerframework.dataflow.expression","c":"ViewpointAdaptJavaExpression","l":"viewpointAdapt(JavaExpression, JavaExpression)","url":"viewpointAdapt(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ViewpointAdaptJavaExpression","l":"viewpointAdapt(JavaExpression, List<JavaExpression>)","url":"viewpointAdapt(org.checkerframework.dataflow.expression.JavaExpression,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"viewpointAdaptConstructor(AnnotatedTypeMirror, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"viewpointAdaptConstructor(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"ViewpointAdapter","l":"viewpointAdaptConstructor(AnnotatedTypeMirror, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"viewpointAdaptConstructor(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"viewpointAdaptDependentTypeAnnotation(GenericAnnotatedTypeFactory<?, ?, ?, ?>, StringToJavaExpression, Tree)","url":"viewpointAdaptDependentTypeAnnotation(org.checkerframework.framework.type.GenericAnnotatedTypeFactory,org.checkerframework.framework.util.StringToJavaExpression,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"viewpointAdapter"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"viewpointAdaptMember(AnnotatedTypeMirror, Element, AnnotatedTypeMirror)","url":"viewpointAdaptMember(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"ViewpointAdapter","l":"viewpointAdaptMember(AnnotatedTypeMirror, Element, AnnotatedTypeMirror)","url":"viewpointAdaptMember(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"viewpointAdaptMethod(AnnotatedTypeMirror, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"viewpointAdaptMethod(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"ViewpointAdapter","l":"viewpointAdaptMethod(AnnotatedTypeMirror, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","url":"viewpointAdaptMethod(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"viewpointAdaptTypeParameterBounds(AnnotatedTypeMirror, List<AnnotatedTypeParameterBounds>)","url":"viewpointAdaptTypeParameterBounds(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"ViewpointAdapter","l":"viewpointAdaptTypeParameterBounds(AnnotatedTypeMirror, List<AnnotatedTypeParameterBounds>)","url":"viewpointAdaptTypeParameterBounds(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.List)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visit(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM)","url":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visit(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM)","url":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visit(AnnotatedTypeMirror, AnnotatedTypeMirror, Void)","url":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visit(AnnotatedTypeMirror, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","url":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visit(AnnotatedTypeMirror, P)","url":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visit(AnnotatedTypeMirror, P)","url":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visit(AnnotatedTypeMirror, P)","url":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visit(AnnotatedTypeMirror, Set<AnnotatedTypeMirror>)","url":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.Set)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visit(AnnotatedTypeMirror)","url":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopierWithReplacement.Visitor","l":"visit(AnnotatedTypeMirror)","url":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visit(AnnotatedTypeMirror)","url":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visit(AnnotatedTypeMirror)","url":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visit(AnnotatedTypeMirror)","url":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visit(AnnotatedTypeMirror)","url":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(AnnotationDeclaration, Node)","url":"visit(com.github.javaparser.ast.body.AnnotationDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(AnnotationDeclaration, Void)","url":"visit(com.github.javaparser.ast.body.AnnotationDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(AnnotationMemberDeclaration, Node)","url":"visit(com.github.javaparser.ast.body.AnnotationMemberDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(AnnotationMemberDeclaration, Void)","url":"visit(com.github.javaparser.ast.body.AnnotationMemberDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ArrayAccessExpr, Node)","url":"visit(com.github.javaparser.ast.expr.ArrayAccessExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ArrayAccessExpr, Void)","url":"visit(com.github.javaparser.ast.expr.ArrayAccessExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ArrayCreationExpr, Node)","url":"visit(com.github.javaparser.ast.expr.ArrayCreationExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ArrayCreationExpr, Void)","url":"visit(com.github.javaparser.ast.expr.ArrayCreationExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ArrayCreationLevel, Node)","url":"visit(com.github.javaparser.ast.ArrayCreationLevel,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ArrayCreationLevel, Void)","url":"visit(com.github.javaparser.ast.ArrayCreationLevel,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ArrayInitializerExpr, Node)","url":"visit(com.github.javaparser.ast.expr.ArrayInitializerExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ArrayInitializerExpr, Void)","url":"visit(com.github.javaparser.ast.expr.ArrayInitializerExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationTransferVisitor","l":"visit(ArrayType, AnnotatedTypeMirror)","url":"visit(com.github.javaparser.ast.type.ArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ArrayType, Node)","url":"visit(com.github.javaparser.ast.type.ArrayType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ArrayType, Void)","url":"visit(com.github.javaparser.ast.type.ArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(AssertStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.AssertStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(AssertStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.AssertStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(AssignExpr, Node)","url":"visit(com.github.javaparser.ast.expr.AssignExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(AssignExpr, Void)","url":"visit(com.github.javaparser.ast.expr.AssignExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(BinaryExpr, Node)","url":"visit(com.github.javaparser.ast.expr.BinaryExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil.StringLiteralConcatenateVisitor","l":"visit(BinaryExpr, Void)","url":"visit(com.github.javaparser.ast.expr.BinaryExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(BinaryExpr, Void)","url":"visit(com.github.javaparser.ast.expr.BinaryExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(BlockComment, Node)","url":"visit(com.github.javaparser.ast.comments.BlockComment,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(BlockComment, Void)","url":"visit(com.github.javaparser.ast.comments.BlockComment,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(BlockStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.BlockStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(BlockStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.BlockStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(BooleanLiteralExpr, Node)","url":"visit(com.github.javaparser.ast.expr.BooleanLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(BooleanLiteralExpr, Void)","url":"visit(com.github.javaparser.ast.expr.BooleanLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(BreakStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.BreakStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(BreakStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.BreakStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(CastExpr, Node)","url":"visit(com.github.javaparser.ast.expr.CastExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(CastExpr, Void)","url":"visit(com.github.javaparser.ast.expr.CastExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(CatchClause, Node)","url":"visit(com.github.javaparser.ast.stmt.CatchClause,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(CatchClause, Void)","url":"visit(com.github.javaparser.ast.stmt.CatchClause,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(CharLiteralExpr, Node)","url":"visit(com.github.javaparser.ast.expr.CharLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(CharLiteralExpr, Void)","url":"visit(com.github.javaparser.ast.expr.CharLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ClassExpr, Node)","url":"visit(com.github.javaparser.ast.expr.ClassExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ClassExpr, Void)","url":"visit(com.github.javaparser.ast.expr.ClassExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ClassOrInterfaceDeclaration, Node)","url":"visit(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ClassOrInterfaceDeclaration, Void)","url":"visit(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationTransferVisitor","l":"visit(ClassOrInterfaceType, AnnotatedTypeMirror)","url":"visit(com.github.javaparser.ast.type.ClassOrInterfaceType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ClassOrInterfaceType, Node)","url":"visit(com.github.javaparser.ast.type.ClassOrInterfaceType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ClassOrInterfaceType, Void)","url":"visit(com.github.javaparser.ast.type.ClassOrInterfaceType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(CompactConstructorDeclaration, Node)","url":"visit(com.github.javaparser.ast.body.CompactConstructorDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(CompactConstructorDeclaration, Void)","url":"visit(com.github.javaparser.ast.body.CompactConstructorDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(CompilationUnit, Node)","url":"visit(com.github.javaparser.ast.CompilationUnit,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(CompilationUnit, Void)","url":"visit(com.github.javaparser.ast.CompilationUnit,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ConditionalExpr, Node)","url":"visit(com.github.javaparser.ast.expr.ConditionalExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ConditionalExpr, Void)","url":"visit(com.github.javaparser.ast.expr.ConditionalExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ConstructorDeclaration, Node)","url":"visit(com.github.javaparser.ast.body.ConstructorDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ConstructorDeclaration, Void)","url":"visit(com.github.javaparser.ast.body.ConstructorDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ContinueStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.ContinueStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ContinueStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.ContinueStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(DoStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.DoStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(DoStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.DoStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(DoubleLiteralExpr, Node)","url":"visit(com.github.javaparser.ast.expr.DoubleLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(DoubleLiteralExpr, Void)","url":"visit(com.github.javaparser.ast.expr.DoubleLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(EmptyStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.EmptyStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(EmptyStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.EmptyStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(EnclosedExpr, Node)","url":"visit(com.github.javaparser.ast.expr.EnclosedExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(EnclosedExpr, Void)","url":"visit(com.github.javaparser.ast.expr.EnclosedExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(EnumConstantDeclaration, Node)","url":"visit(com.github.javaparser.ast.body.EnumConstantDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(EnumConstantDeclaration, Void)","url":"visit(com.github.javaparser.ast.body.EnumConstantDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(EnumDeclaration, Node)","url":"visit(com.github.javaparser.ast.body.EnumDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(EnumDeclaration, Void)","url":"visit(com.github.javaparser.ast.body.EnumDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ExplicitConstructorInvocationStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ExplicitConstructorInvocationStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ExpressionStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.ExpressionStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ExpressionStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.ExpressionStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(FieldAccessExpr, Node)","url":"visit(com.github.javaparser.ast.expr.FieldAccessExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(FieldAccessExpr, Void)","url":"visit(com.github.javaparser.ast.expr.FieldAccessExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(FieldDeclaration, Node)","url":"visit(com.github.javaparser.ast.body.FieldDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TypeAnnotationMover","l":"visit(FieldDeclaration, Void)","url":"visit(com.github.javaparser.ast.body.FieldDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(FieldDeclaration, Void)","url":"visit(com.github.javaparser.ast.body.FieldDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ForEachStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.ForEachStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ForEachStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.ForEachStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ForStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.ForStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ForStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.ForStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(IfStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.IfStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(IfStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.IfStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ImportDeclaration, Node)","url":"visit(com.github.javaparser.ast.ImportDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ImportDeclaration, Void)","url":"visit(com.github.javaparser.ast.ImportDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(InitializerDeclaration, Node)","url":"visit(com.github.javaparser.ast.body.InitializerDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(InitializerDeclaration, Void)","url":"visit(com.github.javaparser.ast.body.InitializerDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(InstanceOfExpr, Node)","url":"visit(com.github.javaparser.ast.expr.InstanceOfExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(InstanceOfExpr, Void)","url":"visit(com.github.javaparser.ast.expr.InstanceOfExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(IntegerLiteralExpr, Node)","url":"visit(com.github.javaparser.ast.expr.IntegerLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(IntegerLiteralExpr, Void)","url":"visit(com.github.javaparser.ast.expr.IntegerLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(IntersectionType, Node)","url":"visit(com.github.javaparser.ast.type.IntersectionType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(IntersectionType, Void)","url":"visit(com.github.javaparser.ast.type.IntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(JavadocComment, Node)","url":"visit(com.github.javaparser.ast.comments.JavadocComment,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(JavadocComment, Void)","url":"visit(com.github.javaparser.ast.comments.JavadocComment,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visit(JavaExpression, P)","url":"visit(org.checkerframework.dataflow.expression.JavaExpression,P)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(LabeledStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.LabeledStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(LabeledStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.LabeledStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(LambdaExpr, Node)","url":"visit(com.github.javaparser.ast.expr.LambdaExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(LambdaExpr, Void)","url":"visit(com.github.javaparser.ast.expr.LambdaExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(LineComment, Node)","url":"visit(com.github.javaparser.ast.comments.LineComment,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(LineComment, Void)","url":"visit(com.github.javaparser.ast.comments.LineComment,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(LocalClassDeclarationStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.LocalClassDeclarationStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(LocalClassDeclarationStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.LocalClassDeclarationStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(LocalRecordDeclarationStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.LocalRecordDeclarationStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(LocalRecordDeclarationStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.LocalRecordDeclarationStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(LongLiteralExpr, Node)","url":"visit(com.github.javaparser.ast.expr.LongLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(LongLiteralExpr, Void)","url":"visit(com.github.javaparser.ast.expr.LongLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(MarkerAnnotationExpr, Node)","url":"visit(com.github.javaparser.ast.expr.MarkerAnnotationExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(MarkerAnnotationExpr, Void)","url":"visit(com.github.javaparser.ast.expr.MarkerAnnotationExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(MemberValuePair, Node)","url":"visit(com.github.javaparser.ast.expr.MemberValuePair,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(MemberValuePair, Void)","url":"visit(com.github.javaparser.ast.expr.MemberValuePair,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(MethodCallExpr, Node)","url":"visit(com.github.javaparser.ast.expr.MethodCallExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(MethodCallExpr, Void)","url":"visit(com.github.javaparser.ast.expr.MethodCallExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(MethodDeclaration, Node)","url":"visit(com.github.javaparser.ast.body.MethodDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TypeAnnotationMover","l":"visit(MethodDeclaration, Void)","url":"visit(com.github.javaparser.ast.body.MethodDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(MethodDeclaration, Void)","url":"visit(com.github.javaparser.ast.body.MethodDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(MethodReferenceExpr, Node)","url":"visit(com.github.javaparser.ast.expr.MethodReferenceExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(MethodReferenceExpr, Void)","url":"visit(com.github.javaparser.ast.expr.MethodReferenceExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(Modifier, Node)","url":"visit(com.github.javaparser.ast.Modifier,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(Modifier, Void)","url":"visit(com.github.javaparser.ast.Modifier,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ModuleDeclaration, Node)","url":"visit(com.github.javaparser.ast.modules.ModuleDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ModuleDeclaration, Void)","url":"visit(com.github.javaparser.ast.modules.ModuleDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ModuleExportsDirective, Node)","url":"visit(com.github.javaparser.ast.modules.ModuleExportsDirective,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ModuleExportsDirective, Void)","url":"visit(com.github.javaparser.ast.modules.ModuleExportsDirective,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ModuleOpensDirective, Node)","url":"visit(com.github.javaparser.ast.modules.ModuleOpensDirective,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ModuleOpensDirective, Void)","url":"visit(com.github.javaparser.ast.modules.ModuleOpensDirective,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ModuleProvidesDirective, Node)","url":"visit(com.github.javaparser.ast.modules.ModuleProvidesDirective,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ModuleProvidesDirective, Void)","url":"visit(com.github.javaparser.ast.modules.ModuleProvidesDirective,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ModuleRequiresDirective, Node)","url":"visit(com.github.javaparser.ast.modules.ModuleRequiresDirective,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ModuleRequiresDirective, Void)","url":"visit(com.github.javaparser.ast.modules.ModuleRequiresDirective,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ModuleUsesDirective, Node)","url":"visit(com.github.javaparser.ast.modules.ModuleUsesDirective,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ModuleUsesDirective, Void)","url":"visit(com.github.javaparser.ast.modules.ModuleUsesDirective,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(Name, Node)","url":"visit(com.github.javaparser.ast.expr.Name,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(Name, Void)","url":"visit(com.github.javaparser.ast.expr.Name,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(NameExpr, Node)","url":"visit(com.github.javaparser.ast.expr.NameExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(NameExpr, Void)","url":"visit(com.github.javaparser.ast.expr.NameExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(NormalAnnotationExpr, Node)","url":"visit(com.github.javaparser.ast.expr.NormalAnnotationExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(NormalAnnotationExpr, Void)","url":"visit(com.github.javaparser.ast.expr.NormalAnnotationExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(NullLiteralExpr, Node)","url":"visit(com.github.javaparser.ast.expr.NullLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(NullLiteralExpr, Void)","url":"visit(com.github.javaparser.ast.expr.NullLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ObjectCreationExpr, Node)","url":"visit(com.github.javaparser.ast.expr.ObjectCreationExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ObjectCreationExpr, Void)","url":"visit(com.github.javaparser.ast.expr.ObjectCreationExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(PackageDeclaration, Node)","url":"visit(com.github.javaparser.ast.PackageDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(PackageDeclaration, Void)","url":"visit(com.github.javaparser.ast.PackageDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(Parameter, Node)","url":"visit(com.github.javaparser.ast.body.Parameter,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(Parameter, Void)","url":"visit(com.github.javaparser.ast.body.Parameter,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationTransferVisitor","l":"visit(PrimitiveType, AnnotatedTypeMirror)","url":"visit(com.github.javaparser.ast.type.PrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(PrimitiveType, Node)","url":"visit(com.github.javaparser.ast.type.PrimitiveType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(PrimitiveType, Void)","url":"visit(com.github.javaparser.ast.type.PrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ReceiverParameter, Node)","url":"visit(com.github.javaparser.ast.body.ReceiverParameter,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ReceiverParameter, Void)","url":"visit(com.github.javaparser.ast.body.ReceiverParameter,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(RecordDeclaration, Node)","url":"visit(com.github.javaparser.ast.body.RecordDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(RecordDeclaration, Void)","url":"visit(com.github.javaparser.ast.body.RecordDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ReturnStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.ReturnStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ReturnStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.ReturnStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(SimpleName, Node)","url":"visit(com.github.javaparser.ast.expr.SimpleName,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(SimpleName, Void)","url":"visit(com.github.javaparser.ast.expr.SimpleName,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(SingleMemberAnnotationExpr, Node)","url":"visit(com.github.javaparser.ast.expr.SingleMemberAnnotationExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(SingleMemberAnnotationExpr, Void)","url":"visit(com.github.javaparser.ast.expr.SingleMemberAnnotationExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(StringLiteralExpr, Node)","url":"visit(com.github.javaparser.ast.expr.StringLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(StringLiteralExpr, Void)","url":"visit(com.github.javaparser.ast.expr.StringLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(StubUnit, Void)","url":"visit(com.github.javaparser.ast.StubUnit,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(SuperExpr, Node)","url":"visit(com.github.javaparser.ast.expr.SuperExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(SuperExpr, Void)","url":"visit(com.github.javaparser.ast.expr.SuperExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(SwitchEntry, Node)","url":"visit(com.github.javaparser.ast.stmt.SwitchEntry,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(SwitchEntry, Void)","url":"visit(com.github.javaparser.ast.stmt.SwitchEntry,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(SwitchExpr, Node)","url":"visit(com.github.javaparser.ast.expr.SwitchExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(SwitchExpr, Void)","url":"visit(com.github.javaparser.ast.expr.SwitchExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(SwitchStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.SwitchStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(SwitchStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.SwitchStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(SynchronizedStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.SynchronizedStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(SynchronizedStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.SynchronizedStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(TextBlockLiteralExpr, Node)","url":"visit(com.github.javaparser.ast.expr.TextBlockLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(TextBlockLiteralExpr, Void)","url":"visit(com.github.javaparser.ast.expr.TextBlockLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ThisExpr, Node)","url":"visit(com.github.javaparser.ast.expr.ThisExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ThisExpr, Void)","url":"visit(com.github.javaparser.ast.expr.ThisExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ThrowStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.ThrowStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ThrowStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.ThrowStmt,java.lang.Void)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"visit(TreePath)","url":"visit(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"visit(TreePath)","url":"visit(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(TryStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.TryStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(TryStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.TryStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(TypeExpr, Node)","url":"visit(com.github.javaparser.ast.expr.TypeExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(TypeExpr, Void)","url":"visit(com.github.javaparser.ast.expr.TypeExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationTransferVisitor","l":"visit(TypeParameter, AnnotatedTypeMirror)","url":"visit(com.github.javaparser.ast.type.TypeParameter,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(TypeParameter, Node)","url":"visit(com.github.javaparser.ast.type.TypeParameter,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(TypeParameter, Void)","url":"visit(com.github.javaparser.ast.type.TypeParameter,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(UnaryExpr, Node)","url":"visit(com.github.javaparser.ast.expr.UnaryExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(UnaryExpr, Void)","url":"visit(com.github.javaparser.ast.expr.UnaryExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(UnionType, Node)","url":"visit(com.github.javaparser.ast.type.UnionType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(UnionType, Void)","url":"visit(com.github.javaparser.ast.type.UnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(UnknownType, Node)","url":"visit(com.github.javaparser.ast.type.UnknownType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(UnknownType, Void)","url":"visit(com.github.javaparser.ast.type.UnknownType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(UnparsableStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.UnparsableStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(UnparsableStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.UnparsableStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(VariableDeclarationExpr, Node)","url":"visit(com.github.javaparser.ast.expr.VariableDeclarationExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(VariableDeclarationExpr, Void)","url":"visit(com.github.javaparser.ast.expr.VariableDeclarationExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(VariableDeclarator, Node)","url":"visit(com.github.javaparser.ast.body.VariableDeclarator,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(VariableDeclarator, Void)","url":"visit(com.github.javaparser.ast.body.VariableDeclarator,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(VarType, Node)","url":"visit(com.github.javaparser.ast.type.VarType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(VarType, Void)","url":"visit(com.github.javaparser.ast.type.VarType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(VoidType, Node)","url":"visit(com.github.javaparser.ast.type.VoidType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(VoidType, Void)","url":"visit(com.github.javaparser.ast.type.VoidType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(WhileStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.WhileStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(WhileStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.WhileStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(WildcardType, Node)","url":"visit(com.github.javaparser.ast.type.WildcardType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(WildcardType, Void)","url":"visit(com.github.javaparser.ast.type.WildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(YieldStmt, Node)","url":"visit(com.github.javaparser.ast.stmt.YieldStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(YieldStmt, Void)","url":"visit(com.github.javaparser.ast.stmt.YieldStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitAnnotatedType(AnnotatedTypeTree, Node)","url":"visitAnnotatedType(com.sun.source.tree.AnnotatedTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitAnnotatedType(AnnotatedTypeTree, Void)","url":"visitAnnotatedType(com.sun.source.tree.AnnotatedTypeTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitAnnotatedType(AnnotatedTypeTree, Void)","url":"visitAnnotatedType(com.sun.source.tree.AnnotatedTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitAnnotatedType(AnnotatedTypeTree, Void)","url":"visitAnnotatedType(com.sun.source.tree.AnnotatedTypeTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitAnnotatedType(List<? extends AnnotationTree>, Tree)","url":"visitAnnotatedType(java.util.List,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitAnnotatedType(List<? extends AnnotationTree>, Tree)","url":"visitAnnotatedType(java.util.List,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitAnnotation(AnnotationTree, Node)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.common.returnsreceiver","c":"ReturnsReceiverVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitAnonymousClassBody(ClassTree, List<BodyDeclaration<?>>)","url":"visitAnonymousClassBody(com.sun.source.tree.ClassTree,java.util.List)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Array(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitArray_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Array(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitArray_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitArray_Array(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitArray_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitArray_Array(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedArrayType, Void)","url":"visitArray_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitArray_Array(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedArrayType, Void)","url":"visitArray_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitArray_Array(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedArrayType, Void)","url":"visitArray_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Declared(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitArray_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Declared(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitArray_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitArray_Declared(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitArray_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitArray_Declared(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitArray_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Executable(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitArray_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Executable(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitArray_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Intersection(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitArray_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Intersection(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitArray_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitArray_Intersection(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitArray_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitArray_Intersection(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitArray_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_None(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitArray_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_None(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitArray_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Null(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitArray_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Null(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitArray_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitArray_Null(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedNullType, Void)","url":"visitArray_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Primitive(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitArray_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Primitive(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitArray_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Typevar(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitArray_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Typevar(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitArray_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitArray_Typevar(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitArray_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitArray_Typevar(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitArray_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Union(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitArray_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Union(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitArray_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Wildcard(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitArray_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Wildcard(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitArray_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitArray_Wildcard(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitArray_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitArray_Wildcard(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitArray_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror)","url":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","url":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, P)","url":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, P)","url":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, P)","url":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, P)","url":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, Set<AnnotatedTypeMirror>)","url":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.util.Set)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, Tree)","url":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitArrayAccess(ArrayAccess, P)","url":"visitArrayAccess(org.checkerframework.dataflow.expression.ArrayAccess,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitArrayAccess(ArrayAccess, P)","url":"visitArrayAccess(org.checkerframework.dataflow.expression.ArrayAccess,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitArrayAccess(ArrayAccess, Void)","url":"visitArrayAccess(org.checkerframework.dataflow.expression.ArrayAccess,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitArrayAccess(ArrayAccessNode, P)","url":"visitArrayAccess(org.checkerframework.dataflow.cfg.node.ArrayAccessNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitArrayAccess(ArrayAccessNode, P)","url":"visitArrayAccess(org.checkerframework.dataflow.cfg.node.ArrayAccessNode,P)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"visitArrayAccess(ArrayAccessNode, TransferInput<NullnessNoInitValue, NullnessNoInitStore>)","url":"visitArrayAccess(org.checkerframework.dataflow.cfg.node.ArrayAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitArrayAccess(ArrayAccessNode, TransferInput<V, S>)","url":"visitArrayAccess(org.checkerframework.dataflow.cfg.node.ArrayAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitArrayAccess(ArrayAccessTree, Node)","url":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundVisitor","l":"visitArrayAccess(ArrayAccessTree, Void)","url":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundVisitor","l":"visitArrayAccess(ArrayAccessTree, Void)","url":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitArrayAccess(ArrayAccessTree, Void)","url":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitArrayAccess(ArrayAccessTree, Void)","url":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitArrayAccess(ArrayAccessTree, Void)","url":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitArrayAccess(ArrayAccessTree, Void)","url":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitArrayAccess(ArrayAccessTree, Void)","url":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitArrayCreation(ArrayCreation, P)","url":"visitArrayCreation(org.checkerframework.dataflow.expression.ArrayCreation,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitArrayCreation(ArrayCreation, P)","url":"visitArrayCreation(org.checkerframework.dataflow.expression.ArrayCreation,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitArrayCreation(ArrayCreation, Void)","url":"visitArrayCreation(org.checkerframework.dataflow.expression.ArrayCreation,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitArrayCreation(ArrayCreationNode, P)","url":"visitArrayCreation(org.checkerframework.dataflow.cfg.node.ArrayCreationNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitArrayCreation(ArrayCreationNode, P)","url":"visitArrayCreation(org.checkerframework.dataflow.cfg.node.ArrayCreationNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitArrayType(ArrayTypeNode, P)","url":"visitArrayType(org.checkerframework.dataflow.cfg.node.ArrayTypeNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitArrayType(ArrayTypeNode, P)","url":"visitArrayType(org.checkerframework.dataflow.cfg.node.ArrayTypeNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitArrayType(ArrayTypeTree, Node)","url":"visitArrayType(com.sun.source.tree.ArrayTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitArrayType(ArrayTypeTree, Void)","url":"visitArrayType(com.sun.source.tree.ArrayTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitArrayType(ArrayTypeTree, Void)","url":"visitArrayType(com.sun.source.tree.ArrayTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitAssert(AssertTree, Node)","url":"visitAssert(com.sun.source.tree.AssertTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitAssert(AssertTree, Void)","url":"visitAssert(com.sun.source.tree.AssertTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitAssert(AssertTree, Void)","url":"visitAssert(com.sun.source.tree.AssertTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitAssert(AssertTree, Void)","url":"visitAssert(com.sun.source.tree.AssertTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitAssertionError(AssertionErrorNode, P)","url":"visitAssertionError(org.checkerframework.dataflow.cfg.node.AssertionErrorNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitAssertionError(AssertionErrorNode, P)","url":"visitAssertionError(org.checkerframework.dataflow.cfg.node.AssertionErrorNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitAssignment(AssignmentNode, P)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitAssignment(AssignmentNode, P)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,P)"},{"p":"org.checkerframework.common.initializedfields","c":"InitializedFieldsTransfer","l":"visitAssignment(AssignmentNode, TransferInput<AccumulationValue, AccumulationStore>)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenTransfer","l":"visitAssignment(AssignmentNode, TransferInput<CFValue, CFStore>)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitAssignment(AssignmentNode, TransferInput<CFValue, CFStore>)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitAssignment(AssignmentNode, TransferInput<CFValue, CFStore>)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingTransfer","l":"visitAssignment(AssignmentNode, TransferInput<CFValue, CFStore>)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"visitAssignment(AssignmentNode, TransferInput<CFValue, InitializationStore>)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"visitAssignment(AssignmentNode, TransferInput<Constant, ConstantPropagationStore>)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"visitAssignment(AssignmentNode, TransferInput<UnusedAbstractValue, BusyExprStore>)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"visitAssignment(AssignmentNode, TransferInput<UnusedAbstractValue, LiveVarStore>)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionTransfer","l":"visitAssignment(AssignmentNode, TransferInput<UnusedAbstractValue, ReachingDefinitionStore>)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitAssignment(AssignmentNode, TransferInput<V, S>)","url":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitAssignment(AssignmentTree, Node)","url":"visitAssignment(com.sun.source.tree.AssignmentTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"visitAssignment(AssignmentTree, Void)","url":"visitAssignment(com.sun.source.tree.AssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"visitAssignment(AssignmentTree, Void)","url":"visitAssignment(com.sun.source.tree.AssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitAssignment(AssignmentTree, Void)","url":"visitAssignment(com.sun.source.tree.AssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitAssignment(AssignmentTree, Void)","url":"visitAssignment(com.sun.source.tree.AssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitAssignment(AssignmentTree, Void)","url":"visitAssignment(com.sun.source.tree.AssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"visitAssignment(AssignmentTree, Void)","url":"visitAssignment(com.sun.source.tree.AssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitAssignment(AssignmentTree, Void)","url":"visitAssignment(com.sun.source.tree.AssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","url":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","url":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","url":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","url":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory.KeyLookupTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","url":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"PropagationTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","url":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"TreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","url":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitBinary(BinaryTree, Node)","url":"visitBinary(com.sun.source.tree.BinaryTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"visitBinary(BinaryTree, Void)","url":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"visitBinary(BinaryTree, Void)","url":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitBinary(BinaryTree, Void)","url":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitBinary(BinaryTree, Void)","url":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"visitBinary(BinaryTree, Void)","url":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitBinary(BinaryTree, Void)","url":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitBinary(BinaryTree, Void)","url":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitBinaryOperation(BinaryOperation, P)","url":"visitBinaryOperation(org.checkerframework.dataflow.expression.BinaryOperation,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitBinaryOperation(BinaryOperation, P)","url":"visitBinaryOperation(org.checkerframework.dataflow.expression.BinaryOperation,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitBinaryOperation(BinaryOperation, Void)","url":"visitBinaryOperation(org.checkerframework.dataflow.expression.BinaryOperation,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitBindingPattern17(Tree, Node)","url":"visitBindingPattern17(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitBindingPattern17(Tree, Void)","url":"visitBindingPattern17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitBindingPattern17(Tree, Void)","url":"visitBindingPattern17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitBindingPattern17(Tree, Void)","url":"visitBindingPattern17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitBitwiseAnd(BitwiseAndNode, P)","url":"visitBitwiseAnd(org.checkerframework.dataflow.cfg.node.BitwiseAndNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitBitwiseAnd(BitwiseAndNode, P)","url":"visitBitwiseAnd(org.checkerframework.dataflow.cfg.node.BitwiseAndNode,P)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitBitwiseAnd(BitwiseAndNode, TransferInput<CFValue, CFStore>)","url":"visitBitwiseAnd(org.checkerframework.dataflow.cfg.node.BitwiseAndNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitBitwiseAnd(BitwiseAndNode, TransferInput<CFValue, CFStore>)","url":"visitBitwiseAnd(org.checkerframework.dataflow.cfg.node.BitwiseAndNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitBitwiseComplement(BitwiseComplementNode, P)","url":"visitBitwiseComplement(org.checkerframework.dataflow.cfg.node.BitwiseComplementNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitBitwiseComplement(BitwiseComplementNode, P)","url":"visitBitwiseComplement(org.checkerframework.dataflow.cfg.node.BitwiseComplementNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitBitwiseComplement(BitwiseComplementNode, TransferInput<CFValue, CFStore>)","url":"visitBitwiseComplement(org.checkerframework.dataflow.cfg.node.BitwiseComplementNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitBitwiseOr(BitwiseOrNode, P)","url":"visitBitwiseOr(org.checkerframework.dataflow.cfg.node.BitwiseOrNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitBitwiseOr(BitwiseOrNode, P)","url":"visitBitwiseOr(org.checkerframework.dataflow.cfg.node.BitwiseOrNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitBitwiseOr(BitwiseOrNode, TransferInput<CFValue, CFStore>)","url":"visitBitwiseOr(org.checkerframework.dataflow.cfg.node.BitwiseOrNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitBitwiseXor(BitwiseXorNode, P)","url":"visitBitwiseXor(org.checkerframework.dataflow.cfg.node.BitwiseXorNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitBitwiseXor(BitwiseXorNode, P)","url":"visitBitwiseXor(org.checkerframework.dataflow.cfg.node.BitwiseXorNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitBitwiseXor(BitwiseXorNode, TransferInput<CFValue, CFStore>)","url":"visitBitwiseXor(org.checkerframework.dataflow.cfg.node.BitwiseXorNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitBlock(BlockTree, Node)","url":"visitBlock(com.sun.source.tree.BlockTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitBlock(BlockTree, Void)","url":"visitBlock(com.sun.source.tree.BlockTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitBlock(BlockTree, Void)","url":"visitBlock(com.sun.source.tree.BlockTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitBooleanLiteral(BooleanLiteralNode, P)","url":"visitBooleanLiteral(org.checkerframework.dataflow.cfg.node.BooleanLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitBooleanLiteral(BooleanLiteralNode, P)","url":"visitBooleanLiteral(org.checkerframework.dataflow.cfg.node.BooleanLiteralNode,P)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElementImpl","l":"visitBounds(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","url":"visitBounds(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitBreak(BreakTree, Node)","url":"visitBreak(com.sun.source.tree.BreakTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitBreak(BreakTree, Void)","url":"visitBreak(com.sun.source.tree.BreakTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitBreak(BreakTree, Void)","url":"visitBreak(com.sun.source.tree.BreakTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitCase(CaseNode, P)","url":"visitCase(org.checkerframework.dataflow.cfg.node.CaseNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitCase(CaseNode, P)","url":"visitCase(org.checkerframework.dataflow.cfg.node.CaseNode,P)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitCase(CaseNode, TransferInput<CFValue, CFStore>)","url":"visitCase(org.checkerframework.dataflow.cfg.node.CaseNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitCase(CaseNode, TransferInput<V, S>)","url":"visitCase(org.checkerframework.dataflow.cfg.node.CaseNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitCase(CaseTree, Node)","url":"visitCase(com.sun.source.tree.CaseTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitCase(CaseTree, Void)","url":"visitCase(com.sun.source.tree.CaseTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitCase(CaseTree, Void)","url":"visitCase(com.sun.source.tree.CaseTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitCatch(CatchTree, Node)","url":"visitCatch(com.sun.source.tree.CatchTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitCatch(CatchTree, Void)","url":"visitCatch(com.sun.source.tree.CatchTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitCatch(CatchTree, Void)","url":"visitCatch(com.sun.source.tree.CatchTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"visitCatch(CatchTree, Void)","url":"visitCatch(com.sun.source.tree.CatchTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitCatch(CatchTree, Void)","url":"visitCatch(com.sun.source.tree.CatchTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitCharacterLiteral(CharacterLiteralNode, P)","url":"visitCharacterLiteral(org.checkerframework.dataflow.cfg.node.CharacterLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitCharacterLiteral(CharacterLiteralNode, P)","url":"visitCharacterLiteral(org.checkerframework.dataflow.cfg.node.CharacterLiteralNode,P)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesTreeAnnotator","l":"visitClass(ClassTree, AnnotatedTypeMirror)","url":"visitClass(com.sun.source.tree.ClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitClass(ClassTree, Node)","url":"visitClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"visitClass(ClassTree, P)","url":"visitClass(com.sun.source.tree.ClassTree,P)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitClass(ClassTree, Void)","url":"visitClass(com.sun.source.tree.ClassTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitClass(ClassTree, Void)","url":"visitClass(com.sun.source.tree.ClassTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitClass(ClassTree, Void)","url":"visitClass(com.sun.source.tree.ClassTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitClass(ClassTree, Void)","url":"visitClass(com.sun.source.tree.ClassTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitClassDeclaration(ClassDeclarationNode, P)","url":"visitClassDeclaration(org.checkerframework.dataflow.cfg.node.ClassDeclarationNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitClassDeclaration(ClassDeclarationNode, P)","url":"visitClassDeclaration(org.checkerframework.dataflow.cfg.node.ClassDeclarationNode,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitClassName(ClassName, P)","url":"visitClassName(org.checkerframework.dataflow.expression.ClassName,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitClassName(ClassName, P)","url":"visitClassName(org.checkerframework.dataflow.expression.ClassName,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitClassName(ClassName, Void)","url":"visitClassName(org.checkerframework.dataflow.expression.ClassName,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitClassName(ClassNameNode, P)","url":"visitClassName(org.checkerframework.dataflow.cfg.node.ClassNameNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitClassName(ClassNameNode, P)","url":"visitClassName(org.checkerframework.dataflow.cfg.node.ClassNameNode,P)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitClassName(ClassNameNode, TransferInput<V, S>)","url":"visitClassName(org.checkerframework.dataflow.cfg.node.ClassNameNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitClassTypeParameters(AnnotatedTypeMirror.AnnotatedDeclaredType, ClassTree)","url":"visitClassTypeParameters(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitCompilationUnit(CompilationUnitTree, Node)","url":"visitCompilationUnit(com.sun.source.tree.CompilationUnitTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitCompilationUnit(CompilationUnitTree, Void)","url":"visitCompilationUnit(com.sun.source.tree.CompilationUnitTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitCompilationUnit(CompilationUnitTree, Void)","url":"visitCompilationUnit(com.sun.source.tree.CompilationUnitTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitCompilationUnit(CompilationUnitTree, Void)","url":"visitCompilationUnit(com.sun.source.tree.CompilationUnitTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"visitCompoundAssignment(CompoundAssignmentTree, AnnotatedTypeMirror)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockTreeAnnotator","l":"visitCompoundAssignment(CompoundAssignmentTree, AnnotatedTypeMirror)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitCompoundAssignment(CompoundAssignmentTree, AnnotatedTypeMirror)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory.KeyLookupTreeAnnotator","l":"visitCompoundAssignment(CompoundAssignmentTree, AnnotatedTypeMirror)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"PropagationTreeAnnotator","l":"visitCompoundAssignment(CompoundAssignmentTree, AnnotatedTypeMirror)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Node)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.checker.units","c":"UnitsVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitConditionalAnd(ConditionalAndNode, P)","url":"visitConditionalAnd(org.checkerframework.dataflow.cfg.node.ConditionalAndNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitConditionalAnd(ConditionalAndNode, P)","url":"visitConditionalAnd(org.checkerframework.dataflow.cfg.node.ConditionalAndNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitConditionalAnd(ConditionalAndNode, TransferInput<CFValue, CFStore>)","url":"visitConditionalAnd(org.checkerframework.dataflow.cfg.node.ConditionalAndNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitConditionalExpression(ConditionalExpressionTree, Node)","url":"visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitConditionalExpression(ConditionalExpressionTree, Void)","url":"visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"visitConditionalExpression(ConditionalExpressionTree, Void)","url":"visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitConditionalExpression(ConditionalExpressionTree, Void)","url":"visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitConditionalExpression(ConditionalExpressionTree, Void)","url":"visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitConditionalExpression(ConditionalExpressionTree, Void)","url":"visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitConditionalNot(ConditionalNotNode, P)","url":"visitConditionalNot(org.checkerframework.dataflow.cfg.node.ConditionalNotNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitConditionalNot(ConditionalNotNode, P)","url":"visitConditionalNot(org.checkerframework.dataflow.cfg.node.ConditionalNotNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitConditionalNot(ConditionalNotNode, TransferInput<CFValue, CFStore>)","url":"visitConditionalNot(org.checkerframework.dataflow.cfg.node.ConditionalNotNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitConditionalNot(ConditionalNotNode, TransferInput<V, S>)","url":"visitConditionalNot(org.checkerframework.dataflow.cfg.node.ConditionalNotNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitConditionalOr(ConditionalOrNode, P)","url":"visitConditionalOr(org.checkerframework.dataflow.cfg.node.ConditionalOrNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitConditionalOr(ConditionalOrNode, P)","url":"visitConditionalOr(org.checkerframework.dataflow.cfg.node.ConditionalOrNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitConditionalOr(ConditionalOrNode, TransferInput<CFValue, CFStore>)","url":"visitConditionalOr(org.checkerframework.dataflow.cfg.node.ConditionalOrNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitContinue(ContinueTree, Node)","url":"visitContinue(com.sun.source.tree.ContinueTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitContinue(ContinueTree, Void)","url":"visitContinue(com.sun.source.tree.ContinueTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitContinue(ContinueTree, Void)","url":"visitContinue(com.sun.source.tree.ContinueTree,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Array(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitDeclared_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Array(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitDeclared_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Array(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedArrayType, Void)","url":"visitDeclared_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Declared(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitDeclared_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Declared(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitDeclared_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitDeclared_Declared(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitDeclared_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitDeclared_Declared(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitDeclared_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Declared(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitDeclared_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitDeclared_Declared(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitDeclared_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Executable(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitDeclared_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Executable(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitDeclared_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Intersection(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitDeclared_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Intersection(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitDeclared_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitDeclared_Intersection(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitDeclared_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Intersection(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitDeclared_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_None(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitDeclared_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_None(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitDeclared_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Null(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitDeclared_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Null(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitDeclared_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Null(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedNullType, Void)","url":"visitDeclared_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Primitive(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitDeclared_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Primitive(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitDeclared_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitDeclared_Primitive(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","url":"visitDeclared_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Primitive(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","url":"visitDeclared_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitDeclared_Primitive(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","url":"visitDeclared_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Typevar(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitDeclared_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Typevar(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitDeclared_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitDeclared_Typevar(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitDeclared_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Typevar(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitDeclared_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Union(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitDeclared_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Union(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitDeclared_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitDeclared_Union(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","url":"visitDeclared_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Union(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","url":"visitDeclared_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Wildcard(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitDeclared_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Wildcard(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitDeclared_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitDeclared_Wildcard(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitDeclared_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Wildcard(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitDeclared_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror)","url":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","url":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, P)","url":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, P)","url":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, P)","url":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, P)","url":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, Set<AnnotatedTypeMirror>)","url":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.util.Set)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","url":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor.ReportTypeValidator","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","url":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"PropagationTypeAnnotator","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitDeconstructionPattern21(Tree, Void)","url":"visitDeconstructionPattern21(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitDeconstructorPattern(DeconstructorPatternNode, P)","url":"visitDeconstructorPattern(org.checkerframework.dataflow.cfg.node.DeconstructorPatternNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitDeconstructorPattern(DeconstructorPatternNode, P)","url":"visitDeconstructorPattern(org.checkerframework.dataflow.cfg.node.DeconstructorPatternNode,P)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitDeconstructorPattern(DeconstructorPatternNode, TransferInput<V, S>)","url":"visitDeconstructorPattern(org.checkerframework.dataflow.cfg.node.DeconstructorPatternNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitDoubleLiteral(DoubleLiteralNode, P)","url":"visitDoubleLiteral(org.checkerframework.dataflow.cfg.node.DoubleLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitDoubleLiteral(DoubleLiteralNode, P)","url":"visitDoubleLiteral(org.checkerframework.dataflow.cfg.node.DoubleLiteralNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitDoWhileLoop(DoWhileLoopTree, Node)","url":"visitDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitDoWhileLoop(DoWhileLoopTree, Void)","url":"visitDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitDoWhileLoop(DoWhileLoopTree, Void)","url":"visitDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitDoWhileLoop(DoWhileLoopTree, Void)","url":"visitDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitDoWhileLoop(DoWhileLoopTree, Void)","url":"visitDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visited"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner.Visited","l":"Visited()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitedNodes"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitEmptyStatement(EmptyStatementTree, Node)","url":"visitEmptyStatement(com.sun.source.tree.EmptyStatementTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitEmptyStatement(EmptyStatementTree, Void)","url":"visitEmptyStatement(com.sun.source.tree.EmptyStatementTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitEmptyStatement(EmptyStatementTree, Void)","url":"visitEmptyStatement(com.sun.source.tree.EmptyStatementTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitEnhancedForLoop(EnhancedForLoopTree, Node)","url":"visitEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitEnhancedForLoop(EnhancedForLoopTree, Void)","url":"visitEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitEnhancedForLoop(EnhancedForLoopTree, Void)","url":"visitEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitEnhancedForLoop(EnhancedForLoopTree, Void)","url":"visitEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitEnhancedForLoop(EnhancedForLoopTree, Void)","url":"visitEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitEqualTo(EqualToNode, P)","url":"visitEqualTo(org.checkerframework.dataflow.cfg.node.EqualToNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitEqualTo(EqualToNode, P)","url":"visitEqualTo(org.checkerframework.dataflow.cfg.node.EqualToNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitEqualTo(EqualToNode, TransferInput<CFValue, CFStore>)","url":"visitEqualTo(org.checkerframework.dataflow.cfg.node.EqualToNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"visitEqualTo(EqualToNode, TransferInput<Constant, ConstantPropagationStore>)","url":"visitEqualTo(org.checkerframework.dataflow.cfg.node.EqualToNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitEqualTo(EqualToNode, TransferInput<V, S>)","url":"visitEqualTo(org.checkerframework.dataflow.cfg.node.EqualToNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitErroneous(ErroneousTree, Node)","url":"visitErroneous(com.sun.source.tree.ErroneousTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitErroneous(ErroneousTree, Void)","url":"visitErroneous(com.sun.source.tree.ErroneousTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitErroneous(ErroneousTree, Void)","url":"visitErroneous(com.sun.source.tree.ErroneousTree,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Array(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitExecutable_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Array(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitExecutable_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Declared(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitExecutable_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Declared(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitExecutable_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Executable(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitExecutable_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Executable(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitExecutable_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitExecutable_Executable(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitExecutable_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Intersection(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitExecutable_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Intersection(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitExecutable_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_None(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitExecutable_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_None(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitExecutable_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Null(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitExecutable_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Null(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitExecutable_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Primitive(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitExecutable_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Primitive(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitExecutable_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Typevar(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitExecutable_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Typevar(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitExecutable_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Union(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitExecutable_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Union(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitExecutable_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Wildcard(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitExecutable_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Wildcard(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitExecutable_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror)","url":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","url":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, P)","url":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, P)","url":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, P)","url":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, P)","url":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, Set<AnnotatedTypeMirror>)","url":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.Set)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory.CommitmentTypeAnnotator","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, Void)","url":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, Void)","url":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"TypeAnnotator","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, Void)","url":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitExplicitThis(ExplicitThisNode, P)","url":"visitExplicitThis(org.checkerframework.dataflow.cfg.node.ExplicitThisNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitExplicitThis(ExplicitThisNode, P)","url":"visitExplicitThis(org.checkerframework.dataflow.cfg.node.ExplicitThisNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitExports(ExportsTree, Node)","url":"visitExports(com.sun.source.tree.ExportsTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitExports(ExportsTree, Void)","url":"visitExports(com.sun.source.tree.ExportsTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitExpressionStatement(ExpressionStatementNode, P)","url":"visitExpressionStatement(org.checkerframework.dataflow.cfg.node.ExpressionStatementNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitExpressionStatement(ExpressionStatementNode, P)","url":"visitExpressionStatement(org.checkerframework.dataflow.cfg.node.ExpressionStatementNode,P)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitExpressionStatement(ExpressionStatementNode, TransferInput<V, S>)","url":"visitExpressionStatement(org.checkerframework.dataflow.cfg.node.ExpressionStatementNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitExpressionStatement(ExpressionStatementTree, Node)","url":"visitExpressionStatement(com.sun.source.tree.ExpressionStatementTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitExpressionStatement(ExpressionStatementTree, Void)","url":"visitExpressionStatement(com.sun.source.tree.ExpressionStatementTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitExpressionStatement(ExpressionStatementTree, Void)","url":"visitExpressionStatement(com.sun.source.tree.ExpressionStatementTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitExpressionStatement(ExpressionStatementTree, Void)","url":"visitExpressionStatement(com.sun.source.tree.ExpressionStatementTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitFieldAccess(FieldAccess, P)","url":"visitFieldAccess(org.checkerframework.dataflow.expression.FieldAccess,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitFieldAccess(FieldAccess, P)","url":"visitFieldAccess(org.checkerframework.dataflow.expression.FieldAccess,P)"},{"p":"org.checkerframework.common.value","c":"JavaExpressionOptimizer","l":"visitFieldAccess(FieldAccess, Void)","url":"visitFieldAccess(org.checkerframework.dataflow.expression.FieldAccess,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitFieldAccess(FieldAccess, Void)","url":"visitFieldAccess(org.checkerframework.dataflow.expression.FieldAccess,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitFieldAccess(FieldAccessNode, P)","url":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitFieldAccess(FieldAccessNode, P)","url":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,P)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitFieldAccess(FieldAccessNode, TransferInput<CFValue, CFStore>)","url":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitFieldAccess(FieldAccessNode, TransferInput<CFValue, CFStore>)","url":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"visitFieldAccess(FieldAccessNode, TransferInput<NullnessNoInitValue, NullnessNoInitStore>)","url":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitFieldAccess(FieldAccessNode, TransferInput<V, S>)","url":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitFloatingDivision(FloatingDivisionNode, P)","url":"visitFloatingDivision(org.checkerframework.dataflow.cfg.node.FloatingDivisionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitFloatingDivision(FloatingDivisionNode, P)","url":"visitFloatingDivision(org.checkerframework.dataflow.cfg.node.FloatingDivisionNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitFloatingDivision(FloatingDivisionNode, TransferInput<CFValue, CFStore>)","url":"visitFloatingDivision(org.checkerframework.dataflow.cfg.node.FloatingDivisionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitFloatingRemainder(FloatingRemainderNode, P)","url":"visitFloatingRemainder(org.checkerframework.dataflow.cfg.node.FloatingRemainderNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitFloatingRemainder(FloatingRemainderNode, P)","url":"visitFloatingRemainder(org.checkerframework.dataflow.cfg.node.FloatingRemainderNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitFloatingRemainder(FloatingRemainderNode, TransferInput<CFValue, CFStore>)","url":"visitFloatingRemainder(org.checkerframework.dataflow.cfg.node.FloatingRemainderNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitFloatLiteral(FloatLiteralNode, P)","url":"visitFloatLiteral(org.checkerframework.dataflow.cfg.node.FloatLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitFloatLiteral(FloatLiteralNode, P)","url":"visitFloatLiteral(org.checkerframework.dataflow.cfg.node.FloatLiteralNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitForLoop(ForLoopTree, Node)","url":"visitForLoop(com.sun.source.tree.ForLoopTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitForLoop(ForLoopTree, Void)","url":"visitForLoop(com.sun.source.tree.ForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitForLoop(ForLoopTree, Void)","url":"visitForLoop(com.sun.source.tree.ForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitForLoop(ForLoopTree, Void)","url":"visitForLoop(com.sun.source.tree.ForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitForLoop(ForLoopTree, Void)","url":"visitForLoop(com.sun.source.tree.ForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitFormalParameter(FormalParameter, P)","url":"visitFormalParameter(org.checkerframework.dataflow.expression.FormalParameter,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitFormalParameter(FormalParameter, P)","url":"visitFormalParameter(org.checkerframework.dataflow.expression.FormalParameter,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitFormalParameter(FormalParameter, Void)","url":"visitFormalParameter(org.checkerframework.dataflow.expression.FormalParameter,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"ViewpointAdaptJavaExpression","l":"visitFormalParameter(FormalParameter, Void)","url":"visitFormalParameter(org.checkerframework.dataflow.expression.FormalParameter,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitGreaterThan(GreaterThanNode, P)","url":"visitGreaterThan(org.checkerframework.dataflow.cfg.node.GreaterThanNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitGreaterThan(GreaterThanNode, P)","url":"visitGreaterThan(org.checkerframework.dataflow.cfg.node.GreaterThanNode,P)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"visitGreaterThan(GreaterThanNode, TransferInput<CFValue, CFStore>)","url":"visitGreaterThan(org.checkerframework.dataflow.cfg.node.GreaterThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"visitGreaterThan(GreaterThanNode, TransferInput<CFValue, CFStore>)","url":"visitGreaterThan(org.checkerframework.dataflow.cfg.node.GreaterThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitGreaterThan(GreaterThanNode, TransferInput<CFValue, CFStore>)","url":"visitGreaterThan(org.checkerframework.dataflow.cfg.node.GreaterThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitGreaterThanOrEqual(GreaterThanOrEqualNode, P)","url":"visitGreaterThanOrEqual(org.checkerframework.dataflow.cfg.node.GreaterThanOrEqualNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitGreaterThanOrEqual(GreaterThanOrEqualNode, P)","url":"visitGreaterThanOrEqual(org.checkerframework.dataflow.cfg.node.GreaterThanOrEqualNode,P)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"visitGreaterThanOrEqual(GreaterThanOrEqualNode, TransferInput<CFValue, CFStore>)","url":"visitGreaterThanOrEqual(org.checkerframework.dataflow.cfg.node.GreaterThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"visitGreaterThanOrEqual(GreaterThanOrEqualNode, TransferInput<CFValue, CFStore>)","url":"visitGreaterThanOrEqual(org.checkerframework.dataflow.cfg.node.GreaterThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitGreaterThanOrEqual(GreaterThanOrEqualNode, TransferInput<CFValue, CFStore>)","url":"visitGreaterThanOrEqual(org.checkerframework.dataflow.cfg.node.GreaterThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitHistory"},{"p":"org.checkerframework.checker.initialization","c":"InitializationFieldAccessTreeAnnotator","l":"visitIdentifier(IdentifierTree, AnnotatedTypeMirror)","url":"visitIdentifier(com.sun.source.tree.IdentifierTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitIdentifier(IdentifierTree, AnnotatedTypeMirror)","url":"visitIdentifier(com.sun.source.tree.IdentifierTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesTreeAnnotator","l":"visitIdentifier(IdentifierTree, AnnotatedTypeMirror)","url":"visitIdentifier(com.sun.source.tree.IdentifierTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitIdentifier(IdentifierTree, Node)","url":"visitIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitIdentifier(IdentifierTree, Void)","url":"visitIdentifier(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitIdentifier(IdentifierTree, Void)","url":"visitIdentifier(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug.Visitor","l":"visitIdentifier(IdentifierTree, Void)","url":"visitIdentifier(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitIdentifier(IdentifierTree, Void)","url":"visitIdentifier(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitIdentifier(IdentifierTree, Void)","url":"visitIdentifier(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitIdentifier(IdentifierTree, Void)","url":"visitIdentifier(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitIf(IfTree, Node)","url":"visitIf(com.sun.source.tree.IfTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitIf(IfTree, Void)","url":"visitIf(com.sun.source.tree.IfTree,java.lang.Void)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"visitIf(IfTree, Void)","url":"visitIf(com.sun.source.tree.IfTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitIf(IfTree, Void)","url":"visitIf(com.sun.source.tree.IfTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitIf(IfTree, Void)","url":"visitIf(com.sun.source.tree.IfTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitIf(IfTree, Void)","url":"visitIf(com.sun.source.tree.IfTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitImplicitThis(ImplicitThisNode, P)","url":"visitImplicitThis(org.checkerframework.dataflow.cfg.node.ImplicitThisNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitImplicitThis(ImplicitThisNode, P)","url":"visitImplicitThis(org.checkerframework.dataflow.cfg.node.ImplicitThisNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitImport(ImportTree, Node)","url":"visitImport(com.sun.source.tree.ImportTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitImport(ImportTree, Void)","url":"visitImport(com.sun.source.tree.ImportTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitImport(ImportTree, Void)","url":"visitImport(com.sun.source.tree.ImportTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitImport(ImportTree, Void)","url":"visitImport(com.sun.source.tree.ImportTree,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitingExecutableTypeParam"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitInstanceOf(InstanceOfNode, P)","url":"visitInstanceOf(org.checkerframework.dataflow.cfg.node.InstanceOfNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitInstanceOf(InstanceOfNode, P)","url":"visitInstanceOf(org.checkerframework.dataflow.cfg.node.InstanceOfNode,P)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"visitInstanceOf(InstanceOfNode, TransferInput<NullnessNoInitValue, NullnessNoInitStore>)","url":"visitInstanceOf(org.checkerframework.dataflow.cfg.node.InstanceOfNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitInstanceOf(InstanceOfNode, TransferInput<V, S>)","url":"visitInstanceOf(org.checkerframework.dataflow.cfg.node.InstanceOfNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitInstanceOf(InstanceOfTree, Node)","url":"visitInstanceOf(com.sun.source.tree.InstanceOfTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitInstanceOf(InstanceOfTree, Void)","url":"visitInstanceOf(com.sun.source.tree.InstanceOfTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitInstanceOf(InstanceOfTree, Void)","url":"visitInstanceOf(com.sun.source.tree.InstanceOfTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitInstanceOf(InstanceOfTree, Void)","url":"visitInstanceOf(com.sun.source.tree.InstanceOfTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitInstanceOf(InstanceOfTree, Void)","url":"visitInstanceOf(com.sun.source.tree.InstanceOfTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitInstanceOf(InstanceOfTree, Void)","url":"visitInstanceOf(com.sun.source.tree.InstanceOfTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitIntegerDivision(IntegerDivisionNode, P)","url":"visitIntegerDivision(org.checkerframework.dataflow.cfg.node.IntegerDivisionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitIntegerDivision(IntegerDivisionNode, P)","url":"visitIntegerDivision(org.checkerframework.dataflow.cfg.node.IntegerDivisionNode,P)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitIntegerDivision(IntegerDivisionNode, TransferInput<CFValue, CFStore>)","url":"visitIntegerDivision(org.checkerframework.dataflow.cfg.node.IntegerDivisionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitIntegerDivision(IntegerDivisionNode, TransferInput<CFValue, CFStore>)","url":"visitIntegerDivision(org.checkerframework.dataflow.cfg.node.IntegerDivisionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitIntegerLiteral(IntegerLiteralNode, P)","url":"visitIntegerLiteral(org.checkerframework.dataflow.cfg.node.IntegerLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitIntegerLiteral(IntegerLiteralNode, P)","url":"visitIntegerLiteral(org.checkerframework.dataflow.cfg.node.IntegerLiteralNode,P)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitIntegerLiteral(IntegerLiteralNode, TransferInput<CFValue, CFStore>)","url":"visitIntegerLiteral(org.checkerframework.dataflow.cfg.node.IntegerLiteralNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"visitIntegerLiteral(IntegerLiteralNode, TransferInput<Constant, ConstantPropagationStore>)","url":"visitIntegerLiteral(org.checkerframework.dataflow.cfg.node.IntegerLiteralNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitIntegerRemainder(IntegerRemainderNode, P)","url":"visitIntegerRemainder(org.checkerframework.dataflow.cfg.node.IntegerRemainderNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitIntegerRemainder(IntegerRemainderNode, P)","url":"visitIntegerRemainder(org.checkerframework.dataflow.cfg.node.IntegerRemainderNode,P)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitIntegerRemainder(IntegerRemainderNode, TransferInput<CFValue, CFStore>)","url":"visitIntegerRemainder(org.checkerframework.dataflow.cfg.node.IntegerRemainderNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitIntegerRemainder(IntegerRemainderNode, TransferInput<CFValue, CFStore>)","url":"visitIntegerRemainder(org.checkerframework.dataflow.cfg.node.IntegerRemainderNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Array(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitIntersection_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Array(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitIntersection_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Declared(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitIntersection_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Declared(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitIntersection_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitIntersection_Declared(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitIntersection_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitIntersection_Declared(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitIntersection_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Executable(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitIntersection_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Executable(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitIntersection_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Intersection(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitIntersection_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Intersection(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitIntersection_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitIntersection_Intersection(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitIntersection_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitIntersection_Intersection(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitIntersection_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitIntersection_Intersection(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitIntersection_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitIntersection_Intersection(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitIntersection_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_None(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitIntersection_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_None(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitIntersection_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Null(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitIntersection_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Null(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitIntersection_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitIntersection_Null(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedNullType, Void)","url":"visitIntersection_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Primitive(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitIntersection_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Primitive(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitIntersection_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitIntersection_Primitive(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","url":"visitIntersection_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitIntersection_Primitive(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","url":"visitIntersection_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitIntersection_Type(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror)","url":"visitIntersection_Type(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Typevar(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitIntersection_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Typevar(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitIntersection_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitIntersection_Typevar(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitIntersection_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitIntersection_Typevar(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitIntersection_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Union(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitIntersection_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Union(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitIntersection_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitIntersection_Union(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","url":"visitIntersection_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Wildcard(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitIntersection_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Wildcard(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitIntersection_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitIntersection_Wildcard(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitIntersection_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitIntersection_Wildcard(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitIntersection_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"visitIntersection(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror)","url":"visitIntersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitIntersection(AnnotatedTypeMirror.AnnotatedIntersectionType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","url":"visitIntersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitIntersection(AnnotatedTypeMirror.AnnotatedIntersectionType, P)","url":"visitIntersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitIntersection(AnnotatedTypeMirror.AnnotatedIntersectionType, P)","url":"visitIntersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitIntersection(AnnotatedTypeMirror.AnnotatedIntersectionType, P)","url":"visitIntersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitIntersection(AnnotatedTypeMirror.AnnotatedIntersectionType, Set<AnnotatedTypeMirror>)","url":"visitIntersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.util.Set)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitIntersectionType(IntersectionTypeTree, Node)","url":"visitIntersectionType(com.sun.source.tree.IntersectionTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitIntersectionType(IntersectionTypeTree, Void)","url":"visitIntersectionType(com.sun.source.tree.IntersectionTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitLabeledStatement(LabeledStatementTree, Node)","url":"visitLabeledStatement(com.sun.source.tree.LabeledStatementTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitLabeledStatement(LabeledStatementTree, Void)","url":"visitLabeledStatement(com.sun.source.tree.LabeledStatementTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitLabeledStatement(LabeledStatementTree, Void)","url":"visitLabeledStatement(com.sun.source.tree.LabeledStatementTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitLambdaExpression(LambdaExpressionTree, Node)","url":"visitLambdaExpression(com.sun.source.tree.LambdaExpressionTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"visitLambdaExpression(LambdaExpressionTree, Void)","url":"visitLambdaExpression(com.sun.source.tree.LambdaExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitLambdaExpression(LambdaExpressionTree, Void)","url":"visitLambdaExpression(com.sun.source.tree.LambdaExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitLambdaExpression(LambdaExpressionTree, Void)","url":"visitLambdaExpression(com.sun.source.tree.LambdaExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitLambdaExpression(LambdaExpressionTree, Void)","url":"visitLambdaExpression(com.sun.source.tree.LambdaExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitLambdaExpression(LambdaExpressionTree, Void)","url":"visitLambdaExpression(com.sun.source.tree.LambdaExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitLambdaResultExpression(LambdaResultExpressionNode, P)","url":"visitLambdaResultExpression(org.checkerframework.dataflow.cfg.node.LambdaResultExpressionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitLambdaResultExpression(LambdaResultExpressionNode, P)","url":"visitLambdaResultExpression(org.checkerframework.dataflow.cfg.node.LambdaResultExpressionNode,P)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitLambdaResultExpression(LambdaResultExpressionNode, TransferInput<V, S>)","url":"visitLambdaResultExpression(org.checkerframework.dataflow.cfg.node.LambdaResultExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitLeftShift(LeftShiftNode, P)","url":"visitLeftShift(org.checkerframework.dataflow.cfg.node.LeftShiftNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitLeftShift(LeftShiftNode, P)","url":"visitLeftShift(org.checkerframework.dataflow.cfg.node.LeftShiftNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitLeftShift(LeftShiftNode, TransferInput<CFValue, CFStore>)","url":"visitLeftShift(org.checkerframework.dataflow.cfg.node.LeftShiftNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitLessThan(LessThanNode, P)","url":"visitLessThan(org.checkerframework.dataflow.cfg.node.LessThanNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitLessThan(LessThanNode, P)","url":"visitLessThan(org.checkerframework.dataflow.cfg.node.LessThanNode,P)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"visitLessThan(LessThanNode, TransferInput<CFValue, CFStore>)","url":"visitLessThan(org.checkerframework.dataflow.cfg.node.LessThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"visitLessThan(LessThanNode, TransferInput<CFValue, CFStore>)","url":"visitLessThan(org.checkerframework.dataflow.cfg.node.LessThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitLessThan(LessThanNode, TransferInput<CFValue, CFStore>)","url":"visitLessThan(org.checkerframework.dataflow.cfg.node.LessThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitLessThanOrEqual(LessThanOrEqualNode, P)","url":"visitLessThanOrEqual(org.checkerframework.dataflow.cfg.node.LessThanOrEqualNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitLessThanOrEqual(LessThanOrEqualNode, P)","url":"visitLessThanOrEqual(org.checkerframework.dataflow.cfg.node.LessThanOrEqualNode,P)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"visitLessThanOrEqual(LessThanOrEqualNode, TransferInput<CFValue, CFStore>)","url":"visitLessThanOrEqual(org.checkerframework.dataflow.cfg.node.LessThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"visitLessThanOrEqual(LessThanOrEqualNode, TransferInput<CFValue, CFStore>)","url":"visitLessThanOrEqual(org.checkerframework.dataflow.cfg.node.LessThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitLessThanOrEqual(LessThanOrEqualNode, TransferInput<CFValue, CFStore>)","url":"visitLessThanOrEqual(org.checkerframework.dataflow.cfg.node.LessThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitLists(List<? extends Tree>, List<? extends Node>)","url":"visitLists(java.util.List,java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"visitLiteral(LiteralTree, AnnotatedTypeMirror)","url":"visitLiteral(com.sun.source.tree.LiteralTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"visitLiteral(LiteralTree, AnnotatedTypeMirror)","url":"visitLiteral(com.sun.source.tree.LiteralTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory.KeyLookupTreeAnnotator","l":"visitLiteral(LiteralTree, AnnotatedTypeMirror)","url":"visitLiteral(com.sun.source.tree.LiteralTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"LiteralTreeAnnotator","l":"visitLiteral(LiteralTree, AnnotatedTypeMirror)","url":"visitLiteral(com.sun.source.tree.LiteralTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitLiteral(LiteralTree, Node)","url":"visitLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug.Visitor","l":"visitLiteral(LiteralTree, Void)","url":"visitLiteral(com.sun.source.tree.LiteralTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitLiteral(LiteralTree, Void)","url":"visitLiteral(com.sun.source.tree.LiteralTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitLiteral(LiteralTree, Void)","url":"visitLiteral(com.sun.source.tree.LiteralTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitLocalVariable(LocalVariable, P)","url":"visitLocalVariable(org.checkerframework.dataflow.expression.LocalVariable,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitLocalVariable(LocalVariable, P)","url":"visitLocalVariable(org.checkerframework.dataflow.expression.LocalVariable,P)"},{"p":"org.checkerframework.common.value","c":"JavaExpressionOptimizer","l":"visitLocalVariable(LocalVariable, Void)","url":"visitLocalVariable(org.checkerframework.dataflow.expression.LocalVariable,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitLocalVariable(LocalVariable, Void)","url":"visitLocalVariable(org.checkerframework.dataflow.expression.LocalVariable,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitLocalVariable(LocalVariableNode, P)","url":"visitLocalVariable(org.checkerframework.dataflow.cfg.node.LocalVariableNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitLocalVariable(LocalVariableNode, P)","url":"visitLocalVariable(org.checkerframework.dataflow.cfg.node.LocalVariableNode,P)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"visitLocalVariable(LocalVariableNode, TransferInput<Constant, ConstantPropagationStore>)","url":"visitLocalVariable(org.checkerframework.dataflow.cfg.node.LocalVariableNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitLocalVariable(LocalVariableNode, TransferInput<V, S>)","url":"visitLocalVariable(org.checkerframework.dataflow.cfg.node.LocalVariableNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitLongLiteral(LongLiteralNode, P)","url":"visitLongLiteral(org.checkerframework.dataflow.cfg.node.LongLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitLongLiteral(LongLiteralNode, P)","url":"visitLongLiteral(org.checkerframework.dataflow.cfg.node.LongLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitMarker(MarkerNode, P)","url":"visitMarker(org.checkerframework.dataflow.cfg.node.MarkerNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitMarker(MarkerNode, P)","url":"visitMarker(org.checkerframework.dataflow.cfg.node.MarkerNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitMemberReference(FunctionalInterfaceNode, P)","url":"visitMemberReference(org.checkerframework.dataflow.cfg.node.FunctionalInterfaceNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitMemberReference(FunctionalInterfaceNode, P)","url":"visitMemberReference(org.checkerframework.dataflow.cfg.node.FunctionalInterfaceNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitMemberReference(MemberReferenceTree, Node)","url":"visitMemberReference(com.sun.source.tree.MemberReferenceTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitMemberReference(MemberReferenceTree, Void)","url":"visitMemberReference(com.sun.source.tree.MemberReferenceTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitMemberReference(MemberReferenceTree, Void)","url":"visitMemberReference(com.sun.source.tree.MemberReferenceTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitMemberReference(MemberReferenceTree, Void)","url":"visitMemberReference(com.sun.source.tree.MemberReferenceTree,java.lang.Void)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationFieldAccessTreeAnnotator","l":"visitMemberSelect(MemberSelectTree, AnnotatedTypeMirror)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"visitMemberSelect(MemberSelectTree, AnnotatedTypeMirror)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitMemberSelect(MemberSelectTree, AnnotatedTypeMirror)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory.ClassValTreeAnnotator","l":"visitMemberSelect(MemberSelectTree, AnnotatedTypeMirror)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesTreeAnnotator","l":"visitMemberSelect(MemberSelectTree, AnnotatedTypeMirror)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitMemberSelect(MemberSelectTree, Node)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitMemberSelect(MemberSelectTree, Void)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitMemberSelect(MemberSelectTree, Void)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug.Visitor","l":"visitMemberSelect(MemberSelectTree, Void)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitMemberSelect(MemberSelectTree, Void)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitMemberSelect(MemberSelectTree, Void)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitMemberSelect(MemberSelectTree, Void)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,java.lang.Void)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"visitMethod(MethodTree, AnnotatedTypeMirror)","url":"visitMethod(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"TreeAnnotator","l":"visitMethod(MethodTree, AnnotatedTypeMirror)","url":"visitMethod(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitMethod(MethodTree, Node)","url":"visitMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"visitMethod(MethodTree, P)","url":"visitMethod(com.sun.source.tree.MethodTree,P)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterVisitor","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.Visitor","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitMethodAccess(MethodAccessNode, P)","url":"visitMethodAccess(org.checkerframework.dataflow.cfg.node.MethodAccessNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitMethodAccess(MethodAccessNode, P)","url":"visitMethodAccess(org.checkerframework.dataflow.cfg.node.MethodAccessNode,P)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"visitMethodAccess(MethodAccessNode, TransferInput<NullnessNoInitValue, NullnessNoInitStore>)","url":"visitMethodAccess(org.checkerframework.dataflow.cfg.node.MethodAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitMethodCall(MethodCall, P)","url":"visitMethodCall(org.checkerframework.dataflow.expression.MethodCall,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitMethodCall(MethodCall, P)","url":"visitMethodCall(org.checkerframework.dataflow.expression.MethodCall,P)"},{"p":"org.checkerframework.common.value","c":"JavaExpressionOptimizer","l":"visitMethodCall(MethodCall, Void)","url":"visitMethodCall(org.checkerframework.dataflow.expression.MethodCall,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitMethodCall(MethodCall, Void)","url":"visitMethodCall(org.checkerframework.dataflow.expression.MethodCall,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitMethodInvocation(MethodInvocationNode, P)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitMethodInvocation(MethodInvocationNode, P)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,P)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<AccumulationValue, AccumulationStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<AccumulationValue, AccumulationStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.signature","c":"SignatureTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, InitializationStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<KeyForValue, KeyForStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<NullnessNoInitValue, NullnessNoInitStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<UnusedAbstractValue, BusyExprStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<UnusedAbstractValue, LiveVarStore>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<V, S>)","url":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"visitMethodInvocation(MethodInvocationTree, AnnotatedTypeMirror)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitMethodInvocation(MethodInvocationTree, AnnotatedTypeMirror)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory.AccumulationTreeAnnotator","l":"visitMethodInvocation(MethodInvocationTree, AnnotatedTypeMirror)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory.ClassValTreeAnnotator","l":"visitMethodInvocation(MethodInvocationTree, AnnotatedTypeMirror)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory.MethodValTreeAnnotator","l":"visitMethodInvocation(MethodInvocationTree, AnnotatedTypeMirror)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitMethodInvocation(MethodInvocationTree, Node)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.regex","c":"RegexVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitModifiers(ModifiersTree, Node)","url":"visitModifiers(com.sun.source.tree.ModifiersTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitModifiers(ModifiersTree, Void)","url":"visitModifiers(com.sun.source.tree.ModifiersTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitModifiers(ModifiersTree, Void)","url":"visitModifiers(com.sun.source.tree.ModifiersTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitModifiers(ModifiersTree, Void)","url":"visitModifiers(com.sun.source.tree.ModifiersTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitModifiers(ModifiersTree, Void)","url":"visitModifiers(com.sun.source.tree.ModifiersTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitModule(ModuleTree, Node)","url":"visitModule(com.sun.source.tree.ModuleTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitModule(ModuleTree, Void)","url":"visitModule(com.sun.source.tree.ModuleTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNarrowingConversion(NarrowingConversionNode, P)","url":"visitNarrowingConversion(org.checkerframework.dataflow.cfg.node.NarrowingConversionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNarrowingConversion(NarrowingConversionNode, P)","url":"visitNarrowingConversion(org.checkerframework.dataflow.cfg.node.NarrowingConversionNode,P)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitNarrowingConversion(NarrowingConversionNode, TransferInput<V, S>)","url":"visitNarrowingConversion(org.checkerframework.dataflow.cfg.node.NarrowingConversionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory.SameLenTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory.AliasingTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"PropagationTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitNewArray(NewArrayTree, Node)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundVisitor","l":"visitNewArray(NewArrayTree, Void)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitNewArray(NewArrayTree, Void)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"visitNewArray(NewArrayTree, Void)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitNewArray(NewArrayTree, Void)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug.Visitor","l":"visitNewArray(NewArrayTree, Void)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitNewArray(NewArrayTree, Void)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitNewArray(NewArrayTree, Void)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitNewArray(NewArrayTree, Void)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitNewArray(NewArrayTree, Void)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"visitNewClass(NewClassTree, AnnotatedTypeMirror)","url":"visitNewClass(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagationTreeAnnotator","l":"visitNewClass(NewClassTree, AnnotatedTypeMirror)","url":"visitNewClass(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitNewClass(NewClassTree, AnnotatedTypeMirror)","url":"visitNewClass(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitNewClass(NewClassTree, Node)","url":"visitNewClass(com.sun.source.tree.NewClassTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"visitNewClass(NewClassTree, Void)","url":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitNewClass(NewClassTree, Void)","url":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitNewClass(NewClassTree, Void)","url":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitNewClass(NewClassTree, Void)","url":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitNewClass(NewClassTree, Void)","url":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"visitNewClass(NewClassTree, Void)","url":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitNewClass(NewClassTree, Void)","url":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitNewClass(NewClassTree, Void)","url":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNode(Node, P)","url":"visitNode(org.checkerframework.dataflow.cfg.node.Node,P)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"visitNode(Node, TransferInput<Constant, ConstantPropagationStore>)","url":"visitNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"visitNode(Node, TransferInput<UnusedAbstractValue, BusyExprStore>)","url":"visitNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"visitNode(Node, TransferInput<UnusedAbstractValue, LiveVarStore>)","url":"visitNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionTransfer","l":"visitNode(Node, TransferInput<UnusedAbstractValue, ReachingDefinitionStore>)","url":"visitNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitNode(Node, TransferInput<V, S>)","url":"visitNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Array(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitNone_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Array(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitNone_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Declared(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitNone_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Declared(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitNone_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Executable(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitNone_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Executable(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitNone_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Intersection(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitNone_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Intersection(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitNone_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_None(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitNone_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_None(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitNone_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitNone_None(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitNone_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Null(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitNone_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Null(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitNone_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Primitive(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitNone_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Primitive(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitNone_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Union(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitNone_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Union(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitNone_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Wildcard(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitNone_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Wildcard(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitNone_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNotEqual(NotEqualNode, P)","url":"visitNotEqual(org.checkerframework.dataflow.cfg.node.NotEqualNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNotEqual(NotEqualNode, P)","url":"visitNotEqual(org.checkerframework.dataflow.cfg.node.NotEqualNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitNotEqual(NotEqualNode, TransferInput<CFValue, CFStore>)","url":"visitNotEqual(org.checkerframework.dataflow.cfg.node.NotEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitNotEqual(NotEqualNode, TransferInput<V, S>)","url":"visitNotEqual(org.checkerframework.dataflow.cfg.node.NotEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitNoType(AnnotatedTypeMirror.AnnotatedNoType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","url":"visitNoType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitNoType(AnnotatedTypeMirror.AnnotatedNoType, P)","url":"visitNoType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitNoType(AnnotatedTypeMirror.AnnotatedNoType, P)","url":"visitNoType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitNoType(AnnotatedTypeMirror.AnnotatedNoType, P)","url":"visitNoType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitNoType(AnnotatedTypeMirror.AnnotatedNoType, P)","url":"visitNoType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitNoType(AnnotatedTypeMirror.AnnotatedNoType, Set<AnnotatedTypeMirror>)","url":"visitNoType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,java.util.Set)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Array(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitNull_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Array(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitNull_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Array(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedArrayType, Void)","url":"visitNull_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Declared(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitNull_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Declared(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitNull_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Declared(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitNull_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Executable(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitNull_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Executable(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitNull_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Intersection(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitNull_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Intersection(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitNull_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Intersection(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitNull_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_None(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitNull_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_None(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitNull_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Null(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitNull_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Null(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitNull_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitNull_Null(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitNull_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Null(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedNullType, Void)","url":"visitNull_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Primitive(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitNull_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Primitive(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitNull_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Primitive(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","url":"visitNull_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Typevar(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitNull_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Typevar(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitNull_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Typevar(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitNull_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Union(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitNull_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Union(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitNull_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Union(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","url":"visitNull_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Wildcard(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitNull_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Wildcard(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitNull_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Wildcard(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitNull_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitNull(AnnotatedTypeMirror.AnnotatedNullType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","url":"visitNull(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitNull(AnnotatedTypeMirror.AnnotatedNullType, P)","url":"visitNull(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitNull(AnnotatedTypeMirror.AnnotatedNullType, P)","url":"visitNull(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitNull(AnnotatedTypeMirror.AnnotatedNullType, P)","url":"visitNull(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitNull(AnnotatedTypeMirror.AnnotatedNullType, P)","url":"visitNull(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,P)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFormatter.NullnessFormattingVisitor","l":"visitNull(AnnotatedTypeMirror.AnnotatedNullType, Set<AnnotatedTypeMirror>)","url":"visitNull(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.util.Set)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitNull(AnnotatedTypeMirror.AnnotatedNullType, Set<AnnotatedTypeMirror>)","url":"visitNull(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.util.Set)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNullChk(NullChkNode, P)","url":"visitNullChk(org.checkerframework.dataflow.cfg.node.NullChkNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNullChk(NullChkNode, P)","url":"visitNullChk(org.checkerframework.dataflow.cfg.node.NullChkNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNullLiteral(NullLiteralNode, P)","url":"visitNullLiteral(org.checkerframework.dataflow.cfg.node.NullLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNullLiteral(NullLiteralNode, P)","url":"visitNullLiteral(org.checkerframework.dataflow.cfg.node.NullLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNumericalAddition(NumericalAdditionNode, P)","url":"visitNumericalAddition(org.checkerframework.dataflow.cfg.node.NumericalAdditionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNumericalAddition(NumericalAdditionNode, P)","url":"visitNumericalAddition(org.checkerframework.dataflow.cfg.node.NumericalAdditionNode,P)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitNumericalAddition(NumericalAdditionNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalAddition(org.checkerframework.dataflow.cfg.node.NumericalAdditionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitNumericalAddition(NumericalAdditionNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalAddition(org.checkerframework.dataflow.cfg.node.NumericalAdditionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitNumericalAddition(NumericalAdditionNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalAddition(org.checkerframework.dataflow.cfg.node.NumericalAdditionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNumericalMinus(NumericalMinusNode, P)","url":"visitNumericalMinus(org.checkerframework.dataflow.cfg.node.NumericalMinusNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNumericalMinus(NumericalMinusNode, P)","url":"visitNumericalMinus(org.checkerframework.dataflow.cfg.node.NumericalMinusNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitNumericalMinus(NumericalMinusNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalMinus(org.checkerframework.dataflow.cfg.node.NumericalMinusNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNumericalMultiplication(NumericalMultiplicationNode, P)","url":"visitNumericalMultiplication(org.checkerframework.dataflow.cfg.node.NumericalMultiplicationNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNumericalMultiplication(NumericalMultiplicationNode, P)","url":"visitNumericalMultiplication(org.checkerframework.dataflow.cfg.node.NumericalMultiplicationNode,P)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitNumericalMultiplication(NumericalMultiplicationNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalMultiplication(org.checkerframework.dataflow.cfg.node.NumericalMultiplicationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitNumericalMultiplication(NumericalMultiplicationNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalMultiplication(org.checkerframework.dataflow.cfg.node.NumericalMultiplicationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNumericalPlus(NumericalPlusNode, P)","url":"visitNumericalPlus(org.checkerframework.dataflow.cfg.node.NumericalPlusNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNumericalPlus(NumericalPlusNode, P)","url":"visitNumericalPlus(org.checkerframework.dataflow.cfg.node.NumericalPlusNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitNumericalPlus(NumericalPlusNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalPlus(org.checkerframework.dataflow.cfg.node.NumericalPlusNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNumericalSubtraction(NumericalSubtractionNode, P)","url":"visitNumericalSubtraction(org.checkerframework.dataflow.cfg.node.NumericalSubtractionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNumericalSubtraction(NumericalSubtractionNode, P)","url":"visitNumericalSubtraction(org.checkerframework.dataflow.cfg.node.NumericalSubtractionNode,P)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanTransfer","l":"visitNumericalSubtraction(NumericalSubtractionNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalSubtraction(org.checkerframework.dataflow.cfg.node.NumericalSubtractionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitNumericalSubtraction(NumericalSubtractionNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalSubtraction(org.checkerframework.dataflow.cfg.node.NumericalSubtractionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitNumericalSubtraction(NumericalSubtractionNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalSubtraction(org.checkerframework.dataflow.cfg.node.NumericalSubtractionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitNumericalSubtraction(NumericalSubtractionNode, TransferInput<CFValue, CFStore>)","url":"visitNumericalSubtraction(org.checkerframework.dataflow.cfg.node.NumericalSubtractionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitObjectCreation(ObjectCreationNode, P)","url":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitObjectCreation(ObjectCreationNode, P)","url":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,P)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"visitObjectCreation(ObjectCreationNode, TransferInput<AccumulationValue, AccumulationStore>)","url":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitObjectCreation(ObjectCreationNode, TransferInput<CFValue, CFStore>)","url":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"visitObjectCreation(ObjectCreationNode, TransferInput<UnusedAbstractValue, BusyExprStore>)","url":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"visitObjectCreation(ObjectCreationNode, TransferInput<UnusedAbstractValue, LiveVarStore>)","url":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitObjectCreation(ObjectCreationNode, TransferInput<V, S>)","url":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitOpens(OpensTree, Node)","url":"visitOpens(com.sun.source.tree.OpensTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitOpens(OpensTree, Void)","url":"visitOpens(com.sun.source.tree.OpensTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitOptional(Tree, Optional<? extends Node>)","url":"visitOptional(com.sun.source.tree.Tree,java.util.Optional)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitor"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"visitor"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"A2FReducer","l":"visitor"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"F2AReducer","l":"visitor"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"FIsAReducer","l":"visitor"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug.Visitor","l":"Visitor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.Visitor","l":"Visitor(BaseTypeChecker)","url":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopierWithReplacement.Visitor","l":"Visitor(IdentityHashMap<? extends AnnotatedTypeMirror, ? extends AnnotatedTypeMirror>)","url":"%3Cinit%3E(java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type","c":"TypeVariableSubstitutor.Visitor","l":"Visitor(Map<TypeVariable, AnnotatedTypeMirror>, boolean)","url":"%3Cinit%3E(java.util.Map,boolean)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitOther(Tree, Node)","url":"visitOther(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitOther(Tree, Void)","url":"visitOther(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitOther(Tree, Void)","url":"visitOther(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitPackage(PackageTree, Node)","url":"visitPackage(com.sun.source.tree.PackageTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitPackage(PackageTree, Void)","url":"visitPackage(com.sun.source.tree.PackageTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitPackageName(PackageNameNode, P)","url":"visitPackageName(org.checkerframework.dataflow.cfg.node.PackageNameNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitPackageName(PackageNameNode, P)","url":"visitPackageName(org.checkerframework.dataflow.cfg.node.PackageNameNode,P)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitParameterizedType(AnnotatedTypeMirror.AnnotatedDeclaredType, ParameterizedTypeTree)","url":"visitParameterizedType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.ParameterizedTypeTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitParameterizedType(ParameterizedTypeNode, P)","url":"visitParameterizedType(org.checkerframework.dataflow.cfg.node.ParameterizedTypeNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitParameterizedType(ParameterizedTypeNode, P)","url":"visitParameterizedType(org.checkerframework.dataflow.cfg.node.ParameterizedTypeNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitParameterizedType(ParameterizedTypeTree, Node)","url":"visitParameterizedType(com.sun.source.tree.ParameterizedTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitParameterizedType(ParameterizedTypeTree, Void)","url":"visitParameterizedType(com.sun.source.tree.ParameterizedTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitParameterizedType(ParameterizedTypeTree, Void)","url":"visitParameterizedType(com.sun.source.tree.ParameterizedTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitParenthesized(ParenthesizedTree, Node)","url":"visitParenthesized(com.sun.source.tree.ParenthesizedTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitParenthesized(ParenthesizedTree, Void)","url":"visitParenthesized(com.sun.source.tree.ParenthesizedTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitParenthesized(ParenthesizedTree, Void)","url":"visitParenthesized(com.sun.source.tree.ParenthesizedTree,java.lang.Void)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.Matcher","l":"visitParenthesized(ParenthesizedTree, Void)","url":"visitParenthesized(com.sun.source.tree.ParenthesizedTree,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Array(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitPrimitive_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Array(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitPrimitive_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Declared(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitPrimitive_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Declared(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitPrimitive_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitPrimitive_Declared(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitPrimitive_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitPrimitive_Declared(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitPrimitive_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitPrimitive_Declared(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitPrimitive_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Executable(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitPrimitive_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Executable(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitPrimitive_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Intersection(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitPrimitive_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Intersection(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitPrimitive_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitPrimitive_Intersection(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitPrimitive_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitPrimitive_Intersection(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitPrimitive_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_None(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitPrimitive_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_None(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitPrimitive_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Null(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitPrimitive_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Null(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitPrimitive_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Primitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitPrimitive_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Primitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitPrimitive_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitPrimitive_Primitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitPrimitive_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitPrimitive_Primitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","url":"visitPrimitive_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitPrimitive_Primitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","url":"visitPrimitive_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitPrimitive_Primitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","url":"visitPrimitive_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Typevar(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitPrimitive_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Typevar(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitPrimitive_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitPrimitive_Typevar(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitPrimitive_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitPrimitive_Typevar(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitPrimitive_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Union(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitPrimitive_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Union(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitPrimitive_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitPrimitive_Union(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","url":"visitPrimitive_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Wildcard(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitPrimitive_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Wildcard(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitPrimitive_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitPrimitive_Wildcard(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitPrimitive_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitPrimitive_Wildcard(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitPrimitive_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","url":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, P)","url":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, P)","url":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, P)","url":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, P)","url":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, Set<AnnotatedTypeMirror>)","url":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.util.Set)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, Tree)","url":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTypeAnnotator","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","url":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitPrimitiveType(PrimitiveTypeNode, P)","url":"visitPrimitiveType(org.checkerframework.dataflow.cfg.node.PrimitiveTypeNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitPrimitiveType(PrimitiveTypeNode, P)","url":"visitPrimitiveType(org.checkerframework.dataflow.cfg.node.PrimitiveTypeNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitPrimitiveType(PrimitiveTypeTree, Node)","url":"visitPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitPrimitiveType(PrimitiveTypeTree, Void)","url":"visitPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitPrimitiveType(PrimitiveTypeTree, Void)","url":"visitPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitProvides(ProvidesTree, Node)","url":"visitProvides(com.sun.source.tree.ProvidesTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitProvides(ProvidesTree, Void)","url":"visitProvides(com.sun.source.tree.ProvidesTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitRequires(RequiresTree, Node)","url":"visitRequires(com.sun.source.tree.RequiresTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitRequires(RequiresTree, Void)","url":"visitRequires(com.sun.source.tree.RequiresTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitReturn(ReturnNode, P)","url":"visitReturn(org.checkerframework.dataflow.cfg.node.ReturnNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitReturn(ReturnNode, P)","url":"visitReturn(org.checkerframework.dataflow.cfg.node.ReturnNode,P)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"visitReturn(ReturnNode, TransferInput<NullnessNoInitValue, NullnessNoInitStore>)","url":"visitReturn(org.checkerframework.dataflow.cfg.node.ReturnNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"visitReturn(ReturnNode, TransferInput<UnusedAbstractValue, BusyExprStore>)","url":"visitReturn(org.checkerframework.dataflow.cfg.node.ReturnNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"visitReturn(ReturnNode, TransferInput<UnusedAbstractValue, LiveVarStore>)","url":"visitReturn(org.checkerframework.dataflow.cfg.node.ReturnNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitReturn(ReturnNode, TransferInput<V, S>)","url":"visitReturn(org.checkerframework.dataflow.cfg.node.ReturnNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitReturn(ReturnTree, Node)","url":"visitReturn(com.sun.source.tree.ReturnTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"visitReturn(ReturnTree, Void)","url":"visitReturn(com.sun.source.tree.ReturnTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitReturn(ReturnTree, Void)","url":"visitReturn(com.sun.source.tree.ReturnTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitReturn(ReturnTree, Void)","url":"visitReturn(com.sun.source.tree.ReturnTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitReturn(ReturnTree, Void)","url":"visitReturn(com.sun.source.tree.ReturnTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitShortLiteral(ShortLiteralNode, P)","url":"visitShortLiteral(org.checkerframework.dataflow.cfg.node.ShortLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitShortLiteral(ShortLiteralNode, P)","url":"visitShortLiteral(org.checkerframework.dataflow.cfg.node.ShortLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitSignedRightShift(SignedRightShiftNode, P)","url":"visitSignedRightShift(org.checkerframework.dataflow.cfg.node.SignedRightShiftNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitSignedRightShift(SignedRightShiftNode, P)","url":"visitSignedRightShift(org.checkerframework.dataflow.cfg.node.SignedRightShiftNode,P)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitSignedRightShift(SignedRightShiftNode, TransferInput<CFValue, CFStore>)","url":"visitSignedRightShift(org.checkerframework.dataflow.cfg.node.SignedRightShiftNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitSignedRightShift(SignedRightShiftNode, TransferInput<CFValue, CFStore>)","url":"visitSignedRightShift(org.checkerframework.dataflow.cfg.node.SignedRightShiftNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitStringConcatenate(StringConcatenateNode, P)","url":"visitStringConcatenate(org.checkerframework.dataflow.cfg.node.StringConcatenateNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitStringConcatenate(StringConcatenateNode, P)","url":"visitStringConcatenate(org.checkerframework.dataflow.cfg.node.StringConcatenateNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitStringConcatenate(StringConcatenateNode, TransferInput<CFValue, CFStore>)","url":"visitStringConcatenate(org.checkerframework.dataflow.cfg.node.StringConcatenateNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitStringConversion(StringConversionNode, P)","url":"visitStringConversion(org.checkerframework.dataflow.cfg.node.StringConversionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitStringConversion(StringConversionNode, P)","url":"visitStringConversion(org.checkerframework.dataflow.cfg.node.StringConversionNode,P)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitStringConversion(StringConversionNode, TransferInput<CFValue, CFStore>)","url":"visitStringConversion(org.checkerframework.dataflow.cfg.node.StringConversionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitStringConversion(StringConversionNode, TransferInput<V, S>)","url":"visitStringConversion(org.checkerframework.dataflow.cfg.node.StringConversionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitStringLiteral(StringLiteralNode, P)","url":"visitStringLiteral(org.checkerframework.dataflow.cfg.node.StringLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitStringLiteral(StringLiteralNode, P)","url":"visitStringLiteral(org.checkerframework.dataflow.cfg.node.StringLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitSuper(SuperNode, P)","url":"visitSuper(org.checkerframework.dataflow.cfg.node.SuperNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitSuper(SuperNode, P)","url":"visitSuper(org.checkerframework.dataflow.cfg.node.SuperNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitSwitch(SwitchTree, Node)","url":"visitSwitch(com.sun.source.tree.SwitchTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"visitSwitch(SwitchTree, Void)","url":"visitSwitch(com.sun.source.tree.SwitchTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitSwitch(SwitchTree, Void)","url":"visitSwitch(com.sun.source.tree.SwitchTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitSwitch(SwitchTree, Void)","url":"visitSwitch(com.sun.source.tree.SwitchTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitSwitch(SwitchTree, Void)","url":"visitSwitch(com.sun.source.tree.SwitchTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitSwitch(SwitchTree, Void)","url":"visitSwitch(com.sun.source.tree.SwitchTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitSwitchExpression17(Tree, Node)","url":"visitSwitchExpression17(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitSwitchExpression17(Tree, Void)","url":"visitSwitchExpression17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitSwitchExpression17(Tree, Void)","url":"visitSwitchExpression17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitSwitchExpression17(Tree, Void)","url":"visitSwitchExpression17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitSwitchExpression17(Tree)","url":"visitSwitchExpression17(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitSwitchExpressionNode(SwitchExpressionNode, P)","url":"visitSwitchExpressionNode(org.checkerframework.dataflow.cfg.node.SwitchExpressionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitSwitchExpressionNode(SwitchExpressionNode, P)","url":"visitSwitchExpressionNode(org.checkerframework.dataflow.cfg.node.SwitchExpressionNode,P)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"visitSwitchExpressionNode(SwitchExpressionNode, TransferInput<AccumulationValue, AccumulationStore>)","url":"visitSwitchExpressionNode(org.checkerframework.dataflow.cfg.node.SwitchExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitSwitchExpressionNode(SwitchExpressionNode, TransferInput<CFValue, CFStore>)","url":"visitSwitchExpressionNode(org.checkerframework.dataflow.cfg.node.SwitchExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitSwitchExpressionNode(SwitchExpressionNode, TransferInput<V, S>)","url":"visitSwitchExpressionNode(org.checkerframework.dataflow.cfg.node.SwitchExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner","l":"visitSwitchResultExpression(ExpressionTree, P)","url":"visitSwitchResultExpression(com.sun.source.tree.ExpressionTree,P)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner.FunctionalSwitchExpressionScanner","l":"visitSwitchResultExpression(ExpressionTree, P1)","url":"visitSwitchResultExpression(com.sun.source.tree.ExpressionTree,P1)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitSynchronized(SynchronizedNode, P)","url":"visitSynchronized(org.checkerframework.dataflow.cfg.node.SynchronizedNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitSynchronized(SynchronizedNode, P)","url":"visitSynchronized(org.checkerframework.dataflow.cfg.node.SynchronizedNode,P)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"visitSynchronized(SynchronizedNode, TransferInput<CFValue, LockStore>)","url":"visitSynchronized(org.checkerframework.dataflow.cfg.node.SynchronizedNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitSynchronized(SynchronizedTree, Node)","url":"visitSynchronized(com.sun.source.tree.SynchronizedTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitSynchronized(SynchronizedTree, Void)","url":"visitSynchronized(com.sun.source.tree.SynchronizedTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitSynchronized(SynchronizedTree, Void)","url":"visitSynchronized(com.sun.source.tree.SynchronizedTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitSynchronized(SynchronizedTree, Void)","url":"visitSynchronized(com.sun.source.tree.SynchronizedTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitSynchronized(SynchronizedTree, Void)","url":"visitSynchronized(com.sun.source.tree.SynchronizedTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitSynchronized(SynchronizedTree, Void)","url":"visitSynchronized(com.sun.source.tree.SynchronizedTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitTernaryExpression(TernaryExpressionNode, P)","url":"visitTernaryExpression(org.checkerframework.dataflow.cfg.node.TernaryExpressionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitTernaryExpression(TernaryExpressionNode, P)","url":"visitTernaryExpression(org.checkerframework.dataflow.cfg.node.TernaryExpressionNode,P)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"visitTernaryExpression(TernaryExpressionNode, TransferInput<AccumulationValue, AccumulationStore>)","url":"visitTernaryExpression(org.checkerframework.dataflow.cfg.node.TernaryExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitTernaryExpression(TernaryExpressionNode, TransferInput<CFValue, CFStore>)","url":"visitTernaryExpression(org.checkerframework.dataflow.cfg.node.TernaryExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitTernaryExpression(TernaryExpressionNode, TransferInput<V, S>)","url":"visitTernaryExpression(org.checkerframework.dataflow.cfg.node.TernaryExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitThis(ThisNode, P)","url":"visitThis(org.checkerframework.dataflow.cfg.node.ThisNode,P)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitThis(ThisNode, TransferInput<V, S>)","url":"visitThis(org.checkerframework.dataflow.cfg.node.ThisNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitThisReference(ThisReference, P)","url":"visitThisReference(org.checkerframework.dataflow.expression.ThisReference,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitThisReference(ThisReference, P)","url":"visitThisReference(org.checkerframework.dataflow.expression.ThisReference,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitThisReference(ThisReference, Void)","url":"visitThisReference(org.checkerframework.dataflow.expression.ThisReference,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"ViewpointAdaptJavaExpression","l":"visitThisReference(ThisReference, Void)","url":"visitThisReference(org.checkerframework.dataflow.expression.ThisReference,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitThrow(ThrowNode, P)","url":"visitThrow(org.checkerframework.dataflow.cfg.node.ThrowNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitThrow(ThrowNode, P)","url":"visitThrow(org.checkerframework.dataflow.cfg.node.ThrowNode,P)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitTransfer","l":"visitThrow(ThrowNode, TransferInput<NullnessNoInitValue, NullnessNoInitStore>)","url":"visitThrow(org.checkerframework.dataflow.cfg.node.ThrowNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitThrow(ThrowTree, Node)","url":"visitThrow(com.sun.source.tree.ThrowTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"visitThrow(ThrowTree, Void)","url":"visitThrow(com.sun.source.tree.ThrowTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitThrow(ThrowTree, Void)","url":"visitThrow(com.sun.source.tree.ThrowTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitThrow(ThrowTree, Void)","url":"visitThrow(com.sun.source.tree.ThrowTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitThrow(ThrowTree, Void)","url":"visitThrow(com.sun.source.tree.ThrowTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitTry(TryTree, Node)","url":"visitTry(com.sun.source.tree.TryTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitTry(TryTree, Void)","url":"visitTry(com.sun.source.tree.TryTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitTry(TryTree, Void)","url":"visitTry(com.sun.source.tree.TryTree,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitType_Intersection(AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedIntersectionType)","url":"visitType_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitType_Typevar(AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedTypeVariable)","url":"visitType_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitType_Wildcard(AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedWildcardType)","url":"visitType_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypeArgs(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, boolean, boolean)","url":"visitTypeArgs(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,boolean,boolean)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitTypeCast(TypeCastNode, P)","url":"visitTypeCast(org.checkerframework.dataflow.cfg.node.TypeCastNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitTypeCast(TypeCastNode, P)","url":"visitTypeCast(org.checkerframework.dataflow.cfg.node.TypeCastNode,P)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitTypeCast(TypeCastTree, AnnotatedTypeMirror)","url":"visitTypeCast(com.sun.source.tree.TypeCastTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"PropagationTreeAnnotator","l":"visitTypeCast(TypeCastTree, AnnotatedTypeMirror)","url":"visitTypeCast(com.sun.source.tree.TypeCastTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesTreeAnnotator","l":"visitTypeCast(TypeCastTree, AnnotatedTypeMirror)","url":"visitTypeCast(com.sun.source.tree.TypeCastTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitTypeCast(TypeCastTree, Node)","url":"visitTypeCast(com.sun.source.tree.TypeCastTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitTypeCast(TypeCastTree, Void)","url":"visitTypeCast(com.sun.source.tree.TypeCastTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitTypeCast(TypeCastTree, Void)","url":"visitTypeCast(com.sun.source.tree.TypeCastTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitTypeCast(TypeCastTree, Void)","url":"visitTypeCast(com.sun.source.tree.TypeCastTree,java.lang.Void)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"visitTypeCast(TypeCastTree, Void)","url":"visitTypeCast(com.sun.source.tree.TypeCastTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitTypeCast(TypeCastTree, Void)","url":"visitTypeCast(com.sun.source.tree.TypeCastTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitTypeCast(TypeCastTree, Void)","url":"visitTypeCast(com.sun.source.tree.TypeCastTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitTypeParameter(TypeParameterTree, Node)","url":"visitTypeParameter(com.sun.source.tree.TypeParameterTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitTypeParameter(TypeParameterTree, Void)","url":"visitTypeParameter(com.sun.source.tree.TypeParameterTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitTypeParameter(TypeParameterTree, Void)","url":"visitTypeParameter(com.sun.source.tree.TypeParameterTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitTypeParameter(TypeParameterTree, Void)","url":"visitTypeParameter(com.sun.source.tree.TypeParameterTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitTypeParameterBounds(AnnotatedTypeMirror.AnnotatedTypeVariable, TypeParameterTree)","url":"visitTypeParameterBounds(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,com.sun.source.tree.TypeParameterTree)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Array(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitTypevar_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Array(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitTypevar_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Array(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedArrayType, Void)","url":"visitTypevar_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Declared(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitTypevar_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Declared(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitTypevar_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitTypevar_Declared(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitTypevar_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Declared(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitTypevar_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Executable(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitTypevar_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Executable(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitTypevar_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Intersection(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitTypevar_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Intersection(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitTypevar_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitTypevar_Intersection(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitTypevar_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Intersection(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitTypevar_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_None(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitTypevar_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_None(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitTypevar_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Null(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitTypevar_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Null(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitTypevar_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Null(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedNullType, Void)","url":"visitTypevar_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Primitive(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitTypevar_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Primitive(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitTypevar_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitTypevar_Primitive(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","url":"visitTypevar_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Primitive(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","url":"visitTypevar_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Type(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror)","url":"visitTypevar_Type(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Typevar(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitTypevar_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Typevar(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitTypevar_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitTypevar_Typevar(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitTypevar_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitTypevar_Typevar(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitTypevar_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Typevar(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitTypevar_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitTypevar_Typevar(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitTypevar_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Union(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitTypevar_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Union(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitTypevar_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitTypevar_Union(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedUnionType, Void)","url":"visitTypevar_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Wildcard(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitTypevar_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Wildcard(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitTypevar_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitTypevar_Wildcard(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitTypevar_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Wildcard(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitTypevar_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror)","url":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror)","url":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElementImpl","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotationMirror)","url":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","url":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopierWithReplacement.Visitor","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","url":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type","c":"TypeVariableSubstitutor.Visitor","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","url":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, P)","url":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, P)","url":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, P)","url":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, P)","url":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, Set<AnnotatedTypeMirror>)","url":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.util.Set)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, Tree)","url":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"visitUnary(UnaryTree, AnnotatedTypeMirror)","url":"visitUnary(com.sun.source.tree.UnaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationParentAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"visitUnary(UnaryTree, AnnotatedTypeMirror)","url":"visitUnary(com.sun.source.tree.UnaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitUnary(UnaryTree, AnnotatedTypeMirror)","url":"visitUnary(com.sun.source.tree.UnaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"PropagationTreeAnnotator","l":"visitUnary(UnaryTree, AnnotatedTypeMirror)","url":"visitUnary(com.sun.source.tree.UnaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitUnary(UnaryTree, Node)","url":"visitUnary(com.sun.source.tree.UnaryTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitUnary(UnaryTree, Void)","url":"visitUnary(com.sun.source.tree.UnaryTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitUnary(UnaryTree, Void)","url":"visitUnary(com.sun.source.tree.UnaryTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitUnary(UnaryTree, Void)","url":"visitUnary(com.sun.source.tree.UnaryTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"visitUnary(UnaryTree, Void)","url":"visitUnary(com.sun.source.tree.UnaryTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitUnary(UnaryTree, Void)","url":"visitUnary(com.sun.source.tree.UnaryTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitUnaryOperation(UnaryOperation, P)","url":"visitUnaryOperation(org.checkerframework.dataflow.expression.UnaryOperation,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitUnaryOperation(UnaryOperation, P)","url":"visitUnaryOperation(org.checkerframework.dataflow.expression.UnaryOperation,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitUnaryOperation(UnaryOperation, Void)","url":"visitUnaryOperation(org.checkerframework.dataflow.expression.UnaryOperation,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Array(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitUnion_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Array(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitUnion_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Declared(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitUnion_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Declared(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitUnion_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitUnion_Declared(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitUnion_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitUnion_Declared(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitUnion_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Executable(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitUnion_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Executable(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitUnion_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Intersection(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitUnion_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Intersection(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitUnion_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitUnion_Intersection(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitUnion_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitUnion_Intersection(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitUnion_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_None(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitUnion_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_None(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitUnion_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Null(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitUnion_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Null(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitUnion_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Primitive(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitUnion_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Primitive(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitUnion_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitUnion_Type(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror)","url":"visitUnion_Type(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Typevar(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitUnion_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Typevar(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitUnion_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitUnion_Typevar(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitUnion_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitUnion_Typevar(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitUnion_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Union(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitUnion_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Union(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitUnion_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitUnion_Union(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitUnion_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitUnion_Union(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","url":"visitUnion_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitUnion_Union(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","url":"visitUnion_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Wildcard(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitUnion_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Wildcard(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitUnion_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitUnion_Wildcard(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitUnion_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitUnion_Wildcard(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitUnion_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"visitUnion(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror)","url":"visitUnion(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitUnion(AnnotatedTypeMirror.AnnotatedUnionType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","url":"visitUnion(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitUnion(AnnotatedTypeMirror.AnnotatedUnionType, P)","url":"visitUnion(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitUnion(AnnotatedTypeMirror.AnnotatedUnionType, P)","url":"visitUnion(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitUnion(AnnotatedTypeMirror.AnnotatedUnionType, P)","url":"visitUnion(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitUnion(AnnotatedTypeMirror.AnnotatedUnionType, Set<AnnotatedTypeMirror>)","url":"visitUnion(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.util.Set)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitUnionType(UnionTypeTree, Node)","url":"visitUnionType(com.sun.source.tree.UnionTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitUnionType(UnionTypeTree, Void)","url":"visitUnionType(com.sun.source.tree.UnionTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitUnionType(UnionTypeTree, Void)","url":"visitUnionType(com.sun.source.tree.UnionTypeTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitUnknown(Unknown, P)","url":"visitUnknown(org.checkerframework.dataflow.expression.Unknown,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitUnknown(Unknown, P)","url":"visitUnknown(org.checkerframework.dataflow.expression.Unknown,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitUnknown(Unknown, Void)","url":"visitUnknown(org.checkerframework.dataflow.expression.Unknown,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitUnsignedRightShift(UnsignedRightShiftNode, P)","url":"visitUnsignedRightShift(org.checkerframework.dataflow.cfg.node.UnsignedRightShiftNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitUnsignedRightShift(UnsignedRightShiftNode, P)","url":"visitUnsignedRightShift(org.checkerframework.dataflow.cfg.node.UnsignedRightShiftNode,P)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitUnsignedRightShift(UnsignedRightShiftNode, TransferInput<CFValue, CFStore>)","url":"visitUnsignedRightShift(org.checkerframework.dataflow.cfg.node.UnsignedRightShiftNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitUnsignedRightShift(UnsignedRightShiftNode, TransferInput<CFValue, CFStore>)","url":"visitUnsignedRightShift(org.checkerframework.dataflow.cfg.node.UnsignedRightShiftNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitUses(UsesTree, Node)","url":"visitUses(com.sun.source.tree.UsesTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitUses(UsesTree, Void)","url":"visitUses(com.sun.source.tree.UsesTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitValueLiteral(ValueLiteral, P)","url":"visitValueLiteral(org.checkerframework.dataflow.expression.ValueLiteral,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitValueLiteral(ValueLiteral, P)","url":"visitValueLiteral(org.checkerframework.dataflow.expression.ValueLiteral,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitValueLiteral(ValueLiteral, Void)","url":"visitValueLiteral(org.checkerframework.dataflow.expression.ValueLiteral,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitValueLiteral(ValueLiteralNode, P)","url":"visitValueLiteral(org.checkerframework.dataflow.cfg.node.ValueLiteralNode,P)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagationTreeAnnotator","l":"visitVariable(VariableTree, AnnotatedTypeMirror)","url":"visitVariable(com.sun.source.tree.VariableTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitVariable(VariableTree, AnnotatedTypeMirror)","url":"visitVariable(com.sun.source.tree.VariableTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesTreeAnnotator","l":"visitVariable(VariableTree, AnnotatedTypeMirror)","url":"visitVariable(com.sun.source.tree.VariableTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitVariable(VariableTree, Node)","url":"visitVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"visitVariable(VariableTree, P)","url":"visitVariable(com.sun.source.tree.VariableTree,P)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"visitVariable(VariableTree, Void)","url":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitVariable(VariableTree, Void)","url":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"visitVariable(VariableTree, Void)","url":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"visitVariable(VariableTree, Void)","url":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"visitVariable(VariableTree, Void)","url":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitVariable(VariableTree, Void)","url":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.Visitor","l":"visitVariable(VariableTree, Void)","url":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitVariable(VariableTree, Void)","url":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitVariable(VariableTree, Void)","url":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitVariable(VariableTree, Void)","url":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitVariableDeclaration(VariableDeclarationNode, P)","url":"visitVariableDeclaration(org.checkerframework.dataflow.cfg.node.VariableDeclarationNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitVariableDeclaration(VariableDeclarationNode, P)","url":"visitVariableDeclaration(org.checkerframework.dataflow.cfg.node.VariableDeclarationNode,P)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitVariableDeclaration(VariableDeclarationNode, TransferInput<V, S>)","url":"visitVariableDeclaration(org.checkerframework.dataflow.cfg.node.VariableDeclarationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitWhileLoop(WhileLoopTree, Node)","url":"visitWhileLoop(com.sun.source.tree.WhileLoopTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessNoInitVisitor","l":"visitWhileLoop(WhileLoopTree, Void)","url":"visitWhileLoop(com.sun.source.tree.WhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitWhileLoop(WhileLoopTree, Void)","url":"visitWhileLoop(com.sun.source.tree.WhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitWhileLoop(WhileLoopTree, Void)","url":"visitWhileLoop(com.sun.source.tree.WhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitWhileLoop(WhileLoopTree, Void)","url":"visitWhileLoop(com.sun.source.tree.WhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitWideningConversion(WideningConversionNode, P)","url":"visitWideningConversion(org.checkerframework.dataflow.cfg.node.WideningConversionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitWideningConversion(WideningConversionNode, P)","url":"visitWideningConversion(org.checkerframework.dataflow.cfg.node.WideningConversionNode,P)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitWideningConversion(WideningConversionNode, TransferInput<V, S>)","url":"visitWideningConversion(org.checkerframework.dataflow.cfg.node.WideningConversionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Array(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitWildcard_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Array(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","url":"visitWildcard_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitWildcard_Array(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedArrayType, Void)","url":"visitWildcard_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitWildcard_Array(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedArrayType, Void)","url":"visitWildcard_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Declared(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitWildcard_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Declared(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","url":"visitWildcard_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitWildcard_Declared(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitWildcard_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitWildcard_Declared(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","url":"visitWildcard_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Executable(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitWildcard_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Executable(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","url":"visitWildcard_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Intersection(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitWildcard_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Intersection(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","url":"visitWildcard_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitWildcard_Intersection(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitWildcard_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitWildcard_Intersection(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","url":"visitWildcard_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_None(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitWildcard_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_None(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","url":"visitWildcard_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Null(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitWildcard_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Null(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","url":"visitWildcard_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Primitive(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitWildcard_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Primitive(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","url":"visitWildcard_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitWildcard_Primitive(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","url":"visitWildcard_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitWildcard_Primitive(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","url":"visitWildcard_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitWildcard_Type(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror)","url":"visitWildcard_Type(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Typevar(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitWildcard_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Typevar(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","url":"visitWildcard_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitWildcard_Typevar(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitWildcard_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitWildcard_Typevar(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitWildcard_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitWildcard_Typevar(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","url":"visitWildcard_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Union(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitWildcard_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Union(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","url":"visitWildcard_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitWildcard_Union(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","url":"visitWildcard_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Wildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitWildcard_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Wildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitWildcard_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitWildcard_Wildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","url":"visitWildcard_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitWildcard_Wildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitWildcard_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitWildcard_Wildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitWildcard_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitWildcard_Wildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitWildcard_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror)","url":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror)","url":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElementImpl","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotationMirror)","url":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","url":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, P)","url":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, P)","url":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, P)","url":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, P)","url":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, Set<AnnotatedTypeMirror>)","url":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.util.Set)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, Tree)","url":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"PropagationTypeAnnotator","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, Void)","url":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitWildcard(WildcardTree, Node)","url":"visitWildcard(com.sun.source.tree.WildcardTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitWildcard(WildcardTree, Void)","url":"visitWildcard(com.sun.source.tree.WildcardTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitWildcard(WildcardTree, Void)","url":"visitWildcard(com.sun.source.tree.WildcardTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitYield17(Tree, Node)","url":"visitYield17(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitYield17(Tree, Void)","url":"visitYield17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitYield17(Tree, Void)","url":"visitYield17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitYield17(Tree, Void)","url":"visitYield17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"visualize(CFGVisualizer<?, BusyExprStore, ?>)","url":"visualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"visualize(CFGVisualizer<?, ConstantPropagationStore, ?>)","url":"visualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"visualize(CFGVisualizer<?, LiveVarStore, ?>)","url":"visualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"visualize(CFGVisualizer<?, ReachingDefinitionStore, ?>)","url":"visualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store","l":"visualize(CFGVisualizer<?, S, ?>)","url":"visualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"visualize(CFGVisualizer<?, S, ?>)","url":"visualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualize(ControlFlowGraph, Block, Analysis<V, S, T>)","url":"visualize(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualize(ControlFlowGraph, Block, Analysis<V, S, T>)","url":"visualize(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualize(ControlFlowGraph, Block, Analysis<V, S, T>)","url":"visualize(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeBlock(Block, Analysis<V, S, T>)","url":"visualizeBlock(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeBlock(Block, Analysis<V, S, T>)","url":"visualizeBlock(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeBlock(Block, Analysis<V, S, T>)","url":"visualizeBlock(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeBlockHelper(Block, Analysis<V, S, T>, String)","url":"visualizeBlockHelper(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeBlockNode(Node, Analysis<V, S, T>)","url":"visualizeBlockNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeBlockNode(Node, Analysis<V, S, T>)","url":"visualizeBlockNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeBlockTransferInputAfter(Block, Analysis<V, S, T>)","url":"visualizeBlockTransferInputAfter(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeBlockTransferInputAfter(Block, Analysis<V, S, T>)","url":"visualizeBlockTransferInputAfter(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeBlockTransferInputAfter(Block, Analysis<V, S, T>)","url":"visualizeBlockTransferInputAfter(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeBlockTransferInputBefore(Block, Analysis<V, S, T>)","url":"visualizeBlockTransferInputBefore(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeBlockTransferInputBefore(Block, Analysis<V, S, T>)","url":"visualizeBlockTransferInputBefore(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeBlockTransferInputBefore(Block, Analysis<V, S, T>)","url":"visualizeBlockTransferInputBefore(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeBlockTransferInputHelper(AbstractCFGVisualizer.VisualizeWhere, Block, Analysis<V, S, T>, String)","url":"visualizeBlockTransferInputHelper(org.checkerframework.dataflow.cfg.visualize.AbstractCFGVisualizer.VisualizeWhere,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeConditionalBlock(ConditionalBlock)","url":"visualizeConditionalBlock(org.checkerframework.dataflow.cfg.block.ConditionalBlock)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeConditionalBlock(ConditionalBlock)","url":"visualizeConditionalBlock(org.checkerframework.dataflow.cfg.block.ConditionalBlock)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeConditionalBlock(ConditionalBlock)","url":"visualizeConditionalBlock(org.checkerframework.dataflow.cfg.block.ConditionalBlock)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeEdge(Object, Object, String)","url":"visualizeEdge(java.lang.Object,java.lang.Object,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeEdge(Object, Object, String)","url":"visualizeEdge(java.lang.Object,java.lang.Object,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeEdge(Object, Object, String)","url":"visualizeEdge(java.lang.Object,java.lang.Object,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeGraph(ControlFlowGraph, Block, Analysis<V, S, T>)","url":"visualizeGraph(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeGraphFooter()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeGraphFooter()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeGraphFooter()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeGraphHeader()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeGraphHeader()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeGraphHeader()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeGraphWithoutHeaderAndFooter(ControlFlowGraph, Block, Analysis<V, S, T>)","url":"visualizeGraphWithoutHeaderAndFooter(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeNodes(Set<Block>, ControlFlowGraph, Analysis<V, S, T>)","url":"visualizeNodes(java.util.Set,org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeNodes(Set<Block>, ControlFlowGraph, Analysis<V, S, T>)","url":"visualizeNodes(java.util.Set,org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeNodes(Set<Block>, ControlFlowGraph, Analysis<V, S, T>)","url":"visualizeNodes(java.util.Set,org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeSpecialBlock(SpecialBlock)","url":"visualizeSpecialBlock(org.checkerframework.dataflow.cfg.block.SpecialBlock)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeSpecialBlock(SpecialBlock)","url":"visualizeSpecialBlock(org.checkerframework.dataflow.cfg.block.SpecialBlock)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeSpecialBlock(SpecialBlock)","url":"visualizeSpecialBlock(org.checkerframework.dataflow.cfg.block.SpecialBlock)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeSpecialBlockHelper(SpecialBlock)","url":"visualizeSpecialBlockHelper(org.checkerframework.dataflow.cfg.block.SpecialBlock)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeStore(S)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStore(S)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStoreArrayVal(ArrayAccess, V)","url":"visualizeStoreArrayVal(org.checkerframework.dataflow.expression.ArrayAccess,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeStoreArrayVal(ArrayAccess, V)","url":"visualizeStoreArrayVal(org.checkerframework.dataflow.expression.ArrayAccess,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeStoreArrayVal(ArrayAccess, V)","url":"visualizeStoreArrayVal(org.checkerframework.dataflow.expression.ArrayAccess,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStoreClassVals(ClassName, V)","url":"visualizeStoreClassVals(org.checkerframework.dataflow.expression.ClassName,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeStoreClassVals(ClassName, V)","url":"visualizeStoreClassVals(org.checkerframework.dataflow.expression.ClassName,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeStoreClassVals(ClassName, V)","url":"visualizeStoreClassVals(org.checkerframework.dataflow.expression.ClassName,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStoreFieldVal(FieldAccess, V)","url":"visualizeStoreFieldVal(org.checkerframework.dataflow.expression.FieldAccess,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeStoreFieldVal(FieldAccess, V)","url":"visualizeStoreFieldVal(org.checkerframework.dataflow.expression.FieldAccess,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeStoreFieldVal(FieldAccess, V)","url":"visualizeStoreFieldVal(org.checkerframework.dataflow.expression.FieldAccess,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStoreKeyVal(String, Object)","url":"visualizeStoreKeyVal(java.lang.String,java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeStoreKeyVal(String, Object)","url":"visualizeStoreKeyVal(java.lang.String,java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeStoreKeyVal(String, Object)","url":"visualizeStoreKeyVal(java.lang.String,java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStoreLocalVar(LocalVariable, V)","url":"visualizeStoreLocalVar(org.checkerframework.dataflow.expression.LocalVariable,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeStoreLocalVar(LocalVariable, V)","url":"visualizeStoreLocalVar(org.checkerframework.dataflow.expression.LocalVariable,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeStoreLocalVar(LocalVariable, V)","url":"visualizeStoreLocalVar(org.checkerframework.dataflow.expression.LocalVariable,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStoreMethodVals(MethodCall, V)","url":"visualizeStoreMethodVals(org.checkerframework.dataflow.expression.MethodCall,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeStoreMethodVals(MethodCall, V)","url":"visualizeStoreMethodVals(org.checkerframework.dataflow.expression.MethodCall,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeStoreMethodVals(MethodCall, V)","url":"visualizeStoreMethodVals(org.checkerframework.dataflow.expression.MethodCall,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStoreThisVal(V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeStoreThisVal(V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeStoreThisVal(V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeWithAction(ControlFlowGraph, Block, Analysis<V, S, T>)","url":"visualizeWithAction(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeWithAction(ControlFlowGraph, Block, Analysis<V, S, T>)","url":"visualizeWithAction(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeWithAction(ControlFlowGraph, Block, Analysis<V, S, T>)","url":"visualizeWithAction(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"VOID"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"VoidVisitorWithDefaultAction()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"warnAboutIrrelevantJavaTypes(List<? extends AnnotationTree>, Tree)","url":"warnAboutIrrelevantJavaTypes(java.util.List,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"Warning"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"warning(FormatterTreeUtil.Result<?>, String, Object...)","url":"warning(org.checkerframework.checker.formatter.FormatterTreeUtil.Result,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"warning(FormatterTreeUtil.Result<?>, String, Object...)","url":"warning(org.checkerframework.checker.formatter.FormatterTreeUtil.Result,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"warnRedundantAnnotations(Tree, AnnotatedTypeMirror)","url":"warnRedundantAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"warnUnneededSuppressions()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"warnUnneededSuppressions()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"warnUnneededSuppressions(Set<Element>, Set<String>, Set<String>)","url":"warnUnneededSuppressions(java.util.Set,java.util.Set,java.util.Set)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"wasRaw()"},{"p":"org.checkerframework.framework.qual","c":"Unused","l":"when()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"widen(Node, TypeMirror)","url":"widen(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"widenedNumericType(TypeKind, TypeKind)","url":"widenedNumericType(javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"widenedNumericType(TypeMirror, TypeMirror)","url":"widenedNumericType(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundQualifierHierarchy","l":"widenedUpperBound(AnnotationMirror, AnnotationMirror)","url":"widenedUpperBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"widenedUpperBound(AnnotationMirror, AnnotationMirror)","url":"widenedUpperBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"widenedUpperBound(BusyExprStore)","url":"widenedUpperBound(org.checkerframework.dataflow.busyexpr.BusyExprStore)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"widenedUpperBound(ConstantPropagationStore)","url":"widenedUpperBound(org.checkerframework.dataflow.constantpropagation.ConstantPropagationStore)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"widenedUpperBound(LiveVarStore)","url":"widenedUpperBound(org.checkerframework.dataflow.livevariable.LiveVarStore)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"widenedUpperBound(ReachingDefinitionStore)","url":"widenedUpperBound(org.checkerframework.dataflow.reachingdef.ReachingDefinitionStore)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store","l":"widenedUpperBound(S)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"widenedUpperBound(S)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils.PrimitiveConversionKind","l":"WIDENING"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"WideningConversionNode(Tree, Node, TypeMirror)","url":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"widenUpperBound(UBQualifier)","url":"widenUpperBound(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"widenUpperBound(UBQualifier)","url":"widenUpperBound(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"widenUpperBound(V)"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"WILDCARD"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_WILDCARD"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"wildcardToTypeParam(Type.WildcardType)","url":"wildcardToTypeParam(com.sun.tools.javac.code.Type.WildcardType)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"wildcardToTypeParam(WildcardType)","url":"wildcardToTypeParam(javax.lang.model.type.WildcardType)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"wildLowerBound(TypeMirror, ProcessingEnvironment)","url":"wildLowerBound(javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"wildUpperBound(TypeMirror, ProcessingEnvironment)","url":"wildUpperBound(javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.Within","l":"Within(Heuristics.Matcher)","url":"%3Cinit%3E(org.checkerframework.framework.util.Heuristics.Matcher)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.WithinTrueBranch","l":"WithinTrueBranch(Heuristics.Matcher)","url":"%3Cinit%3E(org.checkerframework.framework.util.Heuristics.Matcher)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"withoutAssignment(Tree.Kind)","url":"withoutAssignment(com.sun.source.tree.Tree.Kind)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"withoutClose(AnnotationMirror)","url":"withoutClose(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"withoutParens(ExpressionTree)","url":"withoutParens(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"withoutParensOrCasts(ExpressionTree)","url":"withoutParensOrCasts(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"worklist"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"Worklist(Analysis.Direction)","url":"%3Cinit%3E(org.checkerframework.dataflow.analysis.Analysis.Direction)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"wrapUnsigned(@org.checkerframework.checker.signedness.qual.Unsigned byte[], int, int)","url":"wrapUnsigned(@org.checkerframework.checker.signedness.qual.Unsignedbyte[],int,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"wrapUnsigned(@org.checkerframework.checker.signedness.qual.Unsigned byte[])","url":"wrapUnsigned(@org.checkerframework.checker.signedness.qual.Unsignedbyte[])"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"writeDiagnostics(File, File, List<String>, List<String>, List<String>, List<String>, boolean, boolean)","url":"writeDiagnostics(java.io.File,java.io.File,java.util.List,java.util.List,java.util.List,java.util.List,boolean,boolean)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"writeJavacArguments(File, Iterable<? extends JavaFileObject>, Iterable<String>, Iterable<String>)","url":"writeJavacArguments(java.io.File,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"writeLines(File, Iterable<?>)","url":"writeLines(java.io.File,java.lang.Iterable)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizeLauncher","l":"writeStringOfCFG(String, String, String, String, Analysis<?, ?, ?>)","url":"writeStringOfCFG(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"writeTestConfiguration(File, TestConfiguration)","url":"writeTestConfiguration(java.io.File,org.checkerframework.framework.test.TestConfiguration)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"writeUnsigned(RandomAccessFile, @org.checkerframework.checker.signedness.qual.Unsigned byte[], int, int)","url":"writeUnsigned(java.io.RandomAccessFile,@org.checkerframework.checker.signedness.qual.Unsignedbyte[],int,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"writeUnsignedByte(RandomAccessFile, @org.checkerframework.checker.signedness.qual.Unsigned byte)","url":"writeUnsignedByte(java.io.RandomAccessFile,@org.checkerframework.checker.signedness.qual.Unsignedbyte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"writeUnsignedChar(RandomAccessFile, @org.checkerframework.checker.signedness.qual.Unsigned char)","url":"writeUnsignedChar(java.io.RandomAccessFile,@org.checkerframework.checker.signedness.qual.Unsignedchar)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"writeUnsignedInt(RandomAccessFile, @org.checkerframework.checker.signedness.qual.Unsigned int)","url":"writeUnsignedInt(java.io.RandomAccessFile,@org.checkerframework.checker.signedness.qual.Unsignedint)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"writeUnsignedLong(RandomAccessFile, @org.checkerframework.checker.signedness.qual.Unsigned long)","url":"writeUnsignedLong(java.io.RandomAccessFile,@org.checkerframework.checker.signedness.qual.Unsignedlong)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"writeUnsignedShort(RandomAccessFile, @org.checkerframework.checker.signedness.qual.Unsigned short)","url":"writeUnsignedShort(java.io.RandomAccessFile,@org.checkerframework.checker.signedness.qual.Unsignedshort)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"yieldTreeGetValue(Tree)","url":"yieldTreeGetValue(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner","l":"yieldVisitor"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner.YieldVisitor","l":"YieldVisitor()","url":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"yocto"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"yotta"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"zepto"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"ZERO"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"ZERO"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"ZERO"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"zetta"}]